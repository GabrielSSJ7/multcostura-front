{"version":3,"file":"static/webpack/static\\development\\pages\\admin\\home.js.f272630e07dda162014e.hot-update.js","sources":["webpack:///./src/components/admin/institutional/BannerFixed.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport FileInput from \"../../utils/FileInput\";\r\n\r\nimport { Button } from \"../../../static/styled-components/base\";\r\nimport {\r\n  getBannerFixed,\r\n  saveBannerFixed,\r\n  deleteBannerFixed\r\n} from \"../../../utils/banner\";\r\nimport { validateImage } from '../../../utils/images'\r\nimport imageNotFound from \"../../../static/images/image-404.jpg\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function BannerFixed({ type }) {\r\n  const imageMessageError = `Extensão do arquivo enviado é inválido. Extensões permitidas ${process.env.imageExtensionPermitted.toString()}, com no máximo 10MB`\r\n  const [banner, setBanner] = useState(imageNotFound);\r\n  const [bannerBase, setBannerBase] = useState(null)\r\n  const [file, setFile] = useState(null);\r\n  const [snackBar, setSnackBar] = useState({\r\n    result: \"success\",\r\n    open: false,\r\n    message: \"\"\r\n  });\r\n\r\n  function handleChange(e) {\r\n    if (validateImage(process.env.imageExtensionPermitted, 10000, e.target.files[0])) {\r\n      setBanner(URL.createObjectURL(e.target.files[0]));\r\n      setFile(e.target.files[0]);\r\n    } else {\r\n      setSnackBar({\r\n        open: true,\r\n        result: 'error',\r\n        message: imageMessageError\r\n      })\r\n    }\r\n  }\r\n\r\n  function handleClose() {\r\n    setSnackBar({\r\n      ...snackBar,\r\n      open: false\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    function asynFunc() {\r\n      getBannerFixed(type, function(err, d) {\r\n        if (err) {\r\n          setSnackbar({\r\n            open: true,\r\n            result: \"error\",\r\n            message: err\r\n          });\r\n          return;\r\n        }\r\n        setBannerBase(d ? d : null)\r\n        setBanner(d ? d : imageNotFound);\r\n      });\r\n    }\r\n\r\n    asynFunc();\r\n\r\n    return () => {};\r\n  }, []);\r\n\r\n  function saveBanner() {\r\n    saveBannerFixed(type, file, function(err, r) {\r\n      if (err) {\r\n        setSnackBar({\r\n          open: true,\r\n          result: \"error\",\r\n          message: err\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n      setSnackBar({\r\n        open: true,\r\n        result: \"success\",\r\n        message: \"Banner salvo com sucesso!\"\r\n      });\r\n      setFile(null);\r\n    });\r\n  }\r\n\r\n  function deleteBanner() {\r\n    deleteBannerFixed(type, function(err, r) {\r\n      if (err) {\r\n        setSnackBar({\r\n          open: true,\r\n          result: \"error\",\r\n          message: err\r\n        });\r\n\r\n        return;\r\n      }\r\n      setSnackBar({\r\n        open: true,\r\n        result: \"success\",\r\n        message: \"Banner excluido com sucesso!\"\r\n      });\r\n      setFile(null);\r\n      setBanner(imageNotFound);\r\n    });\r\n  }\r\n  return (\r\n    <Column>\r\n      <div onClick={() => location.reload()} className=\"arrow-back\" style={{ background:\"#960d03\", borderRadius: \"5px\", padding: \"5px\", maxWidth: \"60px\", marginLeft: \"10px\", marginBottom: \"5px\", display: 'flex', flexDirection: \"row\" }}>\r\n          <FontAwesomeIcon icon={faArrowLeft} style={{ color: \"white\" }} />\r\n          <span style={{ color: \"white\" }}>Voltar</span>\r\n        </div>\r\n        <style>\r\n          {`  \r\n\r\n            .arrow-back {\r\n              transition: .5s;\r\n            }\r\n\r\n            .arrow-back:hover {\r\n              cursor: pointer;\r\n              opacity: .8;\r\n            }\r\n          `}\r\n        </style>\r\n      <Row>\r\n        <Wrapper>\r\n          {banner != imageNotFound ? (\r\n            <BtnDelete onClick={deleteBanner}>Excluir banner</BtnDelete>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Snackbar\r\n            open={snackBar.open}\r\n            autoHideDuration={2500}\r\n            onClose={handleClose}\r\n          >\r\n            <Alert severity={snackBar.result}>{snackBar.message}</Alert>\r\n          </Snackbar>\r\n\r\n          <Slide src={banner} />\r\n        </Wrapper>\r\n      </Row>\r\n      <Row>\r\n        <FileInput\r\n          handleChange={handleChange}\r\n          labelInputFile=\"Enviar imagem\"\r\n          id=\"bannerFixed\"\r\n          name=\"bannerFixed\"\r\n          labelWidth=\"200px\"\r\n          labelHeight=\"80px\"\r\n          maxWidth=\"100px\"\r\n          file={file}\r\n          cleanFileInput={() => {\r\n            setFile(null);\r\n            setBanner(bannerBase ? bannerBase : imageNotFound);\r\n          }}\r\n        />\r\n      </Row>\r\n      <Row style={{ justifyContent: \"center\" }}>\r\n        <Button style={{ width: \"50%\" }} onClick={() => saveBanner()}>\r\n          Salvar\r\n        </Button>\r\n      </Row>\r\n    </Column>\r\n  );\r\n}\r\n\r\nconst BtnDelete = styled.div`\r\n  background: #960d03;\r\n  padding: 5px;\r\n  position: absolute;\r\n  z-index: 9;\r\n  left: 10px;\r\n  top: 0;\r\n  cursor: pointer;\r\n  color: white;\r\n  text-transform: uppercase;\r\n  font-size: 0.8rem;\r\n  border-radius: 5px;\r\n  transition: 0.3s;\r\n  :hover {\r\n    opacity: 0.9;\r\n    padding: 5px 6px;\r\n  }\r\n`;\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: ${props => props.height};\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  position: relative;\r\n  height: 400px;\r\n`;\r\n\r\nconst Slide = styled.div`\r\n\tbackground-image: url('${props => props.src}');\r\n  //background-size: 100%;\r\n  //eight: 400px;\r\n  width: 100%;\r\n\tbackground-position: center;\r\n\tbackground-repeat: no-repeat;\r\n\twidth: ${props => props.width};\r\n\theight: ${props => props.height};\r\n\ttransform: translateX(${props => props.translate}px);\r\n\ttransition: transform 0.4s ease-in-out;\r\n\tposition: relative;\r\n`;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAKA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAMA;AACA;AACA;AAHA;AALA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAkBA;AAAA;AAKA;AACA;AACA;AAHA;AAKA;AAAA;AAGA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAeA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAEA;AAAA;AAOA;AAAA;AAAA;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;;;;A","sourceRoot":""}