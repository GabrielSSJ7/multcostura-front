{"ast":null,"code":"import setApi from \"../api\";\nimport { fieldValidation, validateImage } from \"../utils/validate\";\nexport function getMachines(cb, data) {\n  const filter = data ? data : {};\n  setApi().get(`/machine?categories=${filter.category}&manufacturer=${filter.manufacturer}&search=${filter.search}`).then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function getMachine(id, cb) {\n  setApi().get(`/machine/${id}`).then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport async function getOptions(cb) {\n  try {\n    const manufacturers = await setApi().get(\"/manufacturer\");\n    const categories = await setApi().get(\"/categories\");\n    cb(null, {\n      manufacturers,\n      categories\n    });\n  } catch (e) {\n    cb(e);\n  }\n}\nexport function deleteImage(id, type, image, cb) {\n  setApi().delete(`/images?id=${id}&type=${type}&image=${image}`).then(response => {\n    cb(null);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport async function updateMachine(machine, machineFiles, sewingFile, prodRefFiles, files, cb) {\n  console.log(sewingFile);\n  const {\n    id,\n    name,\n    description,\n    mainFeatures,\n    specifications,\n    category,\n    manufacturer\n  } = machine;\n  const formData = new FormData();\n  console.log('specifications', JSON.stringify(specifications));\n  formData.append(\"name\", name);\n  formData.append(\"description\", description);\n  formData.append(\"mainFeatures\", mainFeatures);\n  formData.append(\"specifications\", specifications ? Object.keys(specifications).length > 0 ? JSON.stringify(specifications) : null : null);\n  formData.append(\"category\", category);\n  formData.append(\"manufacturer\", manufacturer);\n  formData.append(\"video\", machine.video);\n  formData.append('folheto', files.folheto);\n  formData.append('manual', files.manual);\n  const machineFilesKeys = Object.keys(machineFiles);\n  machineFilesKeys.forEach(mkey => {\n    formData.append(\"machines\", machineFiles[mkey]);\n  });\n  formData.append(\"sewingType\", sewingFile);\n  const prodRefFilesKeys = Object.keys(prodRefFiles);\n  prodRefFilesKeys.forEach(prfkey => {\n    formData.append(\"productReferences\", prodRefFiles[prfkey]);\n  });\n  setApi().put(\"/machine/\" + id, formData).then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function addMachine(machine, machineFiles, sewingTypeFile, refProdFiles, files, cb) {\n  const formData = new FormData();\n  const machineFilesKeys = Object.keys(machineFiles);\n  let hasError = [false, false, false];\n  machineFilesKeys.forEach(mkey => {\n    hasError[0] = !validateImage([\"png\", \"jpg\", \"jpeg\", \"svg\", \"gif\", \"webp\"], 10000, machineFiles[mkey]);\n    formData.append(\"machines\", machineFiles[mkey]);\n  });\n  const refProdFilesKey = Object.keys(refProdFiles);\n  refProdFilesKey.forEach(rfKey => {\n    hasError[1] = !validateImage([\"png\", \"jpg\", \"jpeg\", \"svg\", \"gif\", \"webp\"], 10000, refProdFiles[rfKey]);\n    formData.append(\"productReferences\", refProdFiles[rfKey]);\n  });\n  hasError[2] = !validateImage([\"png\", \"jpg\", \"jpeg\", \"svg\", \"gif\", \"webp\"], 10000, sewingTypeFile);\n\n  if (hasError.includes(true)) {\n    return cb(\"Você precisa subir imagens png, jpg, jpeg, svg, gif, webp com no máximo 10MB\");\n  }\n\n  const fieldError = fieldValidation({\n    nome: machine.name,\n    fabricante: machine.manufacturer,\n    subtítulo: machine.description,\n    categoria: machine.category,\n    características: machine.mainFeatures\n  });\n\n  if (fieldError.return) {\n    formData.append(\"name\", machine.name);\n    formData.append(\"manufacturer\", machine.manufacturer);\n    formData.append(\"description\", machine.description);\n    formData.append(\"category\", machine.category);\n    formData.append(\"mainFeatures\", machine.mainFeatures);\n    formData.append(\"specifications\", JSON.stringify(machine.specifications));\n    formData.append(\"video\", machine.video);\n    formData.append('folheto', files.folheto);\n    formData.append('manual', files.manual);\n    setApi().post(`machine`, formData).then(response => {\n      cb(null, response.data);\n    }).catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n  } else {\n    return cb(`${fieldError.message} ${fieldError.field}`);\n  }\n}\nexport function deleteMachine(id, cb) {\n  setApi().delete(`/machine/${id}`).then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}","map":null,"metadata":{},"sourceType":"module"}