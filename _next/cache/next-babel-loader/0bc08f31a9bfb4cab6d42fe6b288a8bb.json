{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button } from \"../../../static/styled-components/base\";\nimport { Creators as ManufacturerCreators } from \"../../../ducks/manufacturer\";\nimport { Creators as UtilsCreators } from \"../../../ducks/utils\";\nimport { getManufacturers, deleteManufacturer, editManufacturer } from \"../../../utils/manufacturers\";\nimport Upload from \"../../utils/Upload\";\nimport Message from \"../../utils/Message\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nexport default function manufacturers() {\n  const {\n    message,\n    messageType,\n    messageColor\n  } = useSelector(state => state.Utils);\n  const {\n    manufacturers\n  } = useSelector(state => state.Manufacturer);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: diag,\n    1: setDiag\n  } = useState(false);\n  const {\n    0: manufacturerToEdit,\n    1: setManufacturerToEdit\n  } = useState({});\n  const {\n    0: file,\n    1: setFile\n  } = useState(null);\n  const {\n    0: key,\n    1: setKey\n  } = useState(Date.now());\n  const dispatch = useDispatch();\n\n  function handleChange(event) {\n    const file = event.target.files[0];\n\n    if (file) {\n      setFile(file);\n    } else {\n      setFile(null);\n    }\n  }\n\n  useEffect(() => {\n    function _getManufacturers() {\n      getManufacturers(function (err, mans) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage());\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n\n        dispatch(ManufacturerCreators.loadManufacturers(mans));\n      });\n    }\n\n    _getManufacturers();\n  }, []);\n\n  function handleClose() {\n    setFile(null);\n    setDiag(false);\n    setManufacturerToEdit({});\n  }\n\n  function handleOpen(manufacturer) {\n    setManufacturerToEdit(manufacturer);\n    setDiag(true);\n  }\n\n  function editMan(man) {\n    editManufacturer(man.id, _objectSpread({}, man, {\n      file\n    }), function (err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        setFile(null);\n        handleClose();\n        return;\n      }\n\n      getManufacturers(function (err, mans) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage(err));\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n\n        dispatch(ManufacturerCreators.loadManufacturers(mans));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Editado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      handleClose();\n      setVisible(true);\n    });\n  }\n\n  function delMan(id) {\n    deleteManufacturer(id, function (err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        return;\n      }\n\n      getManufacturers(function (err, mans) {\n        dispatch(ManufacturerCreators.loadManufacturers(mans));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Deletado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      setVisible(true);\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Lista de fabricantes\"), __jsx(\"div\", null, __jsx(Dialog, {\n    open: diag,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, \"Editar categoria\"), __jsx(DialogContent, null, __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Nome\",\n    type: \"text\",\n    value: manufacturerToEdit.name,\n    onChange: e => setManufacturerToEdit(_objectSpread({}, manufacturerToEdit, {\n      name: e.target.value\n    })),\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"description\",\n    label: \"Descri\\xE7\\xE3o\",\n    type: \"text\",\n    value: manufacturerToEdit.description,\n    onChange: e => setManufacturerToEdit(_objectSpread({}, manufacturerToEdit, {\n      description: e.target.value\n    })),\n    fullWidth: true\n  }), __jsx(ImageContainer, null, __jsx(Upload, {\n    id: \"editMan\",\n    file: file,\n    name: \"editMan\",\n    handleChange: handleChange,\n    labelInputFile: \"Logo fabricante\",\n    imageURL: manufacturerToEdit.logo,\n    key: key\n  }))), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Cancelar\"), __jsx(Button, {\n    onClick: () => editMan(manufacturerToEdit),\n    color: \"primary\"\n  }, \"Salvar\")))), __jsx(DivListCategories, null, manufacturers.map((manufacturer, id) => __jsx(ManufacturerContainer, {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    style: {\n      borderBottom: \"1px solid lightgrey\"\n    },\n    key: id\n  }, __jsx(ManufacturerContainer, {\n    flexDirection: \"column\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"column\"\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontWeight: \"200\"\n    }\n  }, \"Nome: \", manufacturer.name), __jsx(\"p\", {\n    style: {\n      fontWeight: \"200\"\n    }\n  }, \"Descri\\xE7\\xE3o: \", manufacturer.description), __jsx(\"p\", null, \"Logo:\", __jsx(\"span\", {\n    style: {\n      marginLeft: \"10px\"\n    }\n  }, __jsx(\"img\", {\n    src: manufacturer.logo,\n    style: {\n      width: \"120px\"\n    }\n  })))), __jsx(ManufacturerContainer, {\n    flexDirection: \"column\",\n    style: {\n      marginRight: \"10px\",\n      marginLeft: \"10px\"\n    }\n  }, __jsx(Button, {\n    onClick: () => handleOpen(manufacturer)\n  }, \"Editar\"), __jsx(Button, {\n    onClick: () => delMan(manufacturer.id)\n  }, \"Apagar\"))))), visible ? __jsx(Message, {\n    result: messageType,\n    color: messageColor,\n    message: message\n  }) : \"\");\n}\nexport const Hr = styled.hr.withConfig({\n  displayName: \"ListManufacturers__Hr\",\n  componentId: \"sc-31sht8-0\"\n})([\"width:50%;\"]);\nexport const Subcontainer = styled.div.withConfig({\n  displayName: \"ListManufacturers__Subcontainer\",\n  componentId: \"sc-31sht8-1\"\n})([\"padding:0 15px;\"]);\nexport const ImageContainer = styled.div.withConfig({\n  displayName: \"ListManufacturers__ImageContainer\",\n  componentId: \"sc-31sht8-2\"\n})([\"img{max-width:220px;display:block;margin:10px auto;}\"]);\nexport const DivListCategories = styled.div.withConfig({\n  displayName: \"ListManufacturers__DivListCategories\",\n  componentId: \"sc-31sht8-3\"\n})([\"max-height:550px;overflow:auto;::-webkit-scrollbar{width:10px;}::-webkit-scrollbar-track{background:#f1f1f1;}::-webkit-scrollbar-thumb{background:rgb(129,22,27);}::-webkit-scrollbar-thumb:hover{background:#555;}\"]);\nexport const ManufacturerContainer = styled.div.withConfig({\n  displayName: \"ListManufacturers__ManufacturerContainer\",\n  componentId: \"sc-31sht8-4\"\n})([\"display:flex;flex-direction:\", \";justify-content:\", \";\"], props => props.flexDirection, props => props.justifyContent);","map":null,"metadata":{},"sourceType":"module"}