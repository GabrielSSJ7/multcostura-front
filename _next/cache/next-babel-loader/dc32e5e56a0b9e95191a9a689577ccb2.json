{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link, Router } from \"../../../../routes\";\nimport { Button } from \"../../../static/styled-components/base\";\nimport { getCategories, deleteCategory, editCategory } from \"../../../utils/categories\";\nimport { Creators as UtilsCreators } from \"../../../ducks/utils\";\nimport { Creators as CategoriesCreators } from \"../../../ducks/categories\";\nimport { Creators as UploadCreators } from \"../../../ducks/upload\";\nimport Message from \"../../utils/Message\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TextArea from \"@material-ui/core/TextareaAutosize\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Upload from \"../../utils/UploadRedux\";\nvar reactCtx = React.createContext({});\nexport default function ListCategories() {\n  var _useSelector = useSelector(function (state) {\n    return state.Categories;\n  }),\n      categories = _useSelector.categories;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.Utils;\n  }),\n      message = _useSelector2.message,\n      messageType = _useSelector2.messageType,\n      messageColor = _useSelector2.messageColor;\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState(false),\n      diag = _useState2[0],\n      setDiag = _useState2[1];\n\n  var _useState3 = useState({}),\n      categoryToEdit = _useState3[0],\n      setcategoryToEdit = _useState3[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    function asyncFunc() {\n      getCategories(function (err, categories) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage(err));\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          setVisible(true);\n          return;\n        }\n\n        dispatch(CategoriesCreators.loadCategories(categories));\n      });\n    }\n\n    asyncFunc();\n    return function () {};\n  }, []);\n\n  function editCat(cat) {\n    editCategory(cat.id, _objectSpread({}, cat), function (err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        handleClose();\n        return;\n      }\n\n      getCategories(function (err, categories) {\n        dispatch(CategoriesCreators.loadCategories(categories));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Editado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      handleClose();\n      setVisible(true);\n    });\n  }\n\n  function delCat(id) {\n    deleteCategory(id, function (err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        return;\n      }\n\n      getCategories(function (err, categories) {\n        dispatch(CategoriesCreators.loadCategories(categories));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Deletado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      setVisible(true);\n    });\n  }\n\n  function handleClose() {\n    setDiag(false);\n    setcategoryToEdit({});\n  }\n\n  function handleOpen(category) {\n    setcategoryToEdit(category);\n    setDiag(true);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Listar categorias\"), __jsx(\"div\", null, __jsx(Dialog, {\n    open: diag,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, \"Editar categoria\"), __jsx(DialogContent, null, __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Nome\",\n    type: \"text\",\n    value: categoryToEdit.name,\n    onChange: function onChange(e) {\n      return setcategoryToEdit(_objectSpread({}, categoryToEdit, {\n        name: e.target.value\n      }));\n    },\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"description\",\n    label: \"Descri\\xE7\\xE3o\",\n    type: \"text\",\n    value: categoryToEdit.description,\n    onChange: function onChange(e) {\n      return setcategoryToEdit(_objectSpread({}, categoryToEdit, {\n        description: e.target.value\n      }));\n    },\n    fullWidth: true\n  })), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Cancelar\"), __jsx(Button, {\n    onClick: function onClick() {\n      return editCat(categoryToEdit);\n    },\n    color: \"primary\"\n  }, \"Salvar\")))), __jsx(DivListCategories, null, categories.map(function (category, id) {\n    return __jsx(CategoryContainer, {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      style: {\n        borderBottom: \"2px solid lightgrey\",\n        marginTop: \"3%\",\n        marginBottom: \"3%\"\n      },\n      key: id\n    }, __jsx(CategoryContainer, {\n      flexDirection: \"column\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"column\"\n      }\n    }, __jsx(\"p\", {\n      style: {\n        fontWeight: \"200\"\n      }\n    }, \"Nome: \", category.name), __jsx(\"p\", {\n      style: {\n        fontWeight: \"200\"\n      }\n    }, \"Descri\\xE7\\xE3o: \", category.description)), __jsx(CategoryContainer, {\n      flexDirection: \"column\",\n      style: {\n        marginRight: \"10px\",\n        marginLeft: \"10px\"\n      }\n    }, __jsx(Button, {\n      onClick: function onClick() {\n        return handleOpen(category);\n      }\n    }, \"Editar Categoria\"), __jsx(Button, {\n      onClick: function onClick() {\n        return delCat(category.id);\n      }\n    }, \"Apagar Categoria\"), __jsx(Link, {\n      route: \"/admin/banner/category/\".concat(category.id, \"?name=\").concat(category.name)\n    }, __jsx(Button, null, \"Configurar Banner\"))));\n  })), visible ? __jsx(Message, {\n    result: messageType,\n    color: messageColor,\n    message: message\n  }) : \"\");\n}\nexport var Hr = styled.hr.withConfig({\n  displayName: \"ListCategories__Hr\",\n  componentId: \"sc-4wtem1-0\"\n})([\"width:50%;\"]);\nexport var Subcontainer = styled.div.withConfig({\n  displayName: \"ListCategories__Subcontainer\",\n  componentId: \"sc-4wtem1-1\"\n})([\"padding:0 15px;\"]);\nexport var ImageContainer = styled.div.withConfig({\n  displayName: \"ListCategories__ImageContainer\",\n  componentId: \"sc-4wtem1-2\"\n})([\"img{max-width:120px;}\"]);\nexport var DivListCategories = styled.div.withConfig({\n  displayName: \"ListCategories__DivListCategories\",\n  componentId: \"sc-4wtem1-3\"\n})([\"max-height:550px;overflow:auto;::-webkit-scrollbar{width:10px;}::-webkit-scrollbar-track{background:#f1f1f1;}::-webkit-scrollbar-thumb{background:rgb(129,22,27);}::-webkit-scrollbar-thumb:hover{background:#555;}\"]);\nexport var CategoryContainer = styled.div.withConfig({\n  displayName: \"ListCategories__CategoryContainer\",\n  componentId: \"sc-4wtem1-4\"\n})([\"display:flex;flex-direction:\", \";justify-content:\", \";\"], function (props) {\n  return props.flexDirection;\n}, function (props) {\n  return props.justifyContent;\n});","map":null,"metadata":{},"sourceType":"module"}