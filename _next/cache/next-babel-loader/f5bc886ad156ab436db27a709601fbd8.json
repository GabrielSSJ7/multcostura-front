{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport setApi from \"../../../api\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Creators as CategoriesCreators } from \"../../../ducks/categories\";\nimport { Creators as UploadCreators } from \"../../../ducks/upload\";\nimport { Creators as UtilsCreators } from \"../../../ducks/utils\";\nimport { getCategories } from \"../../../utils/categories\";\nimport { validateImage } from \"../../../utils/validate\";\nimport { Input, TextArea, Button } from \"../../../static/styled-components/base\";\nimport Message from \"../../utils/Message\";\nimport Upload from \"../../utils/Upload\";\nvar reactCtx = React.createContext({});\nexport default (function () {\n  var _this = useContext(reactCtx);\n\n  var _useSelector = useSelector(function (state) {\n    return state.Utils;\n  }),\n      message = _useSelector.message,\n      result = _useSelector.messageType,\n      color = _useSelector.messageColor;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.Categories;\n  }),\n      name = _useSelector2.name,\n      description = _useSelector2.description;\n\n  var _useSelector3 = useSelector(function (state) {\n    return state.Upload;\n  }),\n      file = _useSelector3.file;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  function createCategory() {\n    if (name) {\n      if (validateImage([\"png\"], 100, file)) {\n        var formData = new FormData();\n        formData.append(\"icon\", file);\n        setApi().post(\"categories?name=\".concat(name, \"&description=\").concat(description), formData).then(function (response) {\n          dispatch(UtilsCreators.changeMessage(\"Categoria criada com sucesso\"));\n          dispatch(UtilsCreators.changeMessageType(true));\n          dispatch(UtilsCreators.changeMessageColor(\"green\"));\n          dispatch(CategoriesCreators.changeName(\"\"));\n          dispatch(CategoriesCreators.changeDescription(\"\"));\n          setVisible(true);\n          dispatch(UploadCreators.cleanUpUpload());\n          dispatch(UploadCreators.changeFile(null));\n          getCategories(function (err, categories) {\n            if (err) {\n              dispatch(UtilsCreators.changeMessage(err));\n              dispatch(UtilsCreators.changeMessageType(false));\n              dispatch(UtilsCreators.changeMessageColor(\"red\"));\n              setVisible(true);\n              return;\n            }\n\n            dispatch(CategoriesCreators.loadCategories(categories));\n          });\n        })[\"catch\"](function (err) {\n          dispatch(UtilsCreators.changeMessage(err.response ? err.response.data : err.toString()));\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          setVisible(true);\n        });\n      } else {\n        dispatch(UtilsCreators.changeMessage(\"Suba imagens PNG com no máximo 100KB\"));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n      }\n    } else {\n      dispatch(UtilsCreators.changeMessage(\"O nome é necessário\"));\n      dispatch(UtilsCreators.changeMessageType(false));\n      dispatch(UtilsCreators.changeMessageColor(\"red\"));\n      setVisible(true);\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Adicionar nova categoria\"), __jsx(\"div\", null, __jsx(Input, {\n    placeholder: \"Nome\",\n    onKeyDown: function onKeyDown(e) {\n      if (e.key == 'Enter') createCategory();\n    },\n    onChange: function onChange(e) {\n      return dispatch(CategoriesCreators.changeName(e.target.value));\n    },\n    value: name\n  }), __jsx(TextArea, {\n    placeholder: \"Descri\\xE7\\xE3o\",\n    rows: \"3\",\n    onChange: function onChange(e) {\n      return dispatch(CategoriesCreators.changeDescription(e.target.value));\n    },\n    value: description\n  })), visible ? __jsx(Message, {\n    result: result,\n    color: color,\n    message: message\n  }) : \"\", __jsx(Button, {\n    onClick: createCategory\n  }, \"Criar categoria\"));\n});\nvar ImageContainer = styled.div.withConfig({\n  displayName: \"addCategory__ImageContainer\",\n  componentId: \"ig1tie-0\"\n})([\"img{max-width:120px;}\"]);","map":null,"metadata":{},"sourceType":"module"}