{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport FileInput from \"rc-upload\";\nimport Dropzone, { useDropzone } from \"react-dropzone\";\nimport GalleryVideos from \"./GalleryVideos\";\nimport setApi from \"../../../api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowUp, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport loadingGif from \"../../../static/images/loading.gif\";\nimport { validateImage } from '../../../utils/images';\nexport default function EditGalleryVideos(_ref) {\n  var images = _ref.images,\n      removeVideo = _ref.removeVideo,\n      onSuccess = _ref.onSuccess,\n      onError = _ref.onError,\n      headers = _ref.headers;\n\n  var _useState = useState(false),\n      uploading = _useState[0],\n      setUp = _useState[1];\n\n  var onDrop = useCallback(function _callee(acceptedFiles) {\n    var file, formData;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setUp(true);\n            _context.t0 = _regeneratorRuntime.keys(acceptedFiles);\n\n          case 2:\n            if ((_context.t1 = _context.t0()).done) {\n              _context.next = 15;\n              break;\n            }\n\n            file = _context.t1.value;\n\n            if (!validateImage(process.env.videoExtensionPermitted, 10000, acceptedFiles[file])) {\n              _context.next = 12;\n              break;\n            }\n\n            formData = new FormData();\n\n            if (acceptedFiles[file].type.split(\"/\")[0] != \"video\") {\n              onError(\"Formato de arquivo inválido - \" + acceptedFiles[file].name);\n              setUp(false);\n            } else {\n              formData.append(\"img\", acceptedFiles[file]);\n            }\n\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(setApi(_objectSpread({}, headers)).post(\"/gallery\", formData));\n\n          case 9:\n            onSuccess();\n            _context.next = 13;\n            break;\n\n          case 12:\n            onError(\"Extens\\xE3o do arquivo \".concat(acceptedFiles[file].name, \" \\xE9 inv\\xE1lido. Extens\\xF5es permitidas \").concat(process.env.videoExtensionPermitted.toString()));\n\n          case 13:\n            _context.next = 2;\n            break;\n\n          case 15:\n            setUp(false);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  var _useDropzone = useDropzone({\n    onDrop: onDrop\n  }),\n      getRootProps = _useDropzone.getRootProps,\n      getInputProps = _useDropzone.getInputProps;\n\n  return __jsx(React.Fragment, null, __jsx(Row, null, __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Galeria de V\\xEDdeos\")), __jsx(Row, null, __jsx(GalleryVideos, {\n    images: images,\n    removeVideo: removeVideo,\n    uploading: uploading\n  })), __jsx(Row, null, uploading ? __jsx(Loading, {\n    src: loadingGif\n  }) : __jsx(LabelInput, getRootProps(), __jsx(\"input\", getInputProps()), __jsx(\"p\", null, \"Arraste e solte os arquivos ou clique aqui para enviar os v\\xEDdeos\"))));\n}\nvar Loading = styled.img.withConfig({\n  displayName: \"EditGalleryVideos__Loading\",\n  componentId: \"dsvpm5-0\"\n})([\"width:32px;height:32px;display:block;margin:auto;\"]);\nvar Row = styled.div.withConfig({\n  displayName: \"EditGalleryVideos__Row\",\n  componentId: \"dsvpm5-1\"\n})([\"display:flex;flex:1;flex-direction:row;justify-content:center;padding:15px;\"]);\nvar LabelInput = styled.div.withConfig({\n  displayName: \"EditGalleryVideos__LabelInput\",\n  componentId: \"dsvpm5-2\"\n})([\"display:flex;flex-direction:column;color:grey;align-items:center;width:100%;border:3px dotted grey;cursor:pointer;padding:50px;text-align:center;:hover{border:3px dotted lightblue;}\"]);","map":{"version":3,"sources":["C:/Users/Gluz/Projects/web/multcostura/multcostura-web/src/components/admin/news/EditGalleryVideos.jsx"],"names":["React","useState","useEffect","useCallback","styled","FileInput","Dropzone","useDropzone","GalleryVideos","setApi","FontAwesomeIcon","faArrowUp","faTrash","loadingGif","validateImage","EditGalleryVideos","images","removeVideo","onSuccess","onError","headers","uploading","setUp","onDrop","acceptedFiles","file","process","env","videoExtensionPermitted","formData","FormData","type","split","name","append","post","toString","getRootProps","getInputProps","color","Loading","img","Row","div","LabelInput"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FileInput from \"rc-upload\";\r\nimport Dropzone, { useDropzone } from \"react-dropzone\";\r\n\r\nimport GalleryVideos from \"./GalleryVideos\";\r\nimport setApi from \"../../../api\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowUp, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport loadingGif from \"../../../static/images/loading.gif\";\r\nimport { validateImage } from '../../../utils/images'\r\n\r\nexport default function EditGalleryVideos({\r\n  images,\r\n  removeVideo,\r\n  onSuccess,\r\n  onError,\r\n  headers\r\n}) {\r\n  const [uploading, setUp] = useState(false);\r\n\r\n  const onDrop = useCallback(async acceptedFiles => {\r\n    setUp(true);\r\n    for (let file in acceptedFiles) {\r\n      if (validateImage(process.env.videoExtensionPermitted, 10000, acceptedFiles[file])) {\r\n        const formData = new FormData();\r\n\r\n        if (acceptedFiles[file].type.split(\"/\")[0] != \"video\") {\r\n          onError(\"Formato de arquivo inválido - \" + acceptedFiles[file].name);\r\n          setUp(false);\r\n        } else {\r\n          formData.append(\"img\", acceptedFiles[file]);\r\n        }\r\n        await setApi({ ...headers }).post(\"/gallery\", formData);\r\n          onSuccess();\r\n      } else {\r\n        onError(`Extensão do arquivo ${acceptedFiles[file].name} é inválido. Extensões permitidas ${process.env.videoExtensionPermitted.toString()}`)\r\n      }\r\n    }\r\n  \r\n    setUp(false);\r\n  }, []);\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <h3 className=\"main-title\" style={{ color: \"rgb(129, 22, 27)\" }}>\r\n          Galeria de Vídeos\r\n        </h3>\r\n      </Row>\r\n      <Row>\r\n        <GalleryVideos images={images} removeVideo={removeVideo} uploading={uploading} />\r\n      </Row>\r\n\r\n      <Row>\r\n        {uploading ? (\r\n          <Loading src={loadingGif} />\r\n        ) : (\r\n          <LabelInput {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <p>\r\n              Arraste e solte os arquivos ou clique aqui para enviar os vídeos\r\n            </p>\r\n          </LabelInput>\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Loading = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n  display: block;\r\n  margin: auto;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  padding: 15px;\r\n`;\r\n\r\nconst LabelInput = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: grey;\r\n  align-items: center;\r\n  width: 100%;\r\n  border: 3px dotted grey;\r\n  cursor: pointer;\r\n  padding: 50px;\r\n  text-align: center;\r\n  :hover {\r\n    border: 3px dotted lightblue;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}