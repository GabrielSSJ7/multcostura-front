{"ast":null,"code":"import setApi from \"../api\";\nimport { fieldValidation, validateImage } from \"../utils/validate\";\nexport function getTools(cb, data) {\n  const filter = data ? data : {};\n  setApi().get(`/tools?search=${filter.search}`).then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function getTool(id, cb) {\n  setApi().get(`/tools/${id}`).then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport async function getOptions(cb) {\n  try {\n    const manufacturers = await setApi().get(\"/manufacturer\");\n    const categories = await setApi().get(\"/categories\");\n    cb(null, {\n      manufacturers,\n      categories\n    });\n  } catch (e) {\n    cb(e);\n  }\n}\nexport function deleteImage(id, type, image, cb) {\n  setApi().delete(`/images?id=${id}&type=${type}&image=${image}`).then(response => {\n    cb(null);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport async function updateTool(tool, toolFile, cb) {\n  const {\n    id,\n    name,\n    description,\n    mainFeatures,\n    manufacturer\n  } = tool;\n  const formData = new FormData();\n  formData.append(\"name\", name);\n  formData.append(\"description\", description);\n  formData.append(\"mainFeatures\", mainFeatures);\n  formData.append(\"manufacturer\", manufacturer);\n  const toolFileKeys = Object.keys(toolFile);\n  toolFileKeys.forEach(mkey => {\n    formData.append(\"toolsFiles\", toolFile[mkey]);\n  });\n  setApi().put(\"/tools/\" + id, formData).then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function addTool(tool, toolFiles, cb) {\n  const formData = new FormData();\n  const toolFilesKeys = Object.keys(toolFiles);\n  let hasError = [false];\n  toolFilesKeys.forEach(mkey => {\n    hasError[0] = !validateImage([\"png\", \"jpg\", \"jpeg\", \"svg\", \"gif\", \"webp\"], 10000, toolFiles[mkey]);\n    formData.append(\"toolsFiles\", toolFiles[mkey]);\n  });\n\n  if (hasError.includes(true)) {\n    return cb(\"Você precisa subir imagens png, jpg, jpeg, svg, gif, webp com no máximo 10MB\");\n  }\n\n  const fieldError = fieldValidation({\n    nome: tool.name,\n    subtítulo: tool.description\n  });\n\n  if (fieldError.return) {\n    formData.append(\"name\", tool.name);\n    formData.append(\"manufacturer\", tool.manufacturer);\n    formData.append(\"description\", tool.description);\n    formData.append(\"mainFeatures\", tool.mainFeatures);\n    setApi().post(`tools`, formData).then(response => {\n      cb(null, response.data);\n    }).catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n  } else {\n    return cb(`${fieldError.message} ${fieldError.field}`);\n  }\n}\nexport function deleteTool(id, cb) {\n  setApi().delete(`/tools/${id}`).then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}","map":{"version":3,"sources":["C:/Users/Gluz/Projects/web/multcostura/multcostura-web/src/utils/tools.js"],"names":["setApi","fieldValidation","validateImage","getTools","cb","data","filter","get","search","then","response","catch","err","toString","getTool","id","getOptions","manufacturers","categories","e","deleteImage","type","image","delete","updateTool","tool","toolFile","name","description","mainFeatures","manufacturer","formData","FormData","append","toolFileKeys","Object","keys","forEach","mkey","put","addTool","toolFiles","toolFilesKeys","hasError","includes","fieldError","nome","subtítulo","return","post","message","field","deleteTool"],"mappings":"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","sourcesContent":["import setApi from \"../api\";\r\nimport { fieldValidation, validateImage } from \"../utils/validate\";\r\n\r\nexport function getTools(cb, data) {\r\n  const filter = data ? data : {}\r\n  setApi()\r\n    .get(`/tools?search=${filter.search}`)\r\n    .then(response => {\r\n      cb(null, response.data);\r\n    })\r\n    .catch(err => {\r\n      cb(err.response ? err.response.data : err.toString());\r\n    });\r\n}\r\n\r\nexport function getTool(id, cb) {\r\n  setApi()\r\n    .get(`/tools/${id}`)\r\n    .then(response => {\r\n      cb(null, response.data);\r\n    })\r\n    .catch(err => {\r\n      cb(err.response ? err.response.data : err.toString());\r\n    });\r\n}\r\n\r\nexport async function getOptions(cb) {\r\n  try {\r\n    const manufacturers = await setApi().get(\"/manufacturer\");\r\n    const categories = await setApi().get(\"/categories\");\r\n    cb(null, { manufacturers, categories });\r\n  } catch (e) {\r\n    cb(e);\r\n  }\r\n}\r\n\r\nexport function deleteImage(id, type, image, cb) {\r\n  setApi()\r\n    .delete(`/images?id=${id}&type=${type}&image=${image}`)\r\n    .then(response => {\r\n      cb(null);\r\n    })\r\n    .catch(err => {\r\n      cb(err.response ? err.response.data : err.toString());\r\n    });\r\n}\r\n\r\nexport async function updateTool(\r\n  tool,\r\n  toolFile,\r\n  cb\r\n) {\r\n\r\n  const {\r\n    id,\r\n    name,\r\n    description,\r\n    mainFeatures,\r\n    manufacturer\r\n  } = tool;\r\n  const formData = new FormData();\r\n  formData.append(\"name\", name);\r\n  formData.append(\"description\", description);\r\n  formData.append(\"mainFeatures\", mainFeatures);\r\n  formData.append(\"manufacturer\", manufacturer);\r\n  const toolFileKeys = Object.keys(toolFile);\r\n  toolFileKeys.forEach(mkey => {\r\n    formData.append(\"toolsFiles\", toolFile[mkey]);\r\n  })\r\n  setApi()\r\n    .put(\"/tools/\" + id, formData)\r\n    .then(response => {\r\n      cb(null, response.data);\r\n    })\r\n    .catch(err => {\r\n      cb(err.response ? err.response.data : err.toString());\r\n    });\r\n}\r\n\r\nexport function addTool(\r\n  tool,\r\n  toolFiles,\r\n  cb\r\n) {\r\n  const formData = new FormData();\r\n  const toolFilesKeys = Object.keys(toolFiles);\r\n  let hasError = [false];\r\n  toolFilesKeys.forEach(mkey => {\r\n    hasError[0] = !validateImage(\r\n      [\"png\", \"jpg\", \"jpeg\", \"svg\", \"gif\", \"webp\"],\r\n      10000,\r\n      toolFiles[mkey]\r\n    );\r\n    formData.append(\"toolsFiles\", toolFiles[mkey]);\r\n  });\r\n\r\n  if (hasError.includes(true)) {\r\n    return cb(\r\n      \"Você precisa subir imagens png, jpg, jpeg, svg, gif, webp com no máximo 10MB\"\r\n    );\r\n  }\r\n\r\n  const fieldError = fieldValidation({\r\n    nome: tool.name,\r\n    subtítulo: tool.description,\r\n  });\r\n  if (fieldError.return) {\r\n    formData.append(\"name\", tool.name);\r\n    formData.append(\"manufacturer\", tool.manufacturer);\r\n    formData.append(\"description\", tool.description);\r\n    formData.append(\"mainFeatures\", tool.mainFeatures);\r\n    setApi()\r\n      .post(`tools`, formData)\r\n      .then(response => {\r\n        cb(null, response.data);\r\n      })\r\n      .catch(err => {\r\n        cb(err.response ? err.response.data : err.toString());\r\n      });\r\n  } else {\r\n    return cb(`${fieldError.message} ${fieldError.field}`);\r\n  }\r\n}\r\n\r\nexport function deleteTool(id, cb) {\r\n  setApi()\r\n    .delete(`/tools/${id}`)\r\n    .then(response => {\r\n      cb(null, response.data);\r\n    })\r\n    .catch(err => {\r\n      cb(err.response ? err.response.data : err.toString());\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}