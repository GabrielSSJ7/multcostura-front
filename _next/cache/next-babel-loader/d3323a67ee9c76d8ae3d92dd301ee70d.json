{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Router, Link } from \"../../../../routes\";\nimport { Button, Select, Input } from \"../../../static/styled-components/base\";\nimport { getMachines, getOptions } from \"../../../utils/machines\";\nimport { Creators as MachineCreators } from \"../../../ducks/machines\";\nimport { Creators as UtilCreators } from \"../../../ducks/utils\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nexport default function ListMachines() {\n  var _useState = useState({\n    category: null,\n    manufacturer: null,\n    search: \"\"\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState([]),\n      categories = _useState2[0],\n      setCategories = _useState2[1];\n\n  var _useState3 = useState([]),\n      manufacturers = _useState3[0],\n      setManufacturers = _useState3[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.Machine;\n  }),\n      machines = _useSelector.machines;\n\n  var dispatch = useDispatch();\n\n  var _useState4 = useState({\n    result: \"success\",\n    open: false,\n    message: \"\"\n  }),\n      snackBar = _useState4[0],\n      setSnackBar = _useState4[1];\n\n  function handleClose() {\n    setSnackBar(_objectSpread({}, snackBar, {\n      open: false\n    }));\n  }\n\n  useEffect(function () {\n    function asyncFunc() {\n      return _regeneratorRuntime.async(function asyncFunc$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              getMachines(function (err, machines) {\n                if (err) {\n                  setSnackBar({\n                    result: \"error\",\n                    open: true,\n                    message: err\n                  });\n                  dispatch(MachineCreators.loadMachines([]));\n                  return;\n                }\n\n                dispatch(MachineCreators.loadMachines(machines));\n              }, {\n                category: state.category,\n                manufacturer: state.manufacturer,\n                search: state.search\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    asyncFunc();\n    return function () {};\n  }, [state]);\n  useEffect(function () {\n    function asyncFunc() {\n      getMachines(function (err, machines) {\n        if (err) {\n          setSnackBar({\n            result: \"error\",\n            message: err,\n            open: true\n          });\n          return;\n        }\n\n        dispatch(MachineCreators.loadMachines(machines));\n      });\n      getOptions(function (err, data) {\n        if (err) {\n          setSnackBar({\n            result: \"error\",\n            open: true,\n            message: err\n          });\n          return;\n        }\n\n        setCategories(data.categories.data);\n        setManufacturers(data.manufacturers.data);\n      });\n    }\n\n    asyncFunc();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Snackbar, {\n    open: snackBar.open,\n    autoHideDuration: 3000,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    severity: snackBar.result\n  }, snackBar.message)), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"block\",\n      margin: \"auto\"\n    }\n  }, __jsx(Input, {\n    value: state.search,\n    type: \"text\",\n    name: \"search\",\n    id: \"search\",\n    placeholder: \"Pesquise pelo nome\",\n    onChange: function onChange(e) {\n      return setState(_objectSpread({}, state, {\n        search: e.target.value\n      }));\n    }\n  }), __jsx(Select, {\n    value: state.category,\n    onChange: function onChange(e) {\n      return setState(_objectSpread({}, state, {\n        category: e.target.value\n      }));\n    }\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Escolha uma categoria\"), categories.map(function (category) {\n    return __jsx(\"option\", {\n      selected: state.category == category.id ? category.id : false,\n      value: category.id\n    }, category.name);\n  })), __jsx(Select, {\n    value: state.manufacturer,\n    onChange: function onChange(e) {\n      return setState(_objectSpread({}, state, {\n        manufacturer: e.target.value\n      }));\n    }\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Escolha um fabricante\"), manufacturers.map(function (manu) {\n    return __jsx(\"option\", {\n      selected: state.manufacturer == manu.id ? manu.id : false,\n      value: manu.id\n    }, manu.name);\n  }))), __jsx(Container, null, machines.map(function (machine) {\n    return __jsx(Link, {\n      href: \"/admin/machines/machine?id=\".concat(machine.id.toString())\n    }, __jsx(CardContainer, null, __jsx(\"img\", {\n      src: machine.images[0]\n    }), __jsx(\"div\", null, __jsx(Title, null, \" \", machine.name, \" \"), __jsx(Subtitle, null, machine.description))));\n  })));\n\n  function navigateToMachine(id) {\n    Router.push(\"/admin/machines/machine?id=\".concat(id));\n  }\n}\nvar Container = styled.div.withConfig({\n  displayName: \"ListMachines__Container\",\n  componentId: \"um70bv-0\"\n})([\"display:flex;flex-direction:row;width:100%;flex-wrap:wrap;justify-content:center;\"]);\nvar CardContainer = styled.div.withConfig({\n  displayName: \"ListMachines__CardContainer\",\n  componentId: \"um70bv-1\"\n})([\"min-width:250px;max-width:250px;max-height:300px;overflow:hidden;cursor:pointer;display:flex;flex-direction:column;flex-wrap:no-wrap;margin-bottom:10px;margin-right:15px;img{width:100%;max-width:230px;display:block;margin:auto}padding:15px;:hover{box-shadow:0 14px 28px rgba(0,0,0,0.25),0 10px 10px rgba(0,0,0,0.22);}box-shadow:0 3px 6px rgba(0,0,0,0.16),0 3px 6px rgba(0,0,0,0.23);}\"]);\nvar Title = styled.p.withConfig({\n  displayName: \"ListMachines__Title\",\n  componentId: \"um70bv-2\"\n})([\"font-size:22px;margin:0 15px;\"]);\nvar Subtitle = styled.p.withConfig({\n  displayName: \"ListMachines__Subtitle\",\n  componentId: \"um70bv-3\"\n})([\"color:lightgrey;margin:0 15px;\"]);\nvar Description = styled.p.withConfig({\n  displayName: \"ListMachines__Description\",\n  componentId: \"um70bv-4\"\n})([\"color:grey;margin:15px 15px;\"]);","map":{"version":3,"sources":["C:/Users/Gluz/Projects/web/multcostura/multcostura-web/src/components/admin/machines/ListMachines.jsx"],"names":["React","useState","useEffect","styled","useSelector","useDispatch","Router","Link","Button","Select","Input","getMachines","getOptions","Creators","MachineCreators","UtilCreators","Snackbar","Alert","ListMachines","category","manufacturer","search","state","setState","categories","setCategories","manufacturers","setManufacturers","Machine","machines","dispatch","result","open","message","snackBar","setSnackBar","handleClose","asyncFunc","err","loadMachines","data","width","display","margin","e","target","value","map","id","name","manu","machine","toString","images","description","navigateToMachine","push","Container","div","CardContainer","Title","p","Subtitle","Description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Router, Link } from \"../../../../routes\";\nimport { Button, Select, Input } from \"../../../static/styled-components/base\";\nimport { getMachines, getOptions } from \"../../../utils/machines\";\nimport { Creators as MachineCreators } from \"../../../ducks/machines\";\nimport { Creators as UtilCreators } from \"../../../ducks/utils\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport default function ListMachines() {\n  const [state, setState] = useState({\n    category: null,\n    manufacturer: null,\n    search: \"\"\n  });\n  const [categories, setCategories] = useState([]);\n  const [manufacturers, setManufacturers] = useState([]);\n  const { machines } = useSelector(state => state.Machine);\n  const dispatch = useDispatch();\n\n  const [snackBar, setSnackBar] = useState({\n    result: \"success\",\n    open: false,\n    message: \"\"\n  });\n  function handleClose() {\n    setSnackBar({\n      ...snackBar,\n      open: false\n    });\n  }\n\n  useEffect(() => {\n    async function asyncFunc() {\n      getMachines(\n        function(err, machines) {\n          if (err) {\n            setSnackBar({\n              result: \"error\",\n              open: true,\n              message: err\n            });\n            dispatch(MachineCreators.loadMachines([]));\n            return;\n          }\n          dispatch(MachineCreators.loadMachines(machines));\n        },\n        {\n          category: state.category,\n          manufacturer: state.manufacturer,\n          search: state.search\n        }\n      );\n    }\n    asyncFunc();\n    return () => {};\n  }, [state]);\n\n  useEffect(() => {\n    function asyncFunc() {\n      getMachines(function(err, machines) {\n        if (err) {\n          setSnackBar({\n            result: \"error\",\n            message: err,\n            open: true\n          });\n          return;\n        }\n        dispatch(MachineCreators.loadMachines(machines));\n      });\n      getOptions(function(err, data) {\n        if (err) {\n          setSnackBar({\n            result: \"error\",\n            open: true,\n            message: err\n          });\n          return;\n        }\n        setCategories(data.categories.data);\n        setManufacturers(data.manufacturers.data);\n      });\n    }\n    asyncFunc();\n  }, []);\n\n  return (\n    <>\n      <Snackbar\n        open={snackBar.open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert severity={snackBar.result}>{snackBar.message}</Alert>\n      </Snackbar>\n\n      <div style={{ width: \"100%\", display: \"block\", margin: \"auto\" }}>\n        <Input\n          value={state.search}\n          type=\"text\"\n          name=\"search\"\n          id=\"search\"\n          placeholder=\"Pesquise pelo nome\"\n          onChange={e => setState({ ...state, search: e.target.value })}\n        />\n        <Select\n          value={state.category}\n          onChange={e => setState({ ...state, category: e.target.value })}\n        >\n          <option value=\"\">Escolha uma categoria</option>\n          {categories.map(category => (\n            <option\n              selected={state.category == category.id ? category.id : false}\n              value={category.id}\n            >\n              {category.name}\n            </option>\n          ))}\n        </Select>\n\n        <Select\n          value={state.manufacturer}\n          onChange={e => setState({ ...state, manufacturer: e.target.value })}\n        >\n          <option value=\"\">Escolha um fabricante</option>\n          {manufacturers.map(manu => (\n            <option\n              selected={state.manufacturer == manu.id ? manu.id : false}\n              value={manu.id}\n            >\n              {manu.name}\n            </option>\n          ))}\n        </Select>\n      </div>\n\n      <Container>\n        {machines.map(machine => (\n          <Link\n            href={`/admin/machines/machine?id=${machine.id.toString()}`}\n          >\n            <CardContainer>\n              <img src={machine.images[0]} />\n              <div>\n                <Title> {machine.name} </Title>\n                <Subtitle>{machine.description}</Subtitle>\n              </div>\n              {/* <Description>{machine.mainFeatures}</Description> */}\n            </CardContainer>\n          </Link>\n        ))}\n      </Container>\n    </>\n  );\n\n  function navigateToMachine(id) {\n    Router.push(`/admin/machines/machine?id=${id}`);\n  }\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst CardContainer = styled.div`\n\tmin-width: 250px;\n\tmax-width: 250px;\n\tmax-height: 300px;\n\toverflow: hidden;\n\tcursor: pointer;\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-wrap: no-wrap;\n\tmargin-bottom: 10px;\n\tmargin-right: 15px;\n\timg {\n\t\twidth: 100%;\n\t\tmax-width: 230px;\n\t\tdisplay: block;\n\t\tmargin: auto\n\t}\n\tpadding: 15px;\n\t:hover {\n\t\tbox-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\n\t}\n\tbox-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n\n}\n`;\nconst Title = styled.p`\n  font-size: 22px;\n  margin: 0 15px;\n`;\nconst Subtitle = styled.p`\n  color: lightgrey;\n  margin: 0 15px;\n`;\nconst Description = styled.p`\n  color: grey;\n  margin: 15px 15px;\n`;\n"]},"metadata":{},"sourceType":"module"}