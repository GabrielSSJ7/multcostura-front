{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createActions, createReducer } from \"reduxsauce\";\nexport const {\n  Types,\n  Creators\n} = createActions({\n  loadMachines: [\"machines\"],\n  loadMachinesForFilters: [\"machines\"],\n  loadFilters: [\"filters\"]\n});\nconst INITIAL_STATE = {\n  machines: [],\n  machinesForFilters: [],\n  filters: {}\n};\n\nconst loadMachines = (state = INITIAL_STATE, action) => _objectSpread({}, state, {\n  machines: action.machines\n});\n\nconst loadMachinesForFilters = (state = INITIAL_STATE, action) => _objectSpread({}, state, {\n  machinesForFilters: action.machines\n});\n\nconst loadFilters = (state = INITIAL_STATE, action) => _objectSpread({}, state, {\n  filters: action.filters\n});\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.LOAD_MACHINES]: loadMachines,\n  [Types.LOAD_MACHINES_FOR_FILTERS]: loadMachinesForFilters,\n  [Types.LOAD_FILTERS]: loadFilters\n});","map":{"version":3,"sources":["C:/Users/Gluz/Projects/web/multcostura/multcostura-web/src/ducks/machines.js"],"names":["createActions","createReducer","Types","Creators","loadMachines","loadMachinesForFilters","loadFilters","INITIAL_STATE","machines","machinesForFilters","filters","state","action","LOAD_MACHINES","LOAD_MACHINES_FOR_FILTERS","LOAD_FILTERS"],"mappings":";;;;;;AAAA,SAASA,aAAT,EAAwBC,aAAxB,QAA6C,YAA7C;AAEA,OAAO,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAsBH,aAAa,CAAC;AAC/CI,EAAAA,YAAY,EAAE,CAAC,UAAD,CADiC;AAE/CC,EAAAA,sBAAsB,EAAE,CAAC,UAAD,CAFuB;AAG/CC,EAAAA,WAAW,EAAE,CAAC,SAAD;AAHkC,CAAD,CAAzC;AAKP,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,kBAAkB,EAAE,EAFA;AAGpBC,EAAAA,OAAO,EAAE;AAHW,CAAtB;;AAKA,MAAMN,YAAY,GAAG,CAACO,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,uBAChBD,KADgB;AAEnBH,EAAAA,QAAQ,EAAEI,MAAM,CAACJ;AAFE,EAArB;;AAKA,MAAMH,sBAAsB,GAAG,CAACM,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,uBAC1BD,KAD0B;AAE7BF,EAAAA,kBAAkB,EAAEG,MAAM,CAACJ;AAFE,EAA/B;;AAMA,MAAMF,WAAW,GAAG,CAACK,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,uBACfD,KADe;AAElBD,EAAAA,OAAO,EAAEE,MAAM,CAACF;AAFE,EAApB;;AAMA,eAAeT,aAAa,CAACM,aAAD,EAAgB;AAC1C,GAACL,KAAK,CAACW,aAAP,GAAuBT,YADmB;AAE1C,GAACF,KAAK,CAACY,yBAAP,GAAmCT,sBAFO;AAG1C,GAACH,KAAK,CAACa,YAAP,GAAsBT;AAHoB,CAAhB,CAA5B","sourcesContent":["import { createActions, createReducer } from \"reduxsauce\";\n\nexport const { Types, Creators } = createActions({\n  loadMachines: [\"machines\"],\n  loadMachinesForFilters: [\"machines\"],\n  loadFilters: [\"filters\"]\n});\nconst INITIAL_STATE = {\n  machines: [],\n  machinesForFilters: [],\n  filters: {}\n};\nconst loadMachines = (state = INITIAL_STATE, action) => ({\n  ...state,\n  machines: action.machines\n});\n\nconst loadMachinesForFilters = (state = INITIAL_STATE, action) => ({\n  ...state,\n  machinesForFilters: action.machines\n});\n\n\nconst loadFilters = (state = INITIAL_STATE, action) => ({\n  ...state,\n  filters: action.filters\n});\n\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.LOAD_MACHINES]: loadMachines,\n  [Types.LOAD_MACHINES_FOR_FILTERS]: loadMachinesForFilters,\n  [Types.LOAD_FILTERS]: loadFilters\n});\n"]},"metadata":{},"sourceType":"module"}