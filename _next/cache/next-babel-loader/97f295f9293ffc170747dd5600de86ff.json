{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport FileInput from \"rc-upload\";\nimport Dropzone, { useDropzone } from \"react-dropzone\";\nimport GalleryImages from \"./GalleryImages\";\nimport setApi from \"../../../api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowUp, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport loadingGif from \"../../../static/images/loading.gif\";\nimport { validateImage } from '../../../utils/images';\nexport default function EditGalleryImages({\n  images,\n  removeImage,\n  onSuccess,\n  onError,\n  headers\n}) {\n  const {\n    0: uploading,\n    1: setUp\n  } = useState(false);\n  const onDrop = useCallback(async acceptedFiles => {\n    setUp(true);\n    let error = false;\n\n    for (let file in acceptedFiles) {\n      if (validateImage(process.env.imageExtensionPermitted, 10000, acceptedFiles[file])) {\n        const formData = new FormData();\n        formData.append(\"img\", acceptedFiles[file]);\n        await setApi(_objectSpread({}, headers)).post(\"/gallery\", formData);\n        error = false;\n        onSuccess();\n      } else {\n        onError(`Extensão do arquivo ${acceptedFiles[file].name} é inválido. Extensões permitidas ${process.env.imageExtensionPermitted.toString()}, com no máximo 10MB`);\n        error = true;\n      }\n    }\n\n    setUp(false);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return __jsx(React.Fragment, null, __jsx(Row, null, __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Galeria de Imagens\")), __jsx(Row, null, __jsx(GalleryImages, {\n    images: images,\n    removeImage: removeImage,\n    uploading: uploading\n  })), __jsx(Row, null, uploading ? __jsx(Loading, {\n    src: loadingGif\n  }) : __jsx(LabelInput, getRootProps(), __jsx(\"input\", getInputProps()), __jsx(\"p\", null, \"Arraste e solte os arquivos ou clique aqui para enviar as imagens\"))));\n}\nconst Loading = styled.img.withConfig({\n  displayName: \"EditGalleryImages__Loading\",\n  componentId: \"ql1sqt-0\"\n})([\"width:32px;height:32px;display:block;margin:auto;\"]);\nconst Row = styled.div.withConfig({\n  displayName: \"EditGalleryImages__Row\",\n  componentId: \"ql1sqt-1\"\n})([\"display:flex;flex:1;flex-direction:row;justify-content:center;padding:15px;\"]);\nconst LabelInput = styled.div.withConfig({\n  displayName: \"EditGalleryImages__LabelInput\",\n  componentId: \"ql1sqt-2\"\n})([\"display:flex;flex-direction:column;color:grey;align-items:center;width:100%;border:3px dotted grey;cursor:pointer;padding:50px;text-align:center;:hover{border:3px dotted lightblue;}\"]);","map":null,"metadata":{},"sourceType":"module"}