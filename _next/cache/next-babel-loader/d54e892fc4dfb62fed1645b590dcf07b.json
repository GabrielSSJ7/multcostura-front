{"ast":null,"code":"import setApi from \"../api\";\nimport { fieldValidation, validateImage } from \"../utils/validate\";\nexport function getMachines(cb, data) {\n  const filter = data ? data : {};\n  setApi().get(`/machine?categories=${filter.category}&manufacturer=${filter.manufacturer}&search=${filter.search}`).then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function getMachine(id, cb) {\n  setApi().get(`/machine/${id}`).then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport async function getOptions(cb) {\n  try {\n    const manufacturers = await setApi().get(\"/manufacturer\");\n    const categories = await setApi().get(\"/categories\");\n    cb(null, {\n      manufacturers,\n      categories\n    });\n  } catch (e) {\n    cb(e);\n  }\n}\nexport function deleteImage(id, type, image, cb) {\n  setApi().delete(`/images?id=${id}&type=${type}&image=${image}`).then(response => {\n    cb(null);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport async function updateMachine(machine, machineFiles, sewingFile, prodRefFiles, files, cb) {\n  console.log(sewingFile);\n  const {\n    id,\n    name,\n    description,\n    mainFeatures,\n    specifications,\n    category,\n    manufacturer\n  } = machine;\n  const formData = new FormData();\n  console.log('specifications', JSON.stringify(specifications));\n  formData.append(\"name\", name);\n  formData.append(\"description\", description);\n  formData.append(\"mainFeatures\", mainFeatures);\n  formData.append(\"specifications\", specifications ? Object.keys(specifications).length > 0 ? JSON.stringify(specifications) : null : null);\n  formData.append(\"category\", category);\n  formData.append(\"manufacturer\", manufacturer);\n  formData.append(\"video\", machine.video);\n  formData.append('folheto', files.folheto);\n  formData.append('manual', files.manual);\n  const machineFilesKeys = Object.keys(machineFiles);\n  machineFilesKeys.forEach(mkey => {\n    formData.append(\"machines\", machineFiles[mkey]);\n  });\n  formData.append(\"sewingType\", sewingFile);\n  const prodRefFilesKeys = Object.keys(prodRefFiles);\n  prodRefFilesKeys.forEach(prfkey => {\n    formData.append(\"productReferences\", prodRefFiles[prfkey]);\n  });\n  setApi().put(\"/machine/\" + id, formData).then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function addMachine(machine, machineFiles, sewingTypeFile, refProdFiles, files, cb) {\n  const formData = new FormData();\n  const machineFilesKeys = Object.keys(machineFiles);\n  let hasError = [false, false, false];\n  machineFilesKeys.forEach(mkey => {\n    hasError[0] = !validateImage([\"png\", \"jpg\", \"jpeg\", \"svg\", \"gif\", \"webp\"], 10000, machineFiles[mkey]);\n    formData.append(\"machines\", machineFiles[mkey]);\n  });\n  const refProdFilesKey = Object.keys(refProdFiles);\n  refProdFilesKey.forEach(rfKey => {\n    hasError[1] = !validateImage([\"png\", \"jpg\", \"jpeg\", \"svg\", \"gif\", \"webp\"], 10000, refProdFiles[rfKey]);\n    formData.append(\"productReferences\", refProdFiles[rfKey]);\n  });\n  hasError[2] = !validateImage([\"png\", \"jpg\", \"jpeg\", \"svg\", \"gif\", \"webp\"], 10000, sewingTypeFile);\n\n  if (hasError.includes(true)) {\n    return cb(\"Você precisa subir imagens png, jpg, jpeg, svg, gif, webp com no máximo 10MB\");\n  }\n\n  const fieldError = fieldValidation({\n    nome: machine.name,\n    fabricante: machine.manufacturer,\n    subtítulo: machine.description,\n    categoria: machine.category,\n    características: machine.mainFeatures\n  });\n\n  if (fieldError.return) {\n    formData.append(\"name\", machine.name);\n    formData.append(\"manufacturer\", machine.manufacturer);\n    formData.append(\"description\", machine.description);\n    formData.append(\"category\", machine.category);\n    formData.append(\"mainFeatures\", machine.mainFeatures);\n    formData.append(\"specifications\", JSON.stringify(machine.specifications));\n    formData.append(\"video\", machine.video);\n    formData.append('folheto', files.folheto);\n    formData.append('manual', files.manual);\n    setApi().post(`machine`, formData).then(response => {\n      cb(null, response.data);\n    }).catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n  } else {\n    return cb(`${fieldError.message} ${fieldError.field}`);\n  }\n}\nexport function deleteMachine(id, cb) {\n  setApi().delete(`/machine/${id}`).then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}","map":{"version":3,"sources":["C:/Users/Gluz/Projects/web/multcostura/multcostura-web/src/utils/machines.js"],"names":["setApi","fieldValidation","validateImage","getMachines","cb","data","filter","get","category","manufacturer","search","then","response","catch","err","toString","getMachine","id","getOptions","manufacturers","categories","e","deleteImage","type","image","delete","updateMachine","machine","machineFiles","sewingFile","prodRefFiles","files","console","log","name","description","mainFeatures","specifications","formData","FormData","JSON","stringify","append","Object","keys","length","video","folheto","manual","machineFilesKeys","forEach","mkey","prodRefFilesKeys","prfkey","put","addMachine","sewingTypeFile","refProdFiles","hasError","refProdFilesKey","rfKey","includes","fieldError","nome","fabricante","subtítulo","categoria","características","return","post","message","field","deleteMachine"],"mappings":"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","sourcesContent":["import setApi from \"../api\";\nimport { fieldValidation, validateImage } from \"../utils/validate\";\n\nexport function getMachines(cb, data) {\n  const filter = data ? data : {}\n  setApi()\n    .get(`/machine?categories=${filter.category}&manufacturer=${filter.manufacturer}&search=${filter.search}`)\n    .then(response => {\n      cb(null, response.data);\n    })\n    .catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n}\n\nexport function getMachine(id, cb) {\n  setApi()\n    .get(`/machine/${id}`)\n    .then(response => {\n      cb(null, response.data);\n    })\n    .catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n}\n\nexport async function getOptions(cb) {\n  try {\n    const manufacturers = await setApi().get(\"/manufacturer\");\n    const categories = await setApi().get(\"/categories\");\n    cb(null, { manufacturers, categories });\n  } catch (e) {\n    cb(e);\n  }\n}\n\nexport function deleteImage(id, type, image, cb) {\n  setApi()\n    .delete(`/images?id=${id}&type=${type}&image=${image}`)\n    .then(response => {\n      cb(null);\n    })\n    .catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n}\n\nexport async function updateMachine(\n  machine,\n  machineFiles,\n  sewingFile,\n  prodRefFiles,\n  files,\n  cb\n) {\n  console.log(sewingFile);\n\n  const {\n    id,\n    name,\n    description,\n    mainFeatures,\n    specifications,\n    category,\n    manufacturer\n  } = machine;\n  const formData = new FormData();\n  console.log('specifications', JSON.stringify(specifications))\n  formData.append(\"name\", name);\n  formData.append(\"description\", description);\n  formData.append(\"mainFeatures\", mainFeatures);\n  formData.append(\"specifications\", specifications ? Object.keys(specifications).length > 0 ? JSON.stringify(specifications) : null : null);\n  formData.append(\"category\", category);\n  formData.append(\"manufacturer\", manufacturer);\n  formData.append(\"video\", machine.video)\n  formData.append('folheto', files.folheto)\n  formData.append('manual', files.manual)\n  const machineFilesKeys = Object.keys(machineFiles);\n  machineFilesKeys.forEach(mkey => {\n    formData.append(\"machines\", machineFiles[mkey]);\n  });\n  formData.append(\"sewingType\", sewingFile);\n  const prodRefFilesKeys = Object.keys(prodRefFiles);\n  prodRefFilesKeys.forEach(prfkey => {\n    formData.append(\"productReferences\", prodRefFiles[prfkey]);\n  });\n\n  setApi()\n    .put(\"/machine/\" + id, formData)\n    .then(response => {\n      cb(null, response.data);\n    })\n    .catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n}\n\nexport function addMachine(\n  machine,\n  machineFiles,\n  sewingTypeFile,\n  refProdFiles,\n  files,\n  cb\n) {\n  const formData = new FormData();\n  const machineFilesKeys = Object.keys(machineFiles);\n  let hasError = [false, false, false];\n  machineFilesKeys.forEach(mkey => {\n    hasError[0] = !validateImage(\n      [\"png\", \"jpg\", \"jpeg\", \"svg\", \"gif\", \"webp\"],\n      10000,\n      machineFiles[mkey]\n    );\n    formData.append(\"machines\", machineFiles[mkey]);\n  });\n\n  const refProdFilesKey = Object.keys(refProdFiles);\n  refProdFilesKey.forEach(rfKey => {\n    hasError[1] = !validateImage(\n      [\"png\", \"jpg\", \"jpeg\", \"svg\", \"gif\", \"webp\"],\n      10000,\n      refProdFiles[rfKey]\n    );\n\n    formData.append(\"productReferences\", refProdFiles[rfKey]);\n  });\n\n  hasError[2] = !validateImage(\n    [\"png\", \"jpg\", \"jpeg\", \"svg\", \"gif\", \"webp\"],\n    10000,\n    sewingTypeFile\n  );\n\n  if (hasError.includes(true)) {\n    return cb(\n      \"Você precisa subir imagens png, jpg, jpeg, svg, gif, webp com no máximo 10MB\"\n    );\n  }\n\n  const fieldError = fieldValidation({\n    nome: machine.name,\n    fabricante: machine.manufacturer,\n    subtítulo: machine.description,\n    categoria: machine.category,\n    características: machine.mainFeatures\n  });\n  if (fieldError.return) {\n\n    formData.append(\"name\", machine.name);\n    formData.append(\"manufacturer\", machine.manufacturer);\n    formData.append(\"description\", machine.description);\n    formData.append(\"category\", machine.category);\n    formData.append(\"mainFeatures\", machine.mainFeatures);\n    formData.append(\"specifications\", JSON.stringify(machine.specifications));\n    formData.append(\"video\", machine.video)\n    formData.append('folheto', files.folheto)\n    formData.append('manual', files.manual)\n\n    setApi()\n      .post(`machine`, formData)\n      .then(response => {\n        cb(null, response.data);\n      })\n      .catch(err => {\n        cb(err.response ? err.response.data : err.toString());\n      });\n  } else {\n    return cb(`${fieldError.message} ${fieldError.field}`);\n  }\n}\n\nexport function deleteMachine(id, cb) {\n  setApi()\n    .delete(`/machine/${id}`)\n    .then(response => {\n      cb(null, response.data);\n    })\n    .catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n}\n"]},"metadata":{},"sourceType":"module"}