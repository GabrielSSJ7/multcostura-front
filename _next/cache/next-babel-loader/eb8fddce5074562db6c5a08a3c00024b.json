{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport router from \"next/router\";\nimport Template from \"../../../src/components/templates/Admin\";\nimport Sidebar from \"../../../src/components/admin/Sidebar\";\nimport Slide from \"../../../src/components/utils/Slider\";\nimport { Container, Button, Select, Hr } from \"../../../src/static/styled-components/base\";\nimport FileInput from \"../../../src/components/utils/FileInput\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { changeFileName, validateImage } from \"../../../src/utils/images\";\nimport { saveSlide, getSlide } from \"../../../src/utils/banner\";\nimport imageNotFound from \"../../../src/static/images/image-404.jpg\";\nexport default function BannerCategories(_ref) {\n  var category = _ref.category;\n  var imageMessageError = \"Extens\\xE3o do arquivo enviado \\xE9 inv\\xE1lido. Extens\\xF5es permitidas \".concat(process.env.imageExtensionPermitted.toString(), \", com no m\\xE1ximo 10MB\");\n\n  var _useState = useState(\"\"),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState([]),\n      images = _useState2[0],\n      setImages = _useState2[1];\n\n  var _useState3 = useState([]),\n      inputs = _useState3[0],\n      setInputs = _useState3[1];\n\n  var _useState4 = useState([]),\n      files = _useState4[0],\n      setFiles = _useState4[1];\n\n  var _useState5 = useState(1),\n      slideControl = _useState5[0],\n      setSlideControl = _useState5[1];\n\n  var _useState6 = useState({\n    result: \"success\",\n    open: false,\n    message: \"\"\n  }),\n      snackBar = _useState6[0],\n      setSnackBar = _useState6[1];\n\n  function _handleChange(e, inputIndex) {\n    changeBannerImage(e.target.files[0], inputIndex);\n  }\n\n  function addSlide() {\n    var inputIndex = images.length;\n    setImages([].concat(_toConsumableArray(images), [{\n      image: imageNotFound,\n      pos: inputIndex,\n      name: \"\"\n    }]));\n    setInputs([].concat(_toConsumableArray(inputs), [__jsx(FileInput, {\n      type: \"file\",\n      handleChange: function handleChange(e) {\n        return _handleChange(e, inputIndex);\n      },\n      labelInputFile: \"Enviar Imagem\",\n      maxWidth: \"50%\",\n      labelHeight: \"50px\",\n      labelWidth: \"150px\",\n      id: inputIndex,\n      key: inputIndex\n    })]));\n    files.push(null);\n    setFiles(files);\n    setSlideControl(images.length + 1);\n    setSnackBar({\n      open: true,\n      result: \"success\",\n      message: \"Banner adicionado a lista\"\n    });\n  }\n\n  function changeBannerImage(file, index) {\n    if (validateImage(process.env.imageExtensionPermitted, 10000, file)) {\n      var newFile = changeFileName(file, Math.round(Math.random() * 100000 + 1) + \"\" + Date.now());\n      setImages(function (images) {\n        return images.map(function (image, ind) {\n          if (image.pos == index) {\n            return file ? {\n              image: URL.createObjectURL(file),\n              pos: index,\n              name: newFile.name\n            } : {\n              image: imageNotFound,\n              pos: index,\n              name: file.name\n            };\n          }\n\n          return image;\n        });\n      });\n      var _files = files;\n      _files[index] = newFile;\n      setFiles(_files);\n      setSlideControl(index + 1);\n    } else {\n      setSnackBar({\n        open: true,\n        result: 'error',\n        message: imageMessageError\n      });\n    }\n  }\n\n  function handleClose() {\n    setSnackBar(_objectSpread({}, snackBar, {\n      open: false\n    }));\n  }\n\n  function removeSlide(id) {\n    setImages(function (images) {\n      images.splice(id, 1);\n      return images;\n    });\n    setInputs(function (inputs) {\n      inputs.splice(id, 1);\n      return inputs;\n    });\n    setFiles(function (files) {\n      files.splice(id, 1);\n      return files;\n    });\n    setSlideControl(id == 0 ? id + 1 : id);\n    setSnackBar({\n      open: true,\n      result: \"success\",\n      message: \"Banner removido da lista\"\n    });\n  }\n\n  useEffect(function () {\n    setName(router.query.name);\n    getSlide(\"banner\", category, function (err, response) {\n      if (err) {\n        setSnackBar({\n          open: true,\n          message: err,\n          result: \"error\"\n        });\n        return;\n      }\n\n      var Inputs = [];\n      var Files = [];\n\n      var _loop = function _loop(a) {\n        Inputs.push(__jsx(FileInput, {\n          type: \"file\",\n          handleChange: function handleChange(e) {\n            return _handleChange(e, a);\n          },\n          labelInputFile: \"Enviar Imagem\",\n          maxWidth: \"50%\",\n          labelHeight: \"50px\",\n          labelWidth: \"150px\",\n          id: a,\n          key: a\n        }));\n        Files.push(a + 1);\n      };\n\n      for (var a = 0; a < response.length; a++) {\n        _loop(a);\n      }\n\n      setInputs(Inputs);\n      setFiles(Files);\n      setImages(response.map(function (banner) {\n        return _objectSpread({}, banner, {\n          name: banner.name\n        });\n      }));\n    });\n    return function () {};\n  }, []);\n\n  function makeBannerFirst() {\n    var ctrl = slideControl - 1;\n    var currentBanner = images[ctrl];\n    var firstBanner = images[0];\n    var currentFile = files[ctrl];\n    var firstFile = files[0];\n    setImages(function (images) {\n      var newImages = images;\n      newImages[0] = {\n        image: currentBanner.image,\n        pos: 0,\n        name: currentBanner.name\n      };\n      newImages[ctrl] = {\n        image: firstBanner.image,\n        pos: ctrl,\n        name: firstBanner.name\n      };\n      return newImages;\n    });\n    setFiles(function (files) {\n      var newFiles = files;\n      newFiles[0] = currentFile;\n      newFiles[ctrl] = firstFile;\n      return newFiles;\n    });\n    setSlideControl(1);\n  }\n\n  function _saveSlide() {\n    console.log(\"images\", images);\n    var hasEmptyFile = false;\n    console.log(images);\n    console.log(files);\n    files.forEach(function (file) {\n      if (!file) hasEmptyFile = true;\n    });\n    if (hasEmptyFile) setSnackBar({\n      result: \"error\",\n      message: \"Há banners sem imagens\",\n      open: true\n    });else {\n      if (files.length == 0) return setSnackBar({\n        result: \"error\",\n        message: \"Há banners sem imagens\",\n        open: true\n      });\n      saveSlide(category, images, files, \"categories\", function (err, response) {\n        if (err) {\n          setSnackBar({\n            result: \"error\",\n            message: err,\n            open: true\n          });\n          return;\n        }\n\n        setSnackBar({\n          result: \"success\",\n          message: \"Sucesso\",\n          open: true\n        });\n      });\n    }\n  }\n\n  return __jsx(Template, null, __jsx(Sidebar, null), __jsx(Snackbar, {\n    open: snackBar.open,\n    autoHideDuration: 1500,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    severity: snackBar.result\n  }, snackBar.message)), __jsx(Container, null, __jsx(Column, null, __jsx(\"h1\", {\n    className: \"main-title\",\n    style: {\n      textAlign: \"center\",\n      color: \"rgb(35,43,111)\"\n    }\n  }, \"Slide categoria (\", name, \")\"), __jsx(Hr, null), __jsx(Row, {\n    w: \"100%\",\n    align: \"center\"\n  }, __jsx(Column, {\n    style: {\n      width: \"100%\"\n    }\n  }, images.length == 0 ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      height: \"400px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    }\n  }, __jsx(React.Fragment, null, __jsx(\"p\", null, \"Voc\\xEA ainda n\\xE3o adicionou nenhum banner a lista de banners.\"), __jsx(\"p\", null, \"Clique no bot\\xE3o\", \" \", __jsx(\"strong\", null, \"\\\"Adicionar banner a lista\\\"\"), \".\")))) : __jsx(React.Fragment, null, slideControl - 1 != 0 ? __jsx(Button, {\n    style: {\n      width: \"50%\",\n      display: \"block\",\n      margin: \"10px auto\"\n    },\n    onClick: makeBannerFirst\n  }, \"Tornar este banner o principal\") : __jsx(\"span\", {\n    style: {\n      width: \"20px\",\n      height: \"64px\"\n    }\n  }), __jsx(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\"\n    }\n  }, __jsx(ArrowLeft, {\n    onClick: function onClick() {\n      setSlideControl(function (sl) {\n        if (sl == 1) return 1;\n        return sl - 1;\n      });\n    }\n  }), __jsx(ArrowRight, {\n    onClick: function onClick() {\n      setSlideControl(function (sl) {\n        if (sl == images.length) return 1;\n        return sl + 1;\n      });\n    }\n  }), __jsx(Slide, {\n    slideCtrl: slideControl,\n    images: images.map(function (image) {\n      return image.image;\n    }),\n    height: \"400px\",\n    slideWidth: \"100%\"\n  })), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      marginLeft: \"5px\",\n      padding: \"2px 0\"\n    }\n  }, images.map(function (image, id) {\n    return __jsx(ThumbnailBanner, {\n      style: {\n        border: \"\".concat(id == slideControl - 1 ? \"2px solid #960d03\" : \"2px solid transparent\")\n      },\n      onClick: function onClick() {\n        setSlideControl(parseInt(id + 1));\n      }\n    }, __jsx(\"img\", {\n      src: image.image,\n      style: {\n        width: \"100%\"\n      }\n    }));\n  })), __jsx(\"h2\", {\n    style: {\n      textAlign: \"center\"\n    }\n  }, \"Posi\\xE7\\xE3o do banner \", slideControl), __jsx(\"h4\", {\n    style: {\n      textAlign: \"center\"\n    }\n  }, \"Total de banners \", inputs.length))), __jsx(Column, {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    }\n  }, inputs[slideControl - 1], \" \", images.length != 0 ? __jsx(Button, {\n    style: {\n      width: \"30%\"\n    },\n    onClick: function onClick() {\n      return removeSlide(slideControl - 1);\n    }\n  }, \"Remover banner\") : \"\"), __jsx(Button, {\n    style: {\n      width: \"50%\",\n      margin: \"15px auto\",\n      display: \"block\"\n    },\n    onClick: addSlide\n  }, \"Adicionar banner a lista\"), images.length != 0 ? __jsx(Button, {\n    style: {\n      width: \"50%\",\n      margin: \"15px auto\",\n      display: \"block\"\n    },\n    onClick: _saveSlide\n  }, \"Salvar\") : \"\")))));\n}\n\nfunction InputUpload(_ref2) {\n  var id = _ref2.id,\n      handleChange = _ref2.handleChange,\n      file = _ref2.file;\n  return __jsx(\"div\", null, __jsx(\"input\", {\n    type: \"file\",\n    onChange: handleChange,\n    value: file,\n    id: id,\n    style: {\n      width: 0\n    }\n  }), __jsx(\"label\", {\n    htmlFor: id,\n    style: {\n      width: \"120px\",\n      border: \"1px solid black\"\n    }\n  }, \"Upload\"));\n}\n\nvar Column = styled.div.withConfig({\n  displayName: \"categories__Column\",\n  componentId: \"sc-1r0920d-0\"\n})([\"display:flex;flex-direction:column;\"]);\nvar Row = styled.div.withConfig({\n  displayName: \"categories__Row\",\n  componentId: \"sc-1r0920d-1\"\n})([\"display:flex;flex-direction:row;justify-content:\", \";width:\", \";\"], function (props) {\n  return props.align;\n}, function (props) {\n  return props.w;\n});\n\nBannerCategories.getInitialProps = function _callee(_ref3) {\n  var query;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref3.query;\n          return _context.abrupt(\"return\", {\n            category: query.category,\n            categoryName: query.name\n          });\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar ThumbnailBanner = styled.div.withConfig({\n  displayName: \"categories__ThumbnailBanner\",\n  componentId: \"sc-1r0920d-2\"\n})([\"width:100px;display:flex;margin-right:5px;align-items:center;transition:0.2s;cursor:pointer;:hover{opacity:0.8;}\"]);\nvar ImageContainer = styled.div.withConfig({\n  displayName: \"categories__ImageContainer\",\n  componentId: \"sc-1r0920d-3\"\n})([\"img{max-width:120px;}\"]);\nvar ArrowLeft = styled.span.withConfig({\n  displayName: \"categories__ArrowLeft\",\n  componentId: \"sc-1r0920d-4\"\n})([\":hover{opacity:0.8;}transition:0.2s;position:absolute;z-index:9;left:0;margin-left:40px;cursor:pointer;top:50%;margin-top:-10px;border-top:30px solid transparent;border-bottom:30px solid transparent;border-right:30px solid #960d03;\"]);\nvar ArrowRight = styled.span.withConfig({\n  displayName: \"categories__ArrowRight\",\n  componentId: \"sc-1r0920d-5\"\n})([\":hover{opacity:0.8;}transition:0.2s;position:absolute;z-index:9;right:0;margin-right:40px;cursor:pointer;width:0;height:0;top:50%;margin-top:-10px;border-top:30px solid transparent;border-bottom:30px solid transparent;border-left:30px solid #960d03;\"]);","map":{"version":3,"sources":["C:/Users/Gluz/Projects/web/multcostura/multcostura-web/pages/admin/banner/categories.js"],"names":["React","useState","useEffect","styled","router","Template","Sidebar","Slide","Container","Button","Select","Hr","FileInput","Snackbar","Alert","changeFileName","validateImage","saveSlide","getSlide","imageNotFound","BannerCategories","category","imageMessageError","process","env","imageExtensionPermitted","toString","name","setName","images","setImages","inputs","setInputs","files","setFiles","slideControl","setSlideControl","result","open","message","snackBar","setSnackBar","handleChange","e","inputIndex","changeBannerImage","target","addSlide","length","image","pos","push","file","index","newFile","Math","round","random","Date","now","map","ind","URL","createObjectURL","_files","handleClose","removeSlide","id","splice","query","err","response","Inputs","Files","a","banner","makeBannerFirst","ctrl","currentBanner","firstBanner","currentFile","firstFile","newImages","newFiles","_saveSlide","console","log","hasEmptyFile","forEach","textAlign","color","width","height","display","justifyContent","alignItems","flexDirection","margin","position","sl","flexWrap","marginLeft","padding","border","parseInt","InputUpload","Column","div","Row","props","align","w","getInitialProps","categoryName","ThumbnailBanner","ImageContainer","ArrowLeft","span","ArrowRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport router from \"next/router\";\nimport Template from \"../../../src/components/templates/Admin\";\nimport Sidebar from \"../../../src/components/admin/Sidebar\";\nimport Slide from \"../../../src/components/utils/Slider\";\nimport {\n  Container,\n  Button,\n  Select,\n  Hr\n} from \"../../../src/static/styled-components/base\";\nimport FileInput from \"../../../src/components/utils/FileInput\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { changeFileName, validateImage } from \"../../../src/utils/images\";\nimport { saveSlide, getSlide } from \"../../../src/utils/banner\";\n\nimport imageNotFound from \"../../../src/static/images/image-404.jpg\";\n\nexport default function BannerCategories({ category }) {\n  const imageMessageError = `Extensão do arquivo enviado é inválido. Extensões permitidas ${process.env.imageExtensionPermitted.toString()}, com no máximo 10MB`\n  const [name, setName] = useState(\"\");\n  const [images, setImages] = useState([]);\n  const [inputs, setInputs] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [slideControl, setSlideControl] = useState(1);\n  const [snackBar, setSnackBar] = useState({\n    result: \"success\",\n    open: false,\n    message: \"\"\n  });\n\n  function handleChange(e, inputIndex) {\n    changeBannerImage(e.target.files[0], inputIndex);\n  }\n\n  function addSlide() {\n    const inputIndex = images.length;\n    setImages([...images, { image: imageNotFound, pos: inputIndex, name: \"\" }]);\n    setInputs([\n      ...inputs,\n      <FileInput\n        type=\"file\"\n        handleChange={e => handleChange(e, inputIndex)}\n        labelInputFile={`Enviar Imagem`}\n        maxWidth=\"50%\"\n        labelHeight=\"50px\"\n        labelWidth=\"150px\"\n        id={inputIndex}\n        key={inputIndex}\n      />\n    ]);\n    files.push(null);\n    setFiles(files);\n    setSlideControl(images.length + 1);\n    setSnackBar({\n      open: true,\n      result: \"success\",\n      message: \"Banner adicionado a lista\"\n    });\n  }\n\n  function changeBannerImage(file, index) {\n\n    if (validateImage(process.env.imageExtensionPermitted, 10000, file)) {\n      const newFile = changeFileName(\n        file,\n        Math.round(Math.random() * 100000 + 1) + \"\" + Date.now()\n      );\n\n      setImages(images =>\n        images.map((image, ind) => {\n          if (image.pos == index) {\n            return file\n              ? {\n                  image: URL.createObjectURL(file),\n                  pos: index,\n                  name: newFile.name\n                }\n              : { image: imageNotFound, pos: index, name: file.name };\n          }\n          return image;\n        })\n      );\n      const _files = files;\n      _files[index] = newFile;\n      setFiles(_files);\n      setSlideControl(index + 1);\n    } else {\n      setSnackBar({\n        open: true,\n        result: 'error',\n        message: imageMessageError\n      })\n    }\n  }\n\n  function handleClose() {\n    setSnackBar({\n      ...snackBar,\n      open: false\n    });\n  }\n\n  function removeSlide(id) {\n    setImages(images => {\n      images.splice(id, 1);\n      return images;\n    });\n    setInputs(inputs => {\n      inputs.splice(id, 1);\n      return inputs;\n    });\n    setFiles(files => {\n      files.splice(id, 1);\n      return files;\n    });\n    setSlideControl(id == 0 ? id + 1 : id);\n    setSnackBar({\n      open: true,\n      result: \"success\",\n      message: \"Banner removido da lista\"\n    });\n  }\n\n  useEffect(() => {\n    setName(router.query.name);\n    getSlide(\"banner\", category, function(err, response) {\n      if (err) {\n        setSnackBar({\n          open: true,\n          message: err,\n          result: \"error\"\n        });\n        return;\n      }\n      const Inputs = [];\n      const Files = [];\n      for (let a = 0; a < response.length; a++) {\n        Inputs.push(\n          <FileInput\n            type=\"file\"\n            handleChange={e => handleChange(e, a)}\n            labelInputFile={`Enviar Imagem`}\n            maxWidth=\"50%\"\n            labelHeight=\"50px\"\n            labelWidth=\"150px\"\n            id={a}\n            key={a}\n          />\n        );\n        Files.push(a + 1);\n      }\n      setInputs(Inputs);\n      setFiles(Files);\n      setImages(response.map(banner => ({ ...banner, name: banner.name })));\n    });\n    return () => {};\n  }, []);\n\n  function makeBannerFirst() {\n    const ctrl = slideControl - 1;\n    let currentBanner = images[ctrl];\n    let firstBanner = images[0];\n    let currentFile = files[ctrl];\n    let firstFile = files[0];\n    setImages(images => {\n      const newImages = images;\n      newImages[0] = {\n        image: currentBanner.image,\n        pos: 0,\n        name: currentBanner.name\n      };\n      newImages[ctrl] = {\n        image: firstBanner.image,\n        pos: ctrl,\n        name: firstBanner.name\n      };\n      return newImages;\n    });\n    setFiles(files => {\n      const newFiles = files;\n      newFiles[0] = currentFile;\n      newFiles[ctrl] = firstFile;\n      return newFiles;\n    });\n    setSlideControl(1);\n  }\n\n  function _saveSlide() {\n    console.log(\"images\", images)\n    let hasEmptyFile = false;\n    console.log(images);\n    console.log(files);\n\n    files.forEach(file => {\n      if (!file) hasEmptyFile = true;\n    });\n\n    if (hasEmptyFile)\n      setSnackBar({\n        result: \"error\",\n        message: \"Há banners sem imagens\",\n        open: true\n      });\n    else {\n      if (files.length == 0)\n        return setSnackBar({\n          result: \"error\",\n          message: \"Há banners sem imagens\",\n          open: true\n        });\n\n      saveSlide(category, images, files, \"categories\", function(err, response) {\n        if (err) {\n          setSnackBar({\n            result: \"error\",\n            message: err,\n            open: true\n          });\n          return;\n        }\n        setSnackBar({\n          result: \"success\",\n          message: \"Sucesso\",\n          open: true\n        });\n      });\n    }\n  }\n\n  return (\n    <Template>\n      <Sidebar />\n      <Snackbar\n        open={snackBar.open}\n        autoHideDuration={1500}\n        onClose={handleClose}\n      >\n        <Alert severity={snackBar.result}>{snackBar.message}</Alert>\n      </Snackbar>\n      <Container>\n        <Column>\n          <h1\n            className=\"main-title\"\n            style={{\n              textAlign: \"center\",\n              color: \"rgb(35,43,111)\"\n            }}\n          >\n            Slide categoria ({name})\n          </h1>\n          <Hr />\n\n          <Row w=\"100%\" align=\"center\">\n            <Column style={{ width: \"100%\" }}>\n              {images.length == 0 ? (\n                <>\n                  <div\n                    style={{\n                      height: \"400px\",\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                      alignItems: \"center\",\n                      flexDirection: \"column\"\n                    }}\n                  >\n                    <>\n                      <p>\n                        Você ainda não adicionou nenhum banner a lista de\n                        banners.\n                      </p>\n                      <p>\n                        Clique no botão{\" \"}\n                        <strong>\"Adicionar banner a lista\"</strong>.\n                      </p>\n                    </>\n                  </div>\n                </>\n              ) : (\n                <>\n                  {slideControl - 1 != 0 ? (\n                    <Button\n                      style={{\n                        width: \"50%\",\n                        display: \"block\",\n                        margin: \"10px auto\"\n                      }}\n                      onClick={makeBannerFirst}\n                    >\n                      Tornar este banner o principal\n                    </Button>\n                  ) : (\n                    <span style={{ width: \"20px\", height: \"64px\" }}></span>\n                  )}\n                  <div style={{ position: \"relative\", width: \"100%\" }}>\n                    <ArrowLeft\n                      onClick={() => {\n                        setSlideControl(sl => {\n                          if (sl == 1) return 1;\n                          return sl - 1;\n                        });\n                      }}\n                    />\n                    <ArrowRight\n                      onClick={() => {\n                        setSlideControl(sl => {\n                          if (sl == images.length) return 1;\n                          return sl + 1;\n                        });\n                      }}\n                    />\n                    <Slide\n                      slideCtrl={slideControl}\n                      images={images.map(image => image.image)}\n                      height=\"400px\"\n                      slideWidth=\"100%\"\n                    />\n                  </div>\n\n                  <div\n                    style={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      flexWrap: \"wrap\",\n                      marginLeft: \"5px\",\n                      padding: \"2px 0\"\n                    }}\n                  >\n                    {images.map((image, id) => (\n                      <ThumbnailBanner\n                        style={{\n                          border: `${\n                            id == slideControl - 1\n                              ? \"2px solid #960d03\"\n                              : \"2px solid transparent\"\n                          }`\n                        }}\n                        onClick={() => {\n                          setSlideControl(parseInt(id + 1));\n                        }}\n                      >\n                        <img src={image.image} style={{ width: \"100%\" }} />\n                      </ThumbnailBanner>\n                    ))}\n                  </div>\n\n                  <h2 style={{ textAlign: \"center\" }}>\n                    Posição do banner {slideControl}\n                  </h2>\n                  <h4 style={{ textAlign: \"center\" }}>\n                    Total de banners {inputs.length}\n                  </h4>\n                </>\n              )}\n            </Column>\n            <Column style={{ width: \"100%\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\"\n                }}\n              >\n                {inputs[slideControl - 1]}{\" \"}\n                {images.length != 0 ? (\n                  <Button\n                    style={{ width: \"30%\" }}\n                    onClick={() => removeSlide(slideControl - 1)}\n                  >\n                    Remover banner\n                  </Button>\n                ) : (\n                  \"\"\n                )}\n              </div>\n\n              <Button\n                style={{ width: \"50%\", margin: \"15px auto\", display: \"block\" }}\n                onClick={addSlide}\n              >\n                Adicionar banner a lista\n              </Button>\n\n              {images.length != 0 ? (\n                <Button\n                  style={{\n                    width: \"50%\",\n                    margin: \"15px auto\",\n                    display: \"block\"\n                  }}\n                  onClick={_saveSlide}\n                >\n                  Salvar\n                </Button>\n              ) : (\n                \"\"\n              )}\n            </Column>\n          </Row>\n        </Column>\n      </Container>\n    </Template>\n  );\n}\n\nfunction InputUpload({ id, handleChange, file }) {\n  return (\n    <div>\n      <input\n        type=\"file\"\n        onChange={handleChange}\n        value={file}\n        id={id}\n        style={{ width: 0 }}\n      />\n      <label htmlFor={id} style={{ width: \"120px\", border: \"1px solid black\" }}>\n        Upload\n      </label>\n    </div>\n  );\n}\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: ${props => props.align};\n  width: ${props => props.w};\n`;\n\nBannerCategories.getInitialProps = async ({ query }) => {\n  return { category: query.category, categoryName: query.name };\n};\n\nconst ThumbnailBanner = styled.div`\n  width: 100px;\n  display: flex;\n  margin-right: 5px;\n  align-items: center;\n  transition: 0.2s;\n  cursor: pointer;\n  :hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ImageContainer = styled.div`\n  img {\n    max-width: 120px;\n  }\n`;\n\nconst ArrowLeft = styled.span`\n  :hover {\n    opacity: 0.8;\n  }\n  transition: 0.2s;\n  position: absolute;\n  z-index: 9;\n  left: 0;\n  margin-left: 40px;\n  cursor: pointer;\n  top: 50%;\n  margin-top: -10px;\n  border-top: 30px solid transparent;\n  border-bottom: 30px solid transparent;\n  border-right: 30px solid #960d03;\n`;\nconst ArrowRight = styled.span`\n  :hover {\n    opacity: 0.8;\n  }\n  transition: 0.2s;\n  position: absolute;\n  z-index: 9;\n  right: 0;\n  margin-right: 40px;\n  cursor: pointer;\n  width: 0;\n  height: 0;\n  top: 50%;\n  margin-top: -10px;\n  border-top: 30px solid transparent;\n  border-bottom: 30px solid transparent;\n  border-left: 30px solid #960d03;\n`;\n"]},"metadata":{},"sourceType":"module"}