{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Router, Link } from \"../../../../routes\";\nimport { Button, Select, Input } from \"../../../static/styled-components/base\";\nimport { getMachines, getOptions } from \"../../../utils/machines\";\nimport { Creators as MachineCreators } from \"../../../ducks/machines\";\nimport { Creators as UtilCreators } from \"../../../ducks/utils\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nexport default function ListMachines() {\n  var _useState = useState({\n    category: null,\n    manufacturer: null,\n    search: \"\"\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var _useState2 = useState([]),\n      categories = _useState2[0],\n      setCategories = _useState2[1];\n\n  var _useState3 = useState([]),\n      manufacturers = _useState3[0],\n      setManufacturers = _useState3[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.Machine;\n  }),\n      machines = _useSelector.machines;\n\n  var dispatch = useDispatch();\n\n  var _useState4 = useState({\n    result: \"success\",\n    open: false,\n    message: \"\"\n  }),\n      snackBar = _useState4[0],\n      setSnackBar = _useState4[1];\n\n  function handleClose() {\n    setSnackBar(_objectSpread({}, snackBar, {\n      open: false\n    }));\n  }\n\n  useEffect(function () {\n    function asyncFunc() {\n      return _regeneratorRuntime.async(function asyncFunc$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              getMachines(function (err, machines) {\n                if (err) {\n                  setSnackBar({\n                    result: \"error\",\n                    open: true,\n                    message: err\n                  });\n                  dispatch(MachineCreators.loadMachines([]));\n                  return;\n                }\n\n                dispatch(MachineCreators.loadMachines(machines));\n              }, {\n                category: state.category,\n                manufacturer: state.manufacturer,\n                search: state.search\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    asyncFunc();\n    return function () {};\n  }, [state]);\n  useEffect(function () {\n    function asyncFunc() {\n      getMachines(function (err, machines) {\n        if (err) {\n          setSnackBar({\n            result: \"error\",\n            message: err,\n            open: true\n          });\n          return;\n        }\n\n        dispatch(MachineCreators.loadMachines(machines));\n      });\n      getOptions(function (err, data) {\n        if (err) {\n          setSnackBar({\n            result: \"error\",\n            open: true,\n            message: err\n          });\n          return;\n        }\n\n        setCategories(data.categories.data);\n        setManufacturers(data.manufacturers.data);\n      });\n    }\n\n    asyncFunc();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Snackbar, {\n    open: snackBar.open,\n    autoHideDuration: 3000,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    severity: snackBar.result\n  }, snackBar.message)), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"block\",\n      margin: \"auto\"\n    }\n  }, __jsx(Input, {\n    value: state.search,\n    type: \"text\",\n    name: \"search\",\n    id: \"search\",\n    placeholder: \"Pesquise pelo nome\",\n    onChange: function onChange(e) {\n      return setState(_objectSpread({}, state, {\n        search: e.target.value\n      }));\n    }\n  }), __jsx(Select, {\n    value: state.category,\n    onChange: function onChange(e) {\n      return setState(_objectSpread({}, state, {\n        category: e.target.value\n      }));\n    }\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Escolha uma categoria\"), categories.map(function (category) {\n    return __jsx(\"option\", {\n      selected: state.category == category.id ? category.id : false,\n      value: category.id\n    }, category.name);\n  })), __jsx(Select, {\n    value: state.manufacturer,\n    onChange: function onChange(e) {\n      return setState(_objectSpread({}, state, {\n        manufacturer: e.target.value\n      }));\n    }\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Escolha um fabricante\"), manufacturers.map(function (manu) {\n    return __jsx(\"option\", {\n      selected: state.manufacturer == manu.id ? manu.id : false,\n      value: manu.id\n    }, manu.name);\n  }))), __jsx(Container, null, machines.map(function (machine) {\n    return __jsx(Link, {\n      href: \"/admin/machines/machine?id=\".concat(machine.id.toString())\n    }, __jsx(CardContainer, null, __jsx(\"img\", {\n      src: machine.images[0]\n    }), __jsx(\"div\", null, __jsx(Title, null, \" \", machine.name, \" \"), __jsx(Subtitle, null, machine.description))));\n  })));\n\n  function navigateToMachine(id) {\n    Router.push(\"/admin/machines/machine?id=\".concat(id));\n  }\n}\nvar Container = styled.div.withConfig({\n  displayName: \"ListMachines__Container\",\n  componentId: \"um70bv-0\"\n})([\"display:flex;flex-direction:row;width:100%;flex-wrap:wrap;justify-content:center;\"]);\nvar CardContainer = styled.div.withConfig({\n  displayName: \"ListMachines__CardContainer\",\n  componentId: \"um70bv-1\"\n})([\"min-width:250px;max-width:250px;max-height:300px;overflow:hidden;cursor:pointer;display:flex;flex-direction:column;flex-wrap:no-wrap;margin-bottom:10px;margin-right:15px;img{width:100%;max-width:230px;display:block;margin:auto}padding:15px;:hover{box-shadow:0 14px 28px rgba(0,0,0,0.25),0 10px 10px rgba(0,0,0,0.22);}box-shadow:0 3px 6px rgba(0,0,0,0.16),0 3px 6px rgba(0,0,0,0.23);}\"]);\nvar Title = styled.p.withConfig({\n  displayName: \"ListMachines__Title\",\n  componentId: \"um70bv-2\"\n})([\"font-size:22px;margin:0 15px;\"]);\nvar Subtitle = styled.p.withConfig({\n  displayName: \"ListMachines__Subtitle\",\n  componentId: \"um70bv-3\"\n})([\"color:lightgrey;margin:0 15px;\"]);\nvar Description = styled.p.withConfig({\n  displayName: \"ListMachines__Description\",\n  componentId: \"um70bv-4\"\n})([\"color:grey;margin:15px 15px;\"]);","map":null,"metadata":{},"sourceType":"module"}