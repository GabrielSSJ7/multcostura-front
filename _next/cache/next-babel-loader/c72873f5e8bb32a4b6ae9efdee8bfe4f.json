{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport setApi from \"../../../src/api\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Template from \"../../../src/components/templates/Admin\";\nimport Sidebar from \"../../../src/components/admin/Sidebar\";\nimport { Container, Button, Input, TextArea, Hr } from \"../../../src/static/styled-components/base\";\nimport InputMask from \"react-input-mask\";\nexport default function AddNews() {\n  const {\n    0: snackBar,\n    1: setSnackBar\n  } = useState({\n    result: \"success\",\n    open: false,\n    message: \"\"\n  });\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    title: \"\",\n    description: \"\",\n    date: \"\"\n  });\n\n  function handleChange(e) {\n    setForm(_objectSpread({}, form, {\n      [e.target.name]: e.target.value\n    }));\n  }\n\n  function addNews() {\n    setApi().post(\"/news\", _objectSpread({}, form)).then(response => {\n      setForm({\n        title: \"\",\n        description: \"\",\n        date: \"\"\n      });\n      setSnackBar({\n        open: true,\n        result: \"success\",\n        message: \"NotÃ­cia criada com sucesso!\"\n      });\n    }).catch(err => {\n      setSnackBar({\n        open: true,\n        result: \"error\",\n        message: err.response ? err.response.data.toString() : err.toString()\n      });\n    });\n  }\n\n  function handleClose() {\n    setSnackBar(_objectSpread({}, snackBar, {\n      open: false\n    }));\n  }\n\n  return __jsx(Template, null, __jsx(Snackbar, {\n    open: snackBar.open,\n    autoHideDuration: 3500,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    severity: snackBar.result\n  }, snackBar.message)), __jsx(Sidebar, null), __jsx(Container, null, __jsx(\"h1\", {\n    className: \"main-title\",\n    style: {\n      textAlign: \"center\",\n      color: \"rgb(35,43,111)\"\n    }\n  }, \"Adicionar Not\\xEDcia\"), __jsx(Hr, null), __jsx(Form, null, __jsx(Input, {\n    placeholder: \"T\\xEDtulo\",\n    onChange: handleChange,\n    name: \"title\",\n    id: \"title\",\n    value: form.title\n  }), __jsx(TextArea, {\n    placeholder: \"Descri\\xE7\\xE3o\",\n    onChange: handleChange,\n    name: \"description\",\n    id: \"description\",\n    value: form.description\n  }), __jsx(InputMask, {\n    placeholder: \"Data\",\n    className: \"form-control\",\n    mask: \"99/99/9999\",\n    name: \"date\",\n    maskChar: null,\n    onChange: handleChange,\n    value: form.date\n  }), __jsx(Button, {\n    onClick: addNews\n  }, \"Adicionar\"))));\n}\nconst Form = styled.div.withConfig({\n  displayName: \"add-news__Form\",\n  componentId: \"sc-1weqszv-0\"\n})([\"display:flex;flex-direction:column;margin:20px;justify-content:space-between;\"]);","map":null,"metadata":{},"sourceType":"module"}