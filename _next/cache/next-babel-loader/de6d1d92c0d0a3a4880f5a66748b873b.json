{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { Creators } from \"../../ducks/upload\";\nimport { validateImage } from '../../utils/images';\nimport { Creators as UtilsCreators } from \"../../ducks/utils\";\nconst reactCtx = React.createContext({});\nexport default function Upload({\n  onRef,\n  imageURL,\n  labelInputFile,\n  id\n}) {\n  const ctx = useContext(reactCtx);\n  const dispatch = useDispatch();\n  const {\n    file,\n    key\n  } = useSelector(state => state.Upload);\n  useEffect(() => {\n    if (onRef) onRef(ctx);\n  }, []);\n  useEffect(() => {\n    console.log(file);\n    return () => {};\n  }, [file]);\n\n  function handleChange(event) {\n    if (validateImage(process.env.imageExtensionPermitted, 10000, event.target.files[0])) {\n      const file = event.target.files[0];\n\n      if (file) {\n        dispatch(Creators.changeFile(file));\n      } else {\n        dispatch(Creators.changeFile(null));\n      }\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"input\", {\n    id: id,\n    type: \"file\",\n    style: {\n      width: \"0.1px\",\n      height: \"0.1px\",\n      opacity: 0,\n      overflow: \"hidden\",\n      position: \"absolute\",\n      zIndex: -1\n    },\n    name: \"icon\",\n    id: \"icon\",\n    onChange: handleChange,\n    key: key\n  }), __jsx(\"label\", {\n    htmlFor: \"icon\",\n    style: {\n      border: \"1px dotted lightgrey\",\n      padding: \"5px 10px\",\n      cursor: \"pointer\"\n    }\n  }, __jsx(\"span\", {\n    style: {\n      display: file ? \"none\" : imageURL ? \"none\" : \"flex\",\n      flexDirection: \"column \"\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faArrowUp,\n    style: {\n      width: \"32px\",\n      margin: \"auto\",\n      display: \"block\"\n    }\n  }), \" \", __jsx(\"br\", null), __jsx(\"hr\", {\n    style: {\n      width: \"100%\"\n    }\n  }), labelInputFile), file ? __jsx(\"img\", {\n    src: file ? URL.createObjectURL(file) : \"\"\n  }) : __jsx(\"img\", {\n    src: imageURL\n  })));\n}","map":null,"metadata":{},"sourceType":"module"}