{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport router from \"next/router\";\nimport Template from \"../../templates/Admin\";\nimport Sidebar from \"../Sidebar\";\nimport Slide from \"../../utils/Slider\";\nimport { Container, Button, Select, Hr } from \"../../../static/styled-components/base\";\nimport FileInput from \"../../utils/FileInput\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { changeFileName, validateImage } from \"../../../utils/images\";\nimport { saveSlide, getSlide } from \"../../../utils/banner\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport imageNotFound from \"../../../static/images/image-404.jpg\";\nexport default function HomeBanner() {\n  var imageMessageError = \"Extens\\xE3o do arquivo enviado \\xE9 inv\\xE1lido. Extens\\xF5es permitidas \".concat(process.env.imageExtensionPermitted.toString(), \", com no m\\xE1ximo 10MB\");\n\n  var _useState = useState(\"\"),\n      name = _useState[0],\n      setName = _useState[1];\n\n  var _useState2 = useState([]),\n      images = _useState2[0],\n      setImages = _useState2[1];\n\n  var _useState3 = useState([]),\n      inputs = _useState3[0],\n      setInputs = _useState3[1];\n\n  var _useState4 = useState([]),\n      files = _useState4[0],\n      setFiles = _useState4[1];\n\n  var _useState5 = useState(1),\n      slideControl = _useState5[0],\n      setSlideControl = _useState5[1];\n\n  var _useState6 = useState({\n    result: \"success\",\n    open: false,\n    message: \"\"\n  }),\n      snackBar = _useState6[0],\n      setSnackBar = _useState6[1];\n\n  function _handleChange(e, inputIndex) {\n    changeBannerImage(e.target.files[0], inputIndex);\n  }\n\n  function addSlide() {\n    var inputIndex = images.length;\n    setImages([].concat(_toConsumableArray(images), [{\n      image: imageNotFound,\n      pos: inputIndex,\n      name: \"\"\n    }]));\n    setInputs([].concat(_toConsumableArray(inputs), [__jsx(FileInput, {\n      type: \"file\",\n      handleChange: function handleChange(e) {\n        return _handleChange(e, inputIndex);\n      },\n      labelInputFile: \"Enviar Imagem\",\n      maxWidth: \"50%\",\n      labelHeight: \"50px\",\n      labelWidth: \"150px\",\n      id: inputIndex,\n      key: inputIndex\n    })]));\n    files.push(null);\n    setFiles(files);\n    setSlideControl(images.length + 1);\n    setSnackBar({\n      open: true,\n      result: \"success\",\n      message: \"Banner adicionado a lista\"\n    });\n  }\n\n  function changeBannerImage(file, index) {\n    if (validateImage(process.env.imageExtensionPermitted, 10000, file)) {\n      var newFile = changeFileName(file, Math.round(Math.random() * 100000 + 1) + \"\" + Date.now());\n      setImages(function (images) {\n        return images.map(function (image, ind) {\n          if (image.pos == index) {\n            return file ? {\n              image: URL.createObjectURL(file),\n              pos: index,\n              name: newFile.name\n            } : {\n              image: imageNotFound,\n              pos: index,\n              name: file.name\n            };\n          }\n\n          return image;\n        });\n      });\n      var _files = files;\n      _files[index] = newFile;\n      setFiles(_files);\n      setSlideControl(index + 1);\n    } else {\n      setSnackBar({\n        open: true,\n        result: 'error',\n        message: imageMessageError\n      });\n    }\n  }\n\n  function handleClose() {\n    setSnackBar(_objectSpread({}, snackBar, {\n      open: false\n    }));\n  }\n\n  function removeSlide(id) {\n    setImages(function (images) {\n      images.splice(id, 1);\n      return images;\n    });\n    setInputs(function (inputs) {\n      inputs.splice(id, 1);\n      return inputs;\n    });\n    setFiles(function (files) {\n      files.splice(id, 1);\n      return files;\n    });\n    setSlideControl(id == 0 ? id + 1 : id);\n    setSnackBar({\n      open: true,\n      result: \"success\",\n      message: \"Banner removido da lista\"\n    });\n  }\n\n  useEffect(function () {\n    setName(router.query.name);\n\n    function asyncFunc() {\n      getSlide(\"institutional\", \"homeBanners\", function (err, response) {\n        if (err) {\n          setSnackBar({\n            open: true,\n            message: err,\n            result: \"error\"\n          });\n          return;\n        }\n\n        var Inputs = [];\n        var Files = [];\n\n        var _loop = function _loop(a) {\n          Inputs.push(__jsx(FileInput, {\n            type: \"file\",\n            handleChange: function handleChange(e) {\n              return _handleChange(e, a);\n            },\n            labelInputFile: \"Enviar Imagem\",\n            maxWidth: \"50%\",\n            labelHeight: \"50px\",\n            labelWidth: \"150px\",\n            id: a,\n            key: a\n          }));\n          Files.push(a + 1);\n        };\n\n        for (var a = 0; a < response.length; a++) {\n          _loop(a);\n        }\n\n        setInputs(Inputs);\n        setFiles(Files);\n        setImages(response.map(function (banner) {\n          return _objectSpread({}, banner, {\n            name: banner.name\n          });\n        }));\n      });\n    }\n\n    asyncFunc();\n    return function () {};\n  }, []);\n\n  function makeBannerFirst() {\n    var ctrl = slideControl - 1;\n    var currentBanner = images[ctrl];\n    var firstBanner = images[0];\n    var currentFile = files[ctrl];\n    var firstFile = files[0];\n    setImages(function (images) {\n      var newImages = images;\n      newImages[0] = {\n        image: currentBanner.image,\n        pos: 0,\n        name: currentBanner.name\n      };\n      newImages[ctrl] = {\n        image: firstBanner.image,\n        pos: ctrl,\n        name: firstBanner.name\n      };\n      return newImages;\n    });\n    setFiles(function (files) {\n      var newFiles = files;\n      newFiles[0] = currentFile;\n      newFiles[ctrl] = firstFile;\n      return newFiles;\n    });\n    setSlideControl(1);\n  }\n\n  function _saveSlide() {\n    var hasEmptyFile = false;\n    files.forEach(function (file) {\n      if (!file) hasEmptyFile = true;\n    });\n    if (hasEmptyFile) setSnackBar({\n      result: \"error\",\n      message: \"Há banners sem imagens\",\n      open: true\n    });else {\n      if (files.length == 0) return setSnackBar({\n        result: \"error\",\n        message: \"Há banners sem imagens\",\n        open: true\n      });\n      saveSlide(null, images, files, \"homeBanners\", function (err, response) {\n        if (err) {\n          setSnackBar({\n            result: \"error\",\n            message: err,\n            open: true\n          });\n          return;\n        }\n\n        setSnackBar({\n          result: \"success\",\n          message: \"Sucesso\",\n          open: true\n        });\n      });\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Snackbar, {\n    open: snackBar.open,\n    autoHideDuration: 1500,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    severity: snackBar.result\n  }, snackBar.message)), __jsx(Column, null, __jsx(\"div\", {\n    onClick: function onClick() {\n      return location.reload();\n    },\n    className: \"arrow-back\",\n    style: {\n      background: \"#960d03\",\n      borderRadius: \"5px\",\n      padding: \"5px\",\n      maxWidth: \"60px\",\n      marginLeft: \"10px\",\n      marginBottom: \"5px\",\n      display: 'flex',\n      flexDirection: \"row\"\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faArrowLeft,\n    style: {\n      color: \"white\"\n    }\n  }), __jsx(\"span\", {\n    style: {\n      color: \"white\"\n    }\n  }, \"Voltar\")), __jsx(\"style\", null, \"  \\n\\n            .arrow-back {\\n              transition: .5s;\\n            }\\n\\n            .arrow-back:hover {\\n              cursor: pointer;\\n              opacity: .8;\\n            }\\n          \"), __jsx(Row, {\n    align: \"center\"\n  }, __jsx(Column, {\n    style: {\n      width: \"100%\"\n    }\n  }, images.length == 0 ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      height: \"400px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    }\n  }, __jsx(React.Fragment, null, __jsx(\"p\", null, \"Voc\\xEA ainda n\\xE3o adicionou nenhum banner a lista de banners.\"), __jsx(\"p\", null, \"Clique no bot\\xE3o\", \" \", __jsx(\"strong\", null, \"\\\"Adicionar banner a lista\\\"\"), \".\")))) : __jsx(React.Fragment, null, slideControl - 1 != 0 ? __jsx(Button, {\n    style: {\n      width: \"50%\",\n      display: \"block\",\n      margin: \"10px auto\"\n    },\n    onClick: makeBannerFirst\n  }, \"Tornar este banner o principal\") : __jsx(\"span\", {\n    style: {\n      width: \"20px\",\n      height: \"64px\"\n    }\n  }), __jsx(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\"\n    }\n  }, __jsx(ArrowLeft, {\n    onClick: function onClick() {\n      setSlideControl(function (sl) {\n        if (sl == 1) return 1;\n        return sl - 1;\n      });\n    }\n  }), __jsx(ArrowRight, {\n    onClick: function onClick() {\n      setSlideControl(function (sl) {\n        if (sl == images.length) return 1;\n        return sl + 1;\n      });\n    }\n  }), __jsx(Slide, {\n    slideCtrl: slideControl,\n    images: images.map(function (image) {\n      return image.image;\n    }),\n    height: \"400px\",\n    slideWidth: \"100%\"\n  })), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      marginLeft: \"5px\",\n      padding: \"2px 0\"\n    }\n  }, images.map(function (image, id) {\n    return __jsx(ThumbnailBanner, {\n      style: {\n        border: \"\".concat(id == slideControl - 1 ? \"2px solid #960d03\" : \"2px solid transparent\")\n      },\n      onClick: function onClick() {\n        setSlideControl(parseInt(id + 1));\n      }\n    }, __jsx(\"img\", {\n      src: image.image,\n      style: {\n        width: \"100%\"\n      }\n    }));\n  })), __jsx(\"h2\", {\n    style: {\n      textAlign: \"center\"\n    }\n  }, \"Posi\\xE7\\xE3o do banner \", slideControl), __jsx(\"h4\", {\n    style: {\n      textAlign: \"center\"\n    }\n  }, \"Total de banners \", inputs.length))), __jsx(Column, {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    }\n  }, inputs[slideControl - 1], \" \", images.length != 0 ? __jsx(Button, {\n    style: {\n      width: \"30%\"\n    },\n    onClick: function onClick() {\n      return removeSlide(slideControl - 1);\n    }\n  }, \"Remover banner\") : \"\"), __jsx(Button, {\n    style: {\n      width: \"50%\",\n      margin: \"15px auto\",\n      display: \"block\"\n    },\n    onClick: addSlide\n  }, \"Adicionar banner a lista\"), images.length != 0 ? __jsx(Button, {\n    style: {\n      width: \"50%\",\n      margin: \"15px auto\",\n      display: \"block\"\n    },\n    onClick: _saveSlide\n  }, \"Salvar\") : \"\"))));\n}\nvar Column = styled.div.withConfig({\n  displayName: \"Home__Column\",\n  componentId: \"sc-1ji1hcl-0\"\n})([\"display:flex;flex-direction:column;\"]);\nvar Row = styled.div.withConfig({\n  displayName: \"Home__Row\",\n  componentId: \"sc-1ji1hcl-1\"\n})([\"display:flex;flex-direction:row;justify-content:\", \";width:\", \";\"], function (props) {\n  return props.align;\n}, function (props) {\n  return props.w;\n});\nvar ThumbnailBanner = styled.div.withConfig({\n  displayName: \"Home__ThumbnailBanner\",\n  componentId: \"sc-1ji1hcl-2\"\n})([\"width:100px;display:flex;margin-right:5px;align-items:center;transition:0.2s;cursor:pointer;:hover{opacity:0.8;}\"]);\nvar ImageContainer = styled.div.withConfig({\n  displayName: \"Home__ImageContainer\",\n  componentId: \"sc-1ji1hcl-3\"\n})([\"img{max-width:120px;}\"]);\nvar ArrowLeft = styled.span.withConfig({\n  displayName: \"Home__ArrowLeft\",\n  componentId: \"sc-1ji1hcl-4\"\n})([\":hover{opacity:0.8;}transition:0.2s;position:absolute;z-index:9;left:0;margin-left:40px;cursor:pointer;top:50%;margin-top:-10px;border-top:30px solid transparent;border-bottom:30px solid transparent;border-right:30px solid #960d03;\"]);\nvar ArrowRight = styled.span.withConfig({\n  displayName: \"Home__ArrowRight\",\n  componentId: \"sc-1ji1hcl-5\"\n})([\":hover{opacity:0.8;}transition:0.2s;position:absolute;z-index:9;right:0;margin-right:40px;cursor:pointer;width:0;height:0;top:50%;margin-top:-10px;border-top:30px solid transparent;border-bottom:30px solid transparent;border-left:30px solid #960d03;\"]);","map":null,"metadata":{},"sourceType":"module"}