{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Router, Link } from \"../../../routes\";\nimport setApi from \"../../../src/api\";\nimport EditGalleryImages from \"../../../src/components/admin/news/EditGalleryImages\";\nimport EditGalleryVideos from \"../../../src/components/admin/news/EditGalleryVideos\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Template from \"../../../src/components/templates/Admin\";\nimport Sidebar from \"../../../src/components/admin/Sidebar\";\nimport { Container, Button, Input, TextArea, Hr } from \"../../../src/static/styled-components/base\";\nimport loadingGif from \"../../../src/static/images/loading.gif\";\nimport InputMask from \"react-input-mask\";\nexport default function EditNews({\n  id\n}) {\n  const {\n    0: news,\n    1: setNews\n  } = useState({});\n  const {\n    0: images,\n    1: setImages\n  } = useState([]);\n  const {\n    0: videos,\n    1: setVideos\n  } = useState([]);\n  const {\n    0: dis,\n    1: setDis\n  } = useState(false);\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    title: \"\",\n    description: \"\",\n    date: \"\"\n  });\n  useEffect(() => {\n    async function async() {\n      setApi().get(\"/news/\" + id).then(response => {\n        setNews(response.data);\n        setForm(_objectSpread({}, response.data));\n      }).catch(err => {\n        setSnackBar({\n          open: true,\n          message: err.response ? err.response.data.toString() : err.toString()\n        });\n      });\n\n      _getImages();\n    }\n\n    async();\n  }, []);\n  useEffect(() => {\n    if (form.description.length >= 200) {\n      setDis(true);\n      setSnackBar({\n        open: true,\n        result: \"error\",\n        message: \"A descrição deve ter no máximo 200 caractéres\"\n      });\n    } else {\n      setDis(false);\n    }\n  }, [form.description]);\n\n  function _getImages() {\n    getImages(id, function (err, r) {\n      if (err) {\n        setSnackBar({\n          result: \"error\",\n          open: true,\n          message: err.response ? err.response.data.toString() : err.toString()\n        });\n        return;\n      }\n\n      setVideos(r.gallery.videos);\n      setImages(r.gallery.images);\n    });\n  }\n\n  const {\n    0: galleryOpen,\n    1: setGalleryOpen\n  } = useState(false);\n  const {\n    0: snackBar,\n    1: setSnackBar\n  } = useState({\n    result: \"success\",\n    open: false,\n    message: \"\"\n  });\n\n  function handleChange(e) {\n    setForm(_objectSpread({}, form, {\n      [e.target.name]: e.target.value\n    }));\n  }\n\n  function editNews() {\n    setApi().put(\"/news/\" + id, _objectSpread({}, form)).then(response => {\n      setSnackBar({\n        open: true,\n        result: \"success\",\n        message: \"Notícia editada com sucesso!\"\n      });\n    }).catch(err => {\n      setSnackBar({\n        open: true,\n        result: \"error\",\n        message: err.response ? err.response.data.toString() : err.toString()\n      });\n    });\n  }\n\n  function handleClose() {\n    setSnackBar(_objectSpread({}, snackBar, {\n      open: false\n    }));\n  }\n\n  function deleteNews() {\n    setApi().delete(\"/news/\" + id).then(response => {\n      setSnackBar({\n        open: true,\n        result: \"success\",\n        message: `Notícia ${form.title} excluída com sucesso`\n      });\n      Router.pushRoute(\"/admin/news\");\n    }).catch(err => {\n      setSnackBar({\n        result: \"error\",\n        open: true,\n        message: err.response ? err.response.data.toString() : err.toString()\n      });\n    });\n  }\n\n  function removeImage(index) {\n    setApi({\n      model: \"news\",\n      type: \"images\",\n      index\n    }).delete(\"/gallery/\" + id).then(response => {\n      setSnackBar({\n        open: true,\n        result: \"success\",\n        message: \"A imagem foi excluida com sucesso!\"\n      });\n\n      _getImages();\n    }).catch(err => {\n      setSnackBar({\n        open: true,\n        result: \"error\",\n        message: err.response ? err.response.data.toString() : err.toString()\n      });\n    });\n  }\n\n  function removeVideo(index) {\n    setApi({\n      model: \"news\",\n      type: \"videos\",\n      index\n    }).delete(\"/gallery/\" + id).then(response => {\n      setSnackBar({\n        open: true,\n        result: \"success\",\n        message: \"O video foi excluido com sucesso!\"\n      });\n\n      _getImages();\n    }).catch(err => {\n      setSnackBar({\n        open: true,\n        result: \"error\",\n        message: err.response ? err.response.data.toString() : err.toString()\n      });\n    });\n  }\n\n  function onSuccess() {\n    _getImages();\n\n    setSnackBar({\n      open: true,\n      result: \"success\",\n      message: \"Os arquivos foram enviados com sucesso\"\n    });\n  }\n\n  function onError(e) {\n    setSnackBar({\n      open: true,\n      result: \"error\",\n      message: e.toString()\n    });\n  }\n\n  return __jsx(Template, null, __jsx(Snackbar, {\n    open: snackBar.open,\n    autoHideDuration: 3500,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    severity: snackBar.result\n  }, snackBar.message)), __jsx(Sidebar, null), __jsx(Container, null, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"space-around\"\n    }\n  }, __jsx(\"h1\", {\n    className: \"main-title\",\n    style: {\n      textAlign: \"center\",\n      color: \"rgb(35,43,111)\"\n    }\n  }, \"Editar \", form.title)), __jsx(Hr, null), __jsx(Form, null, __jsx(Input, {\n    placeholder: \"T\\xEDtulo\",\n    onChange: handleChange,\n    name: \"title\",\n    id: \"title\",\n    value: form.title\n  }), __jsx(TextArea, {\n    placeholder: \"Descri\\xE7\\xE3o\",\n    onChange: handleChange,\n    name: \"description\",\n    id: \"description\",\n    value: form.description,\n    rows: \"5\",\n    style: {\n      border: dis ? '2px solid red' : '',\n      outline: 'none',\n      resize: 'none'\n    }\n  }), __jsx(InputMask, {\n    placeholder: \"Data\",\n    className: \"form-control\",\n    mask: \"99/99/9999\",\n    name: \"date\",\n    maskChar: null,\n    onChange: handleChange,\n    value: form.date\n  }), __jsx(Button, {\n    style: {\n      opacity: dis ? \".8\" : \"1\"\n    },\n    onClick: editNews,\n    disabled: dis\n  }, \"Editar\"), !galleryOpen ? __jsx(Button, {\n    onClick: () => setGalleryOpen(true)\n  }, \"Atualizar Galeria de fotos e v\\xEDdeos\") : \"\", galleryOpen ? __jsx(\"div\", null, __jsx(EditGalleryImages, {\n    images: images,\n    removeImage: removeImage,\n    onSuccess: onSuccess,\n    onError: onError,\n    headers: {\n      model: \"news\",\n      type: \"images\",\n      id\n    }\n  }), \" \", __jsx(EditGalleryVideos, {\n    images: videos,\n    removeVideo: removeVideo,\n    onSuccess: onSuccess,\n    onError: onError,\n    headers: {\n      model: \"news\",\n      type: \"videos\",\n      id\n    }\n  }), \" \") : \"\", __jsx(Button, {\n    onClick: deleteNews\n  }, \"Excluir esta not\\xEDcia\"))));\n}\n\nfunction getImages(id, cb) {\n  setApi({\n    model: \"news\"\n  }).get(`/news/${id}`).then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err);\n  });\n}\n\nEditNews.getInitialProps = ({\n  query\n}) => {\n  return {\n    id: query.id\n  };\n};\n\nconst Form = styled.div.withConfig({\n  displayName: \"edit-news__Form\",\n  componentId: \"sc-1pzc2ot-0\"\n})([\"display:flex;flex-direction:column;margin:20px;justify-content:space-between;\"]);","map":null,"metadata":{},"sourceType":"module"}