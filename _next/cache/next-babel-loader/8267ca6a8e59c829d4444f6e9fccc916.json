{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport setApi from \"../api\";\nimport { fieldValidation, validateImage } from \"../utils/validate\";\nexport function getTools(cb, data) {\n  var filter = data ? data : {};\n  setApi().get(\"/tools?search=\".concat(filter.search)).then(function (response) {\n    cb(null, response.data);\n  })[\"catch\"](function (err) {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function getTool(id, cb) {\n  setApi().get(\"/tools/\".concat(id)).then(function (response) {\n    cb(null, response.data);\n  })[\"catch\"](function (err) {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function getOptions(cb) {\n  var manufacturers, categories;\n  return _regeneratorRuntime.async(function getOptions$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(setApi().get(\"/manufacturer\"));\n\n        case 3:\n          manufacturers = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(setApi().get(\"/categories\"));\n\n        case 6:\n          categories = _context.sent;\n          cb(null, {\n            manufacturers: manufacturers,\n            categories: categories\n          });\n          _context.next = 13;\n          break;\n\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          cb(_context.t0);\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 10]], Promise);\n}\nexport function deleteImage(id, type, image, cb) {\n  setApi()[\"delete\"](\"/images?id=\".concat(id, \"&type=\").concat(type, \"&image=\").concat(image)).then(function (response) {\n    cb(null);\n  })[\"catch\"](function (err) {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function updateTool(tool, toolFile, cb) {\n  var id, name, description, mainFeatures, manufacturer, formData, toolFileKeys;\n  return _regeneratorRuntime.async(function updateTool$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          id = tool.id, name = tool.name, description = tool.description, mainFeatures = tool.mainFeatures, manufacturer = tool.manufacturer;\n          formData = new FormData();\n          formData.append(\"name\", name);\n          formData.append(\"description\", description);\n          formData.append(\"mainFeatures\", mainFeatures);\n          formData.append(\"manufacturer\", manufacturer);\n          toolFileKeys = Object.keys(toolFile);\n          toolFileKeys.forEach(function (mkey) {\n            formData.append(\"toolsFiles\", toolFile[mkey]);\n          });\n          setApi().put(\"/tools/\" + id, formData).then(function (response) {\n            cb(null, response.data);\n          })[\"catch\"](function (err) {\n            cb(err.response ? err.response.data : err.toString());\n          });\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function addTool(tool, toolFiles, cb) {\n  var formData = new FormData();\n  var toolFilesKeys = Object.keys(toolFiles);\n  var hasError = [false];\n  toolFilesKeys.forEach(function (mkey) {\n    hasError[0] = !validateImage([\"png\", \"jpg\", \"jpeg\", \"svg\", \"gif\", \"webp\"], 10000, toolFiles[mkey]);\n    formData.append(\"toolsFiles\", toolFiles[mkey]);\n  });\n\n  if (hasError.includes(true)) {\n    return cb(\"Você precisa subir imagens png, jpg, jpeg, svg, gif, webp com no máximo 10MB\");\n  }\n\n  var fieldError = fieldValidation({\n    nome: tool.name,\n    subtítulo: tool.description\n  });\n\n  if (fieldError[\"return\"]) {\n    formData.append(\"name\", tool.name);\n    formData.append(\"manufacturer\", tool.manufacturer);\n    formData.append(\"description\", tool.description);\n    formData.append(\"mainFeatures\", tool.mainFeatures);\n    setApi().post(\"tools\", formData).then(function (response) {\n      cb(null, response.data);\n    })[\"catch\"](function (err) {\n      cb(err.response ? err.response.data : err.toString());\n    });\n  } else {\n    return cb(\"\".concat(fieldError.message, \" \").concat(fieldError.field));\n  }\n}\nexport function deleteTool(id, cb) {\n  setApi()[\"delete\"](\"/tools/\".concat(id)).then(function (response) {\n    cb(null, response.data);\n  })[\"catch\"](function (err) {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}","map":{"version":3,"sources":["C:/Users/Gluz/Projects/web/multcostura/multcostura-web/src/utils/tools.js"],"names":["setApi","fieldValidation","validateImage","getTools","cb","data","filter","get","search","then","response","err","toString","getTool","id","getOptions","manufacturers","categories","deleteImage","type","image","updateTool","tool","toolFile","name","description","mainFeatures","manufacturer","formData","FormData","append","toolFileKeys","Object","keys","forEach","mkey","put","addTool","toolFiles","toolFilesKeys","hasError","includes","fieldError","nome","subtítulo","post","message","field","deleteTool"],"mappings":"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","sourcesContent":["import setApi from \"../api\";\r\nimport { fieldValidation, validateImage } from \"../utils/validate\";\r\n\r\nexport function getTools(cb, data) {\r\n  const filter = data ? data : {}\r\n  setApi()\r\n    .get(`/tools?search=${filter.search}`)\r\n    .then(response => {\r\n      cb(null, response.data);\r\n    })\r\n    .catch(err => {\r\n      cb(err.response ? err.response.data : err.toString());\r\n    });\r\n}\r\n\r\nexport function getTool(id, cb) {\r\n  setApi()\r\n    .get(`/tools/${id}`)\r\n    .then(response => {\r\n      cb(null, response.data);\r\n    })\r\n    .catch(err => {\r\n      cb(err.response ? err.response.data : err.toString());\r\n    });\r\n}\r\n\r\nexport async function getOptions(cb) {\r\n  try {\r\n    const manufacturers = await setApi().get(\"/manufacturer\");\r\n    const categories = await setApi().get(\"/categories\");\r\n    cb(null, { manufacturers, categories });\r\n  } catch (e) {\r\n    cb(e);\r\n  }\r\n}\r\n\r\nexport function deleteImage(id, type, image, cb) {\r\n  setApi()\r\n    .delete(`/images?id=${id}&type=${type}&image=${image}`)\r\n    .then(response => {\r\n      cb(null);\r\n    })\r\n    .catch(err => {\r\n      cb(err.response ? err.response.data : err.toString());\r\n    });\r\n}\r\n\r\nexport async function updateTool(\r\n  tool,\r\n  toolFile,\r\n  cb\r\n) {\r\n\r\n  const {\r\n    id,\r\n    name,\r\n    description,\r\n    mainFeatures,\r\n    manufacturer\r\n  } = tool;\r\n  const formData = new FormData();\r\n  formData.append(\"name\", name);\r\n  formData.append(\"description\", description);\r\n  formData.append(\"mainFeatures\", mainFeatures);\r\n  formData.append(\"manufacturer\", manufacturer);\r\n  const toolFileKeys = Object.keys(toolFile);\r\n  toolFileKeys.forEach(mkey => {\r\n    formData.append(\"toolsFiles\", toolFile[mkey]);\r\n  })\r\n  setApi()\r\n    .put(\"/tools/\" + id, formData)\r\n    .then(response => {\r\n      cb(null, response.data);\r\n    })\r\n    .catch(err => {\r\n      cb(err.response ? err.response.data : err.toString());\r\n    });\r\n}\r\n\r\nexport function addTool(\r\n  tool,\r\n  toolFiles,\r\n  cb\r\n) {\r\n  const formData = new FormData();\r\n  const toolFilesKeys = Object.keys(toolFiles);\r\n  let hasError = [false];\r\n  toolFilesKeys.forEach(mkey => {\r\n    hasError[0] = !validateImage(\r\n      [\"png\", \"jpg\", \"jpeg\", \"svg\", \"gif\", \"webp\"],\r\n      10000,\r\n      toolFiles[mkey]\r\n    );\r\n    formData.append(\"toolsFiles\", toolFiles[mkey]);\r\n  });\r\n\r\n  if (hasError.includes(true)) {\r\n    return cb(\r\n      \"Você precisa subir imagens png, jpg, jpeg, svg, gif, webp com no máximo 10MB\"\r\n    );\r\n  }\r\n\r\n  const fieldError = fieldValidation({\r\n    nome: tool.name,\r\n    subtítulo: tool.description,\r\n  });\r\n  if (fieldError.return) {\r\n    formData.append(\"name\", tool.name);\r\n    formData.append(\"manufacturer\", tool.manufacturer);\r\n    formData.append(\"description\", tool.description);\r\n    formData.append(\"mainFeatures\", tool.mainFeatures);\r\n    setApi()\r\n      .post(`tools`, formData)\r\n      .then(response => {\r\n        cb(null, response.data);\r\n      })\r\n      .catch(err => {\r\n        cb(err.response ? err.response.data : err.toString());\r\n      });\r\n  } else {\r\n    return cb(`${fieldError.message} ${fieldError.field}`);\r\n  }\r\n}\r\n\r\nexport function deleteTool(id, cb) {\r\n  setApi()\r\n    .delete(`/tools/${id}`)\r\n    .then(response => {\r\n      cb(null, response.data);\r\n    })\r\n    .catch(err => {\r\n      cb(err.response ? err.response.data : err.toString());\r\n    });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}