{"ast":null,"code":"\"use strict\";\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = {\n  changeFileName(file, newName) {\n    if (file) {\n      var blob = file.slice(0, file.size, \"image/png\");\n      const typeFile = file.type.split(\"/\");\n      const newFile = new File([blob], `${newName}.${typeFile[1]}`, {\n        type: file.type\n      });\n      return newFile;\n    }\n  },\n\n  deleteImage(id, type, image, {\n    f,\n    files,\n    keys\n  }, cleanUpFile) {\n    _axios.default.delete(`/images?id=${id}&type=${type}&image=${image}`).then(response => {\n      cleanUpFile(f, files, keys);\n      location.reload();\n    }).catch(err => {});\n  },\n\n  renderInputOrImages(images, objLength, _exclude) {\n    const _images = [];\n    const exclude = _exclude || [];\n\n    for (let x = 0; x < objLength; x++) {\n      let isNull = true;\n      images.forEach((img, i) => {\n        let snBar = img.split(\"/\");\n        let sn = snBar[snBar.length - 1];\n\n        if (!exclude.includes(x)) {\n          if (x == sn[0]) {\n            isNull = false;\n\n            _images.push(img);\n          }\n        } else {\n          isNull = false;\n        }\n      });\n      if (isNull) _images.push(null);\n    }\n\n    return _images;\n  },\n\n  validateImage(types, size, file) {\n    if (!file) return true;\n    let ok = false,\n        filesize = size / 1000;\n    const fileType = file.type.split(\"/\");\n    types.forEach(types => {\n      if (types == fileType[1]) ok = true;\n    });\n    if (filesize > 100) ok = false;\n    if (ok) return true;else return false;\n  },\n\n  getNameImageFromUrl(url) {\n    const splitted = url.split(\"/\");\n    const image = splitted[splitted.length - 1];\n    const imageSplitted = image.split(\".\");\n    return imageSplitted[0];\n  }\n\n};","map":null,"metadata":{},"sourceType":"script"}