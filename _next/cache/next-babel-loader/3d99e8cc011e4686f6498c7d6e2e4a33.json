{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport setApi from '../src/api';\nimport { Row, Column, Title } from '../src/static/styled-components/base';\nimport Template from '../src/components/templates/Web';\nimport SlideWeb from '../src/components/web/SlideWeb';\nimport Filters from '../src/components/web/Filters';\nimport ListProds from '../src/components/web/ListProds';\nimport loading from '../src/static/images/loading.gif';\nexport default function Produtos(_ref) {\n  var id = _ref.id,\n      type = _ref.type,\n      search = _ref.search;\n  var router = useRouter();\n\n  var _useState = useState([]),\n      pageData = _useState[0],\n      setPageData = _useState[1];\n\n  var _useState2 = useState(false),\n      visLoading = _useState2[0],\n      setVisLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      images = _useState3[0],\n      setImages = _useState3[1];\n\n  useEffect(function () {\n    setVisLoading(true);\n\n    function f() {\n      return _regeneratorRuntime.async(function f$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (type != \"tools\") {\n                setApi().get(\"/\".concat(type, \"/\").concat(id)).then(function (res) {\n                  setPageData(res.data);\n                  setImages(res.data.bannerImages ? res.data.bannerImages : []);\n                  setVisLoading(false);\n                })[\"catch\"](function (err) {\n                  setVisLoading(false);\n                  console.log(\"produtos error => \", err);\n                });\n              } else {\n                setVisLoading(false);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    f();\n  }, [router.query]);\n\n  function setLogo() {\n    if (pageData.logo) {\n      return __jsx(\"div\", {\n        style: {\n          flex: 1,\n          display: \"flex\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        }\n      }, __jsx(\"img\", {\n        src: pageData.logo,\n        style: {\n          width: \"120px\"\n        }\n      }));\n    } else if (pageData.name) {\n      return __jsx(\"div\", {\n        style: {\n          flex: 1,\n          textAlign: \"center\",\n          minWidth: \"200px\"\n        }\n      }, __jsx(Title, {\n        style: {\n          textAlign: \"center\",\n          paddingLeft: \"10%\"\n        }\n      }, pageData.name));\n    }\n  }\n\n  return __jsx(Template, null, visLoading ? __jsx(Row, {\n    jc: \"center\",\n    ait: \"center\",\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(\"img\", {\n    src: loading,\n    style: {\n      width: \"32px\"\n    }\n  }), \" \") : __jsx(Column, {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(SlideWeb, {\n    images: images.map(function (img) {\n      return img.image;\n    })\n  }), __jsx(DivLogoFilters, {\n    style: {\n      width: \"100%\",\n      margin: \"35px 0\",\n      flexWrap: 'wrap'\n    }\n  }, setLogo(), __jsx(Filters, {\n    type: type,\n    S: true\n  })), __jsx(ListProds, {\n    id: id,\n    type: type,\n    search: search\n  })));\n}\nvar DivLogoFilters = styled.div.withConfig({\n  displayName: \"produtos__DivLogoFilters\",\n  componentId: \"hao4ka-0\"\n})([\"@media(max-width:1025px){flex-direction:column;h1{padding:0 !important}}display:flex;flex-wrap:wrap\"]);\n\nProdutos.getInitialProps = function (_ref2) {\n  var query = _ref2.query;\n  return {\n    type: query.type,\n    id: query.id,\n    search: query.search\n  };\n};","map":null,"metadata":{},"sourceType":"module"}