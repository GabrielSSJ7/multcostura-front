{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Head from 'next/head';\nimport { Link } from \"../routes\";\nimport { connect } from \"react-redux\";\nimport { Column } from '../src/static/styled-components/base';\nimport Home from '../src/components/web/home/Home';\nimport Map from '../src/components/web/Map';\nimport SlideWeb from '../src/components/web/SlideWeb';\nimport Template from '../src/components/templates/Web';\nimport setApi from '../src/api';\n\nconst IndexPage = () => {\n  const {\n    0: resellers,\n    1: setResellers\n  } = useState([]);\n  const {\n    0: images,\n    1: setImages\n  } = useState([]);\n  const {\n    0: map,\n    1: setMap\n  } = useState(null);\n  const {\n    0: infobox,\n    1: setInfobox\n  } = useState();\n  useEffect(() => {\n    async function async() {\n      setApi().get('/institutional/homeBanners').then(res => {\n        setImages(res.data);\n      }).catch(err => {});\n\n      try {\n        const response = await setApi().get('/reseller');\n        setResellers(response.data);\n        const revendedores = response.data;\n        let map, infobox;\n\n        function loadMapScenario() {\n          map = new Microsoft.Maps.Map(document.getElementById('map'), {});\n          setMap(map);\n\n          for (let revendedor in revendedores) {\n            //Create an infobox at the center of the map but don't show it.\n            infobox = new Microsoft.Maps.Infobox(map.getCenter(), {\n              visible: false\n            }); //Assign the infobox to a map instance.\n\n            infobox.setMap(map); //Create a pushpin at a random location in the map bounds.\n\n            var randomLocation = Microsoft.Maps.TestDataGenerator.getLocations(1, map.getBounds());\n            var pin = new Microsoft.Maps.Pushpin({\n              latitude: revendedores[revendedor].maps.lat,\n              longitude: revendedores[revendedor].maps.lng,\n              altitude: 0,\n              altitudeReference: -1\n            }); //Store some metadata with the pushpin.\n\n            pin.metadata = {\n              title: revendedores[revendedor].name,\n              description: \"Endere√ßo: \" + revendedores[revendedor].address + \"<br/> Tel: \" + revendedores[revendedor].phone + \"<br/> E-mail: \" + revendedores[revendedor].email\n            }; //Add a click event handler to the pushpin.\n\n            Microsoft.Maps.Events.addHandler(pin, 'click', pushpinClicked); //Add pushpin to the map.\n\n            map.entities.push(pin);\n          }\n        }\n\n        function pushpinClicked(e) {\n          //Make sure the infobox has metadata to display.\n          if (e.target.metadata) {\n            //Set the infobox options with the metadata of the pushpin.\n            infobox.setOptions({\n              location: e.target.getLocation(),\n              title: e.target.metadata.title,\n              description: e.target.metadata.description,\n              visible: true\n            });\n          }\n        } //adMapScenario();\n\n      } catch (e) {\n        console.log(e);\n      }\n    }\n\n    async();\n  }, []);\n  return __jsx(Template, null, __jsx(Column, {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(SlideWeb, {\n    images: images.map(img => img.image)\n  }), __jsx(Home, null), __jsx(Map, {\n    map: map,\n    resellers: resellers\n  })));\n};\n\nIndexPage.getInitialProps = ({\n  reduxStore\n}) => {\n  return {};\n};\n\nexport default IndexPage;","map":null,"metadata":{},"sourceType":"module"}