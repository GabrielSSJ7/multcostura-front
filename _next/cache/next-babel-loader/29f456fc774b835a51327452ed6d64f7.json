{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport router from \"next/router\";\nimport Template from \"../../templates/Admin\";\nimport Sidebar from \"../Sidebar\";\nimport Slide from \"../../utils/Slider\";\nimport { Container, Button, Select, Hr } from \"../../../static/styled-components/base\";\nimport FileInput from \"../../utils/FileInput\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { changeFileName, validateImage } from \"../../../utils/images\";\nimport { saveSlide, getSlide } from \"../../../utils/banner\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport imageNotFound from \"../../../static/images/image-404.jpg\";\nexport default function HomeBanner() {\n  const imageMessageError = `Extensão do arquivo enviado é inválido. Extensões permitidas ${process.env.imageExtensionPermitted.toString()}, com no máximo 10MB`;\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: images,\n    1: setImages\n  } = useState([]);\n  const {\n    0: inputs,\n    1: setInputs\n  } = useState([]);\n  const {\n    0: files,\n    1: setFiles\n  } = useState([]);\n  const {\n    0: slideControl,\n    1: setSlideControl\n  } = useState(1);\n  const {\n    0: snackBar,\n    1: setSnackBar\n  } = useState({\n    result: \"success\",\n    open: false,\n    message: \"\"\n  });\n\n  function handleChange(e, inputIndex) {\n    changeBannerImage(e.target.files[0], inputIndex);\n  }\n\n  function addSlide() {\n    const inputIndex = images.length;\n    setImages([...images, {\n      image: imageNotFound,\n      pos: inputIndex,\n      name: \"\"\n    }]);\n    setInputs([...inputs, __jsx(FileInput, {\n      type: \"file\",\n      handleChange: e => handleChange(e, inputIndex),\n      labelInputFile: `Enviar Imagem`,\n      maxWidth: \"50%\",\n      labelHeight: \"50px\",\n      labelWidth: \"150px\",\n      id: inputIndex,\n      key: inputIndex\n    })]);\n    files.push(null);\n    setFiles(files);\n    setSlideControl(images.length + 1);\n    setSnackBar({\n      open: true,\n      result: \"success\",\n      message: \"Banner adicionado a lista\"\n    });\n  }\n\n  function changeBannerImage(file, index) {\n    if (validateImage(process.env.imageExtensionPermitted, 10000, file)) {\n      const newFile = changeFileName(file, Math.round(Math.random() * 100000 + 1) + \"\" + Date.now());\n      setImages(images => images.map((image, ind) => {\n        if (image.pos == index) {\n          return file ? {\n            image: URL.createObjectURL(file),\n            pos: index,\n            name: newFile.name\n          } : {\n            image: imageNotFound,\n            pos: index,\n            name: file.name\n          };\n        }\n\n        return image;\n      }));\n      const _files = files;\n      _files[index] = newFile;\n      setFiles(_files);\n      setSlideControl(index + 1);\n    } else {\n      setSnackBar({\n        open: true,\n        result: 'error',\n        message: imageMessageError\n      });\n    }\n  }\n\n  function handleClose() {\n    setSnackBar(_objectSpread({}, snackBar, {\n      open: false\n    }));\n  }\n\n  function removeSlide(id) {\n    setImages(images => {\n      images.splice(id, 1);\n      return images;\n    });\n    setInputs(inputs => {\n      inputs.splice(id, 1);\n      return inputs;\n    });\n    setFiles(files => {\n      files.splice(id, 1);\n      return files;\n    });\n    setSlideControl(id == 0 ? id + 1 : id);\n    setSnackBar({\n      open: true,\n      result: \"success\",\n      message: \"Banner removido da lista\"\n    });\n  }\n\n  useEffect(() => {\n    setName(router.query.name);\n\n    function asyncFunc() {\n      getSlide(\"institutional\", \"homeBanners\", function (err, response) {\n        if (err) {\n          setSnackBar({\n            open: true,\n            message: err,\n            result: \"error\"\n          });\n          return;\n        }\n\n        const Inputs = [];\n        const Files = [];\n\n        for (let a = 0; a < response.length; a++) {\n          Inputs.push(__jsx(FileInput, {\n            type: \"file\",\n            handleChange: e => handleChange(e, a),\n            labelInputFile: `Enviar Imagem`,\n            maxWidth: \"50%\",\n            labelHeight: \"50px\",\n            labelWidth: \"150px\",\n            id: a,\n            key: a\n          }));\n          Files.push(a + 1);\n        }\n\n        setInputs(Inputs);\n        setFiles(Files);\n        setImages(response.map(banner => _objectSpread({}, banner, {\n          name: banner.name\n        })));\n      });\n    }\n\n    asyncFunc();\n    return () => {};\n  }, []);\n\n  function makeBannerFirst() {\n    const ctrl = slideControl - 1;\n    let currentBanner = images[ctrl];\n    let firstBanner = images[0];\n    let currentFile = files[ctrl];\n    let firstFile = files[0];\n    setImages(images => {\n      const newImages = images;\n      newImages[0] = {\n        image: currentBanner.image,\n        pos: 0,\n        name: currentBanner.name\n      };\n      newImages[ctrl] = {\n        image: firstBanner.image,\n        pos: ctrl,\n        name: firstBanner.name\n      };\n      return newImages;\n    });\n    setFiles(files => {\n      const newFiles = files;\n      newFiles[0] = currentFile;\n      newFiles[ctrl] = firstFile;\n      return newFiles;\n    });\n    setSlideControl(1);\n  }\n\n  function _saveSlide() {\n    let hasEmptyFile = false;\n    files.forEach(file => {\n      if (!file) hasEmptyFile = true;\n    });\n    if (hasEmptyFile) setSnackBar({\n      result: \"error\",\n      message: \"Há banners sem imagens\",\n      open: true\n    });else {\n      if (files.length == 0) return setSnackBar({\n        result: \"error\",\n        message: \"Há banners sem imagens\",\n        open: true\n      });\n      saveSlide(null, images, files, \"homeBanners\", function (err, response) {\n        if (err) {\n          setSnackBar({\n            result: \"error\",\n            message: err,\n            open: true\n          });\n          return;\n        }\n\n        setSnackBar({\n          result: \"success\",\n          message: \"Sucesso\",\n          open: true\n        });\n      });\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Snackbar, {\n    open: snackBar.open,\n    autoHideDuration: 1500,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    severity: snackBar.result\n  }, snackBar.message)), __jsx(Column, null, __jsx(\"div\", {\n    onClick: () => location.reload(),\n    className: \"arrow-back\",\n    style: {\n      background: \"#960d03\",\n      borderRadius: \"5px\",\n      padding: \"5px\",\n      maxWidth: \"60px\",\n      marginLeft: \"10px\",\n      marginBottom: \"5px\",\n      display: 'flex',\n      flexDirection: \"row\"\n    }\n  }, __jsx(FontAwesomeIcon, {\n    icon: faArrowLeft,\n    style: {\n      color: \"white\"\n    }\n  }), __jsx(\"span\", {\n    style: {\n      color: \"white\"\n    }\n  }, \"Voltar\")), __jsx(\"style\", null, `  \n\n            .arrow-back {\n              transition: .5s;\n            }\n\n            .arrow-back:hover {\n              cursor: pointer;\n              opacity: .8;\n            }\n          `), __jsx(Row, {\n    align: \"center\"\n  }, __jsx(Column, {\n    style: {\n      width: \"100%\"\n    }\n  }, images.length == 0 ? __jsx(React.Fragment, null, __jsx(\"div\", {\n    style: {\n      height: \"400px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexDirection: \"column\"\n    }\n  }, __jsx(React.Fragment, null, __jsx(\"p\", null, \"Voc\\xEA ainda n\\xE3o adicionou nenhum banner a lista de banners.\"), __jsx(\"p\", null, \"Clique no bot\\xE3o\", \" \", __jsx(\"strong\", null, \"\\\"Adicionar banner a lista\\\"\"), \".\")))) : __jsx(React.Fragment, null, slideControl - 1 != 0 ? __jsx(Button, {\n    style: {\n      width: \"50%\",\n      display: \"block\",\n      margin: \"10px auto\"\n    },\n    onClick: makeBannerFirst\n  }, \"Tornar este banner o principal\") : __jsx(\"span\", {\n    style: {\n      width: \"20px\",\n      height: \"64px\"\n    }\n  }), __jsx(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\"\n    }\n  }, __jsx(ArrowLeft, {\n    onClick: () => {\n      setSlideControl(sl => {\n        if (sl == 1) return 1;\n        return sl - 1;\n      });\n    }\n  }), __jsx(ArrowRight, {\n    onClick: () => {\n      setSlideControl(sl => {\n        if (sl == images.length) return 1;\n        return sl + 1;\n      });\n    }\n  }), __jsx(Slide, {\n    slideCtrl: slideControl,\n    images: images.map(image => image.image),\n    height: \"400px\",\n    slideWidth: \"100%\"\n  })), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      marginLeft: \"5px\",\n      padding: \"2px 0\"\n    }\n  }, images.map((image, id) => __jsx(ThumbnailBanner, {\n    style: {\n      border: `${id == slideControl - 1 ? \"2px solid #960d03\" : \"2px solid transparent\"}`\n    },\n    onClick: () => {\n      setSlideControl(parseInt(id + 1));\n    }\n  }, __jsx(\"img\", {\n    src: image.image,\n    style: {\n      width: \"100%\"\n    }\n  })))), __jsx(\"h2\", {\n    style: {\n      textAlign: \"center\"\n    }\n  }, \"Posi\\xE7\\xE3o do banner \", slideControl), __jsx(\"h4\", {\n    style: {\n      textAlign: \"center\"\n    }\n  }, \"Total de banners \", inputs.length))), __jsx(Column, {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    }\n  }, inputs[slideControl - 1], \" \", images.length != 0 ? __jsx(Button, {\n    style: {\n      width: \"30%\"\n    },\n    onClick: () => removeSlide(slideControl - 1)\n  }, \"Remover banner\") : \"\"), __jsx(Button, {\n    style: {\n      width: \"50%\",\n      margin: \"15px auto\",\n      display: \"block\"\n    },\n    onClick: addSlide\n  }, \"Adicionar banner a lista\"), images.length != 0 ? __jsx(Button, {\n    style: {\n      width: \"50%\",\n      margin: \"15px auto\",\n      display: \"block\"\n    },\n    onClick: _saveSlide\n  }, \"Salvar\") : \"\", __jsx(\"div\", {\n    style: {\n      border: \"1px solid grey\"\n    }\n  }, __jsx(\"p\", null, \"As imagens devem ter 1920x400\"))))));\n}\nconst Column = styled.div.withConfig({\n  displayName: \"Home__Column\",\n  componentId: \"sc-1ji1hcl-0\"\n})([\"display:flex;flex-direction:column;\"]);\nconst Row = styled.div.withConfig({\n  displayName: \"Home__Row\",\n  componentId: \"sc-1ji1hcl-1\"\n})([\"display:flex;flex-direction:row;justify-content:\", \";width:\", \";\"], props => props.align, props => props.w);\nconst ThumbnailBanner = styled.div.withConfig({\n  displayName: \"Home__ThumbnailBanner\",\n  componentId: \"sc-1ji1hcl-2\"\n})([\"width:100px;display:flex;margin-right:5px;align-items:center;transition:0.2s;cursor:pointer;:hover{opacity:0.8;}\"]);\nconst ImageContainer = styled.div.withConfig({\n  displayName: \"Home__ImageContainer\",\n  componentId: \"sc-1ji1hcl-3\"\n})([\"img{max-width:120px;}\"]);\nconst ArrowLeft = styled.span.withConfig({\n  displayName: \"Home__ArrowLeft\",\n  componentId: \"sc-1ji1hcl-4\"\n})([\":hover{opacity:0.8;}transition:0.2s;position:absolute;z-index:9;left:0;margin-left:40px;cursor:pointer;top:50%;margin-top:-10px;border-top:30px solid transparent;border-bottom:30px solid transparent;border-right:30px solid #960d03;\"]);\nconst ArrowRight = styled.span.withConfig({\n  displayName: \"Home__ArrowRight\",\n  componentId: \"sc-1ji1hcl-5\"\n})([\":hover{opacity:0.8;}transition:0.2s;position:absolute;z-index:9;right:0;margin-right:40px;cursor:pointer;width:0;height:0;top:50%;margin-top:-10px;border-top:30px solid transparent;border-bottom:30px solid transparent;border-left:30px solid #960d03;\"]);","map":{"version":3,"sources":["C:/Users/Gluz/Projects/web/multcostura/multcostura-web/src/components/admin/institutional/Home.jsx"],"names":["React","useState","useEffect","styled","router","Template","Sidebar","Slide","Container","Button","Select","Hr","FileInput","Snackbar","Alert","changeFileName","validateImage","saveSlide","getSlide","FontAwesomeIcon","faArrowLeft","imageNotFound","HomeBanner","imageMessageError","process","env","imageExtensionPermitted","toString","name","setName","images","setImages","inputs","setInputs","files","setFiles","slideControl","setSlideControl","snackBar","setSnackBar","result","open","message","handleChange","e","inputIndex","changeBannerImage","target","addSlide","length","image","pos","push","file","index","newFile","Math","round","random","Date","now","map","ind","URL","createObjectURL","_files","handleClose","removeSlide","id","splice","query","asyncFunc","err","response","Inputs","Files","a","banner","makeBannerFirst","ctrl","currentBanner","firstBanner","currentFile","firstFile","newImages","newFiles","_saveSlide","hasEmptyFile","forEach","location","reload","background","borderRadius","padding","maxWidth","marginLeft","marginBottom","display","flexDirection","color","width","height","justifyContent","alignItems","margin","position","sl","flexWrap","border","parseInt","textAlign","Column","div","Row","props","align","w","ThumbnailBanner","ImageContainer","ArrowLeft","span","ArrowRight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport router from \"next/router\";\r\nimport Template from \"../../templates/Admin\";\r\nimport Sidebar from \"../Sidebar\";\r\nimport Slide from \"../../utils/Slider\";\r\nimport {\r\n  Container,\r\n  Button,\r\n  Select,\r\n  Hr\r\n} from \"../../../static/styled-components/base\";\r\nimport FileInput from \"../../utils/FileInput\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { changeFileName, validateImage } from \"../../../utils/images\";\r\nimport { saveSlide, getSlide } from \"../../../utils/banner\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport imageNotFound from \"../../../static/images/image-404.jpg\";\r\n\r\nexport default function HomeBanner() {\r\n  const imageMessageError = `Extensão do arquivo enviado é inválido. Extensões permitidas ${process.env.imageExtensionPermitted.toString()}, com no máximo 10MB`\r\n  const [name, setName] = useState(\"\");\r\n  const [images, setImages] = useState([]);\r\n  const [inputs, setInputs] = useState([]);\r\n  const [files, setFiles] = useState([]);\r\n  const [slideControl, setSlideControl] = useState(1);\r\n  const [snackBar, setSnackBar] = useState({\r\n    result: \"success\",\r\n    open: false,\r\n    message: \"\"\r\n  });\r\n\r\n  function handleChange(e, inputIndex) {\r\n    changeBannerImage(e.target.files[0], inputIndex);\r\n  }\r\n\r\n  function addSlide() {\r\n    const inputIndex = images.length;\r\n    setImages([...images, { image: imageNotFound, pos: inputIndex, name: \"\" }]);\r\n    setInputs([\r\n      ...inputs,\r\n      <FileInput\r\n        type=\"file\"\r\n        handleChange={e => handleChange(e, inputIndex)}\r\n        labelInputFile={`Enviar Imagem`}\r\n        maxWidth=\"50%\"\r\n        labelHeight=\"50px\"\r\n        labelWidth=\"150px\"\r\n        id={inputIndex}\r\n        key={inputIndex}\r\n      />\r\n    ]);\r\n    files.push(null);\r\n    setFiles(files);\r\n    setSlideControl(images.length + 1);\r\n    setSnackBar({\r\n      open: true,\r\n      result: \"success\",\r\n      message: \"Banner adicionado a lista\"\r\n    });\r\n  }\r\n\r\n  function changeBannerImage(file, index) {\r\n    if (validateImage(process.env.imageExtensionPermitted, 10000, file)) {\r\n      const newFile = changeFileName(\r\n        file,\r\n        Math.round(Math.random() * 100000 + 1) + \"\" + Date.now()\r\n      );\r\n\r\n      setImages(images =>\r\n        images.map((image, ind) => {\r\n          if (image.pos == index) {\r\n            return file\r\n              ? {\r\n                  image: URL.createObjectURL(file),\r\n                  pos: index,\r\n                  name: newFile.name\r\n                }\r\n              : { image: imageNotFound, pos: index, name: file.name };\r\n          }\r\n          return image;\r\n        })\r\n      );\r\n      const _files = files;\r\n      _files[index] = newFile;\r\n      setFiles(_files);\r\n      setSlideControl(index + 1);\r\n    } else {\r\n      setSnackBar({\r\n          open: true,\r\n          result: 'error',\r\n          message: imageMessageError\r\n        })\r\n    }\r\n  }\r\n\r\n  function handleClose() {\r\n    setSnackBar({\r\n      ...snackBar,\r\n      open: false\r\n    });\r\n  }\r\n\r\n  function removeSlide(id) {\r\n    setImages(images => {\r\n      images.splice(id, 1);\r\n      return images;\r\n    });\r\n    setInputs(inputs => {\r\n      inputs.splice(id, 1);\r\n      return inputs;\r\n    });\r\n    setFiles(files => {\r\n      files.splice(id, 1);\r\n      return files;\r\n    });\r\n    setSlideControl(id == 0 ? id + 1 : id);\r\n    setSnackBar({\r\n      open: true,\r\n      result: \"success\",\r\n      message: \"Banner removido da lista\"\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    setName(router.query.name);\r\n    function asyncFunc() {\r\n    getSlide(\"institutional\", \"homeBanners\", function(err, response) {\r\n        if (err) {\r\n          setSnackBar({\r\n            open: true,\r\n            message: err,\r\n            result: \"error\"\r\n          });\r\n          return;\r\n        }\r\n        const Inputs = [];\r\n        const Files = [];\r\n        for (let a = 0; a < response.length; a++) {\r\n          Inputs.push(\r\n            <FileInput\r\n              type=\"file\"\r\n              handleChange={e => handleChange(e, a)}\r\n              labelInputFile={`Enviar Imagem`}\r\n              maxWidth=\"50%\"\r\n              labelHeight=\"50px\"\r\n              labelWidth=\"150px\"\r\n              id={a}\r\n              key={a}\r\n            />\r\n          );\r\n          Files.push(a + 1);\r\n        }\r\n        setInputs(Inputs);\r\n        setFiles(Files);\r\n        setImages(response.map(banner => ({ ...banner, name: banner.name })));\r\n\r\n      });\r\n    }\r\n\r\n    asyncFunc();\r\n\r\n    return () => {};\r\n  }, []);\r\n\r\n  function makeBannerFirst() {\r\n    const ctrl = slideControl - 1;\r\n    let currentBanner = images[ctrl];\r\n    let firstBanner = images[0];\r\n    let currentFile = files[ctrl];\r\n    let firstFile = files[0];\r\n    setImages(images => {\r\n      const newImages = images;\r\n      newImages[0] = {\r\n        image: currentBanner.image,\r\n        pos: 0,\r\n        name: currentBanner.name\r\n      };\r\n      newImages[ctrl] = {\r\n        image: firstBanner.image,\r\n        pos: ctrl,\r\n        name: firstBanner.name\r\n      };\r\n      return newImages;\r\n    });\r\n    setFiles(files => {\r\n      const newFiles = files;\r\n      newFiles[0] = currentFile;\r\n      newFiles[ctrl] = firstFile;\r\n      return newFiles;\r\n    });\r\n    setSlideControl(1);\r\n  }\r\n\r\n  function _saveSlide() {\r\n    let hasEmptyFile = false;\r\n\r\n    files.forEach(file => {\r\n      if (!file) hasEmptyFile = true;\r\n    });\r\n\r\n    if (hasEmptyFile)\r\n      setSnackBar({\r\n        result: \"error\",\r\n        message: \"Há banners sem imagens\",\r\n        open: true\r\n      });\r\n    else {\r\n      if (files.length == 0)\r\n        return setSnackBar({\r\n          result: \"error\",\r\n          message: \"Há banners sem imagens\",\r\n          open: true\r\n        });\r\n\r\n      saveSlide(null, images, files, \"homeBanners\", function(err, response) {\r\n        if (err) {\r\n          setSnackBar({\r\n            result: \"error\",\r\n            message: err,\r\n            open: true\r\n          });\r\n          return;\r\n        }\r\n        setSnackBar({\r\n          result: \"success\",\r\n          message: \"Sucesso\",\r\n          open: true\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Snackbar\r\n        open={snackBar.open}\r\n        autoHideDuration={1500}\r\n        onClose={handleClose}\r\n      >\r\n        <Alert severity={snackBar.result}>{snackBar.message}</Alert>\r\n      </Snackbar>\r\n\r\n      <Column>\r\n        <div onClick={() => location.reload()} className=\"arrow-back\" style={{ background:\"#960d03\", borderRadius: \"5px\", padding: \"5px\", maxWidth: \"60px\", marginLeft: \"10px\", marginBottom: \"5px\", display: 'flex', flexDirection: \"row\" }}>\r\n          <FontAwesomeIcon icon={faArrowLeft} style={{ color: \"white\" }} />\r\n          <span style={{ color: \"white\" }}>Voltar</span>\r\n        </div>\r\n        <style>\r\n          {`  \r\n\r\n            .arrow-back {\r\n              transition: .5s;\r\n            }\r\n\r\n            .arrow-back:hover {\r\n              cursor: pointer;\r\n              opacity: .8;\r\n            }\r\n          `}\r\n        </style>\r\n        <Row align=\"center\">\r\n          <Column style={{ width: \"100%\" }}>\r\n            {images.length == 0 ? (\r\n              <>\r\n                <div\r\n                  style={{\r\n                    height: \"400px\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    flexDirection: \"column\"\r\n                  }}\r\n                >\r\n                  <>\r\n                    <p>\r\n                      Você ainda não adicionou nenhum banner a lista de banners.\r\n                    </p>\r\n                    <p>\r\n                      Clique no botão{\" \"}\r\n                      <strong>\"Adicionar banner a lista\"</strong>.\r\n                    </p>\r\n                  </>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n                {slideControl - 1 != 0 ? (\r\n                  <Button\r\n                    style={{\r\n                      width: \"50%\",\r\n                      display: \"block\",\r\n                      margin: \"10px auto\"\r\n                    }}\r\n                    onClick={makeBannerFirst}\r\n                  >\r\n                    Tornar este banner o principal\r\n                  </Button>\r\n                ) : (\r\n                  <span style={{ width: \"20px\", height: \"64px\" }}></span>\r\n                )}\r\n                <div style={{ position: \"relative\", width: \"100%\" }}>\r\n                  <ArrowLeft\r\n                    onClick={() => {\r\n                      setSlideControl(sl => {\r\n                        if (sl == 1) return 1;\r\n                        return sl - 1;\r\n                      });\r\n                    }}\r\n                  />\r\n                  <ArrowRight\r\n                    onClick={() => {\r\n                      setSlideControl(sl => {\r\n                        if (sl == images.length) return 1;\r\n                        return sl + 1;\r\n                      });\r\n                    }}\r\n                  />\r\n                  <Slide\r\n                    slideCtrl={slideControl}\r\n                    images={images.map(image => image.image)}\r\n                    height=\"400px\"\r\n                    slideWidth=\"100%\"\r\n                  />\r\n                </div>\r\n\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    flexWrap: \"wrap\",\r\n                    marginLeft: \"5px\",\r\n                    padding: \"2px 0\"\r\n                  }}\r\n                >\r\n                  {images.map((image, id) => (\r\n                    <ThumbnailBanner\r\n                      style={{\r\n                        border: `${\r\n                          id == slideControl - 1\r\n                            ? \"2px solid #960d03\"\r\n                            : \"2px solid transparent\"\r\n                        }`\r\n                      }}\r\n                      onClick={() => {\r\n                        setSlideControl(parseInt(id + 1));\r\n                      }}\r\n                    >\r\n                      <img src={image.image} style={{ width: \"100%\" }} />\r\n                    </ThumbnailBanner>\r\n                  ))}\r\n                </div>\r\n\r\n                <h2 style={{ textAlign: \"center\" }}>\r\n                  Posição do banner {slideControl}\r\n                </h2>\r\n                <h4 style={{ textAlign: \"center\" }}>\r\n                  Total de banners {inputs.length}\r\n                </h4>\r\n              </>\r\n            )}\r\n          </Column>\r\n          <Column style={{ width: \"100%\" }}>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\"\r\n              }}\r\n            >\r\n              {inputs[slideControl - 1]}{\" \"}\r\n              {images.length != 0 ? (\r\n                <Button\r\n                  style={{ width: \"30%\" }}\r\n                  onClick={() => removeSlide(slideControl - 1)}\r\n                >\r\n                  Remover banner\r\n                </Button>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n\r\n            <Button\r\n              style={{ width: \"50%\", margin: \"15px auto\", display: \"block\" }}\r\n              onClick={addSlide}\r\n            >\r\n              Adicionar banner a lista\r\n            </Button>\r\n\r\n            {images.length != 0 ? (\r\n              <Button\r\n                style={{\r\n                  width: \"50%\",\r\n                  margin: \"15px auto\",\r\n                  display: \"block\"\r\n                }}\r\n                onClick={_saveSlide}\r\n              >\r\n                Salvar\r\n              </Button>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n\r\n\r\n            <div style={{ border: \"1px solid grey\"}}><p>As imagens devem ter 1920x400</p></div>\r\n          </Column>\r\n        </Row>\r\n      </Column>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Column = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: ${props => props.align};\r\n  width: ${props => props.w};\r\n`;\r\n\r\nconst ThumbnailBanner = styled.div`\r\n  width: 100px;\r\n  display: flex;\r\n  margin-right: 5px;\r\n  align-items: center;\r\n  transition: 0.2s;\r\n  cursor: pointer;\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  img {\r\n    max-width: 120px;\r\n  }\r\n`;\r\n\r\nconst ArrowLeft = styled.span`\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n  transition: 0.2s;\r\n  position: absolute;\r\n  z-index: 9;\r\n  left: 0;\r\n  margin-left: 40px;\r\n  cursor: pointer;\r\n  top: 50%;\r\n  margin-top: -10px;\r\n  border-top: 30px solid transparent;\r\n  border-bottom: 30px solid transparent;\r\n  border-right: 30px solid #960d03;\r\n`;\r\nconst ArrowRight = styled.span`\r\n  :hover {\r\n    opacity: 0.8;\r\n  }\r\n  transition: 0.2s;\r\n  position: absolute;\r\n  z-index: 9;\r\n  right: 0;\r\n  margin-right: 40px;\r\n  cursor: pointer;\r\n  width: 0;\r\n  height: 0;\r\n  top: 50%;\r\n  margin-top: -10px;\r\n  border-top: 30px solid transparent;\r\n  border-bottom: 30px solid transparent;\r\n  border-left: 30px solid #960d03;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}