{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nmodule.exports = {\n  changeFileName: function changeFileName(file, newName) {\n    if (file) {\n      var blob = file.slice(0, file.size, \"image/png\");\n      var typeFile = file.type.split(\"/\");\n      var newFile = new File([blob], \"\".concat(newName, \".\").concat(typeFile[1]), {\n        type: file.type\n      });\n      return newFile;\n    }\n  },\n  deleteImage: function deleteImage(id, type, image, _ref, cleanUpFile) {\n    var f = _ref.f,\n        files = _ref.files,\n        keys = _ref.keys;\n\n    _axios[\"default\"][\"delete\"](\"/images?id=\".concat(id, \"&type=\").concat(type, \"&image=\").concat(image)).then(function (response) {\n      cleanUpFile(f, files, keys);\n      location.reload();\n    })[\"catch\"](function (err) {});\n  },\n  renderInputOrImages: function renderInputOrImages(images, objLength, _exclude) {\n    var _images = [];\n    var exclude = _exclude || [];\n\n    var _loop = function _loop(x) {\n      var isNull = true;\n      images.forEach(function (img, i) {\n        var snBar = img.split(\"/\");\n        var sn = snBar[snBar.length - 1];\n\n        if (!exclude.includes(x)) {\n          if (x == sn[0]) {\n            isNull = false;\n\n            _images.push(img);\n          }\n        } else {\n          isNull = false;\n        }\n      });\n      if (isNull) _images.push(null);\n    };\n\n    for (var x = 0; x < objLength; x++) {\n      _loop(x);\n    }\n\n    return _images;\n  },\n  validateImage: function validateImage(types, size, file) {\n    if (!file) return true;\n    var ok = false,\n        filesize = size / 1000;\n    var fileType = file.type.split(\"/\");\n    types.forEach(function (types) {\n      if (types == fileType[1]) ok = true;\n    });\n    if (filesize > 100) ok = false;\n    if (ok) return true;else return false;\n  },\n  getNameImageFromUrl: function getNameImageFromUrl(url) {\n    var splitted = url.split(\"/\");\n    var image = splitted[splitted.length - 1];\n    var imageSplitted = image.split(\".\");\n    return imageSplitted[0];\n  }\n};","map":{"version":3,"sources":["C:/Users/Gluz/Projects/web/multcostura/multcostura-web/src/utils/images.js"],"names":["module","exports","changeFileName","file","newName","blob","slice","size","typeFile","type","split","newFile","File","deleteImage","id","image","cleanUpFile","f","files","keys","axios","then","response","location","reload","err","renderInputOrImages","images","objLength","_exclude","_images","exclude","x","isNull","forEach","img","i","snBar","sn","length","includes","push","validateImage","types","ok","filesize","fileType","getNameImageFromUrl","url","splitted","imageSplitted"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nmodule.exports = {\n  changeFileName(file, newName) {\n    if (file) {\n      var blob = file.slice(0, file.size, \"image/png\");\n      const typeFile = file.type.split(\"/\");\n      const newFile = new File([blob], `${newName}.${typeFile[1]}`, {\n        type: file.type\n      });\n      return newFile;\n    }\n\n  },\n  deleteImage(id, type, image, { f, files, keys }, cleanUpFile) {\n    axios\n      .delete(`/images?id=${id}&type=${type}&image=${image}`)\n      .then(response => {\n        cleanUpFile(f, files, keys);\n        location.reload();\n      })\n      .catch(err => {});\n  },\n  renderInputOrImages(images, objLength, _exclude) {\n    const _images = [];\n    const exclude = _exclude || [];\n    for (let x = 0; x < objLength; x++) {\n      let isNull = true;\n      images.forEach((img, i) => {\n        let snBar = img.split(\"/\");\n        let sn = snBar[snBar.length - 1];\n        if (!exclude.includes(x)) {\n          if (x == sn[0]) {\n            isNull = false;\n            _images.push(img);\n          }\n        } else {\n          isNull = false;\n        }\n      });\n      if (isNull) _images.push(null);\n    }\n    return _images;\n  },\n  validateImage(types, size, file) {\n    if (!file) return true;\n    let ok = false,\n      filesize = size / 1000;\n    const fileType = file.type.split(\"/\");\n\n    types.forEach(types => {\n      if (types == fileType[1]) ok = true;\n    });\n    if (filesize > 100) ok = false;\n    if (ok) return true;\n    else return false;\n  },\n  getNameImageFromUrl(url) {\n    const splitted = url.split(\"/\");\n    const image = splitted[splitted.length - 1];\n    const imageSplitted = image.split(\".\");\n    return imageSplitted[0];\n  }\n};\n"]},"metadata":{},"sourceType":"script"}