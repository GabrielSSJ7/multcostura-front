{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { Input, TextArea, Button, Select, UploadImageContainer } from \"../../../static/styled-components/base\";\nimport { getOptions, addTool } from \"../../../utils/tools\";\nimport { changeFileName, validateImage } from \"../../../utils/images\";\nimport FileInput from \"../../utils/FileInput\";\nexport default function AddTool() {\n  const imageMessageError = `Extensão do arquivo enviado é inválido. Extensões permitidas ${process.env.imageExtensionPermitted.toString()}, com no máximo 10MB`;\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: manufacturer,\n    1: setManufacturer\n  } = useState(\"\");\n  const {\n    0: description,\n    1: setDescription\n  } = useState(\"\");\n  const {\n    0: mainFeatures,\n    1: setMainFeatures\n  } = useState(\"\");\n  const {\n    0: category,\n    1: setCategory\n  } = useState(\"\");\n  const {\n    0: specifications,\n    1: setSpecifications\n  } = useState({});\n  const {\n    0: snackBar,\n    1: setSnackBar\n  } = useState({\n    result: \"success\",\n    open: false,\n    message: \"\"\n  });\n\n  function handleClose() {\n    setSnackBar(_objectSpread({}, snackBar, {\n      open: false\n    }));\n  }\n\n  const {\n    0: manufacturers,\n    1: setManufacturers\n  } = useState([]);\n  useEffect(() => {\n    function asyncFunc() {\n      getOptions(function (err, response) {\n        if (err) {\n          setSnackBar(_objectSpread({}, snackBar, {\n            open: false\n          }));\n          return;\n        }\n\n        setManufacturers(response.manufacturers.data);\n      });\n    }\n\n    asyncFunc();\n  }, []);\n  const {\n    0: toolFiles,\n    1: setToolFiles\n  } = useState({\n    toolFile1: null,\n    toolFile2: null,\n    toolFile3: null,\n    toolFile4: null,\n    toolFile5: null\n  });\n\n  function toolHandleChange(e) {\n    if (validateImage(process.env.imageExtensionPermitted, 10000, e.target.files[0])) {\n      const newName = parseInt(e.target.name[e.target.name.length - 1]) - 1;\n      setToolFiles(_objectSpread({}, toolFiles, {\n        [e.target.name]: changeFileName(e.target.files[0], newName)\n      }));\n    } else {\n      setSnackBar({\n        open: true,\n        result: 'error',\n        message: imageMessageError\n      });\n    }\n  }\n\n  function toolCleanFileInput(name) {\n    setToolFiles(_objectSpread({}, toolFiles, {\n      [name]: null\n    }));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Adicionar nova pe\\xE7a\"), __jsx(\"div\", null, __jsx(Snackbar, {\n    open: snackBar.open,\n    autoHideDuration: 3500,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    severity: snackBar.result\n  }, snackBar.message)), __jsx(Input, {\n    placeholder: \"Nome\",\n    onChange: e => setName(e.target.value),\n    value: name\n  }), __jsx(Input, {\n    placeholder: \"Subt\\xEDtulo\",\n    onChange: e => setDescription(e.target.value),\n    value: description\n  }), __jsx(TextArea, {\n    placeholder: \"Caracter\\xEDsticas\",\n    onChange: e => setMainFeatures(e.target.value),\n    value: mainFeatures,\n    rows: \"5\"\n  }), __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      textAlign: \"center\",\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Fabricante\"), __jsx(Row, null, __jsx(Select, {\n    value: manufacturer,\n    onChange: e => setManufacturer(e.target.value)\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Escolha um fabricante\"), manufacturers.map(manufacturer => __jsx(\"option\", {\n    value: manufacturer.id\n  }, manufacturer.name)))), __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      textAlign: \"center\",\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Fotos do produto\"), __jsx(Row, {\n    style: {\n      margin: \"30px 0 \",\n      justifyContent: \"center\"\n    }\n  }, __jsx(ImageContainer, null, __jsx(FileInput, {\n    handleChange: toolHandleChange,\n    labelInputFile: \"Imagem principal\",\n    id: \"toolFile1\",\n    name: \"toolFile1\",\n    file: toolFiles.toolFile1,\n    cleanFileInput: () => toolCleanFileInput(\"toolFile1\")\n  }))), __jsx(Row, {\n    style: {\n      flexWrap: \"wrap\",\n      justifyContent: \"center\"\n    }\n  }, __jsx(ImageContainer, null, __jsx(FileInput, {\n    handleChange: toolHandleChange,\n    labelInputFile: \"Imagem 2\",\n    id: \"toolFile2\",\n    name: \"toolFile2\",\n    file: toolFiles.toolFile2,\n    cleanFileInput: () => toolCleanFileInput(\"toolFile2\")\n  })), __jsx(ImageContainer, null, __jsx(FileInput, {\n    handleChange: toolHandleChange,\n    labelInputFile: \"Imagem 3\",\n    id: \"toolFile3\",\n    name: \"toolFile3\",\n    file: toolFiles.toolFile3,\n    cleanFileInput: () => toolCleanFileInput(\"toolFile3\")\n  })), __jsx(ImageContainer, null, __jsx(FileInput, {\n    handleChange: toolHandleChange,\n    labelInputFile: \"Imagem 4\",\n    id: \"toolFile4\",\n    name: \"toolFile4\",\n    file: toolFiles.toolFile4,\n    cleanFileInput: () => toolCleanFileInput(\"toolFile4\")\n  })), __jsx(ImageContainer, null, __jsx(FileInput, {\n    handleChange: toolHandleChange,\n    labelInputFile: \"Imagem 5\",\n    id: \"toolFile5\",\n    name: \"toolFile5\",\n    file: toolFiles.toolFile5,\n    cleanFileInput: () => toolCleanFileInput(\"toolFile5\")\n  })))), __jsx(Button, {\n    onClick: () => addTool({\n      name,\n      manufacturer,\n      description,\n      mainFeatures\n    }, toolFiles, function (err, data) {\n      if (err) {\n        setSnackBar({\n          result: 'error',\n          message: err,\n          open: true\n        });\n        return;\n      }\n\n      setSnackBar({\n        result: 'success',\n        message: 'Peça criada com sucesso',\n        open: true\n      });\n      cleanForm();\n    })\n  }, \"Adicionar pe\\xE7a\"));\n\n  function cleanForm() {\n    setName(\"\");\n    setDescription(\"\");\n    setManufacturer(\"\");\n    setMainFeatures(\"\");\n    setToolFiles({\n      toolFile1: null,\n      toolFile2: null,\n      toolFile3: null,\n      toolFile4: null,\n      toolFile5: null\n    });\n  }\n}\nexport const ImageContainer = styled.div.withConfig({\n  displayName: \"AddTool__ImageContainer\",\n  componentId: \"esjjej-0\"\n})([\"margin:10px;label{width:100%;height:100%;}.div-file-input{height:auto;width:200px;}.image-container{width:100%;height:auto;}\"]);\nexport const Row = styled.div.withConfig({\n  displayName: \"AddTool__Row\",\n  componentId: \"esjjej-1\"\n})([\"display:flex;width:100%;flex-direction:row;justify-content:space-between;input{margin-right:5px;}select{margin-right:5px;}\"]);","map":null,"metadata":{},"sourceType":"module"}