{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport FileInput from \"rc-upload\";\nimport Dropzone, { useDropzone } from \"react-dropzone\";\nimport GalleryImages from \"./GalleryImages\";\nimport setApi from \"../../../api\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowUp, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport loadingGif from \"../../../static/images/loading.gif\";\nimport { validateImage } from '../../../utils/images';\nexport default function EditGalleryImages({\n  images,\n  removeImage,\n  onSuccess,\n  onError,\n  headers\n}) {\n  const {\n    0: uploading,\n    1: setUp\n  } = useState(false);\n  const onDrop = useCallback(async acceptedFiles => {\n    setUp(true);\n    let error = false;\n\n    for (let file in acceptedFiles) {\n      if (validateImage(process.env.imageExtensionPermitted, 10000, acceptedFiles[file])) {\n        const formData = new FormData();\n        formData.append(\"img\", acceptedFiles[file]);\n        await setApi(_objectSpread({}, headers)).post(\"/gallery\", formData);\n        error = false;\n        onSuccess();\n      } else {\n        onError(`Extensão do arquivo ${acceptedFiles[file].name} é inválido. Extensões permitidas ${process.env.imageExtensionPermitted.toString()}, com no máximo 10MB`);\n        error = true;\n      }\n    }\n\n    setUp(false);\n  }, []);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop\n  });\n  return __jsx(React.Fragment, null, __jsx(Row, null, __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Galeria de Imagens\")), __jsx(Row, null, __jsx(GalleryImages, {\n    images: images,\n    removeImage: removeImage,\n    uploading: uploading\n  })), __jsx(Row, null, uploading ? __jsx(Loading, {\n    src: loadingGif\n  }) : __jsx(LabelInput, getRootProps(), __jsx(\"input\", getInputProps()), __jsx(\"p\", null, \"Arraste e solte os arquivos ou clique aqui para enviar as imagens\"))));\n}\nconst Loading = styled.img.withConfig({\n  displayName: \"EditGalleryImages__Loading\",\n  componentId: \"ql1sqt-0\"\n})([\"width:32px;height:32px;display:block;margin:auto;\"]);\nconst Row = styled.div.withConfig({\n  displayName: \"EditGalleryImages__Row\",\n  componentId: \"ql1sqt-1\"\n})([\"display:flex;flex:1;flex-direction:row;justify-content:center;padding:15px;\"]);\nconst LabelInput = styled.div.withConfig({\n  displayName: \"EditGalleryImages__LabelInput\",\n  componentId: \"ql1sqt-2\"\n})([\"display:flex;flex-direction:column;color:grey;align-items:center;width:100%;border:3px dotted grey;cursor:pointer;padding:50px;text-align:center;:hover{border:3px dotted lightblue;}\"]);","map":{"version":3,"sources":["C:/Users/Gluz/Projects/web/multcostura/multcostura-web/src/components/admin/news/EditGalleryImages.jsx"],"names":["React","useState","useEffect","useCallback","styled","FileInput","Dropzone","useDropzone","GalleryImages","setApi","FontAwesomeIcon","faArrowUp","faTrash","loadingGif","validateImage","EditGalleryImages","images","removeImage","onSuccess","onError","headers","uploading","setUp","onDrop","acceptedFiles","error","file","process","env","imageExtensionPermitted","formData","FormData","append","post","name","toString","getRootProps","getInputProps","color","Loading","img","Row","div","LabelInput"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,QAAP,IAAmBC,WAAnB,QAAsC,gBAAtC;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,mCAAnC;AAEA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,eAAe,SAASC,iBAAT,CAA2B;AACxCC,EAAAA,MADwC;AAExCC,EAAAA,WAFwC;AAGxCC,EAAAA,SAHwC;AAIxCC,EAAAA,OAJwC;AAKxCC,EAAAA;AALwC,CAA3B,EAMZ;AACD,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAAqBrB,QAAQ,CAAC,KAAD,CAAnC;AAEA,QAAMsB,MAAM,GAAGpB,WAAW,CAAC,MAAMqB,aAAN,IAAuB;AAChDF,IAAAA,KAAK,CAAC,IAAD,CAAL;AACA,QAAIG,KAAK,GAAG,KAAZ;;AACA,SAAK,IAAIC,IAAT,IAAiBF,aAAjB,EAAgC;AAC9B,UAAIV,aAAa,CAACa,OAAO,CAACC,GAAR,CAAYC,uBAAb,EAAsC,KAAtC,EAA6CL,aAAa,CAACE,IAAD,CAA1D,CAAjB,EAAoF;AAClF,cAAMI,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,QAAAA,QAAQ,CAACE,MAAT,CAAgB,KAAhB,EAAuBR,aAAa,CAACE,IAAD,CAApC;AAEA,cAAMjB,MAAM,mBAAMW,OAAN,EAAN,CAAuBa,IAAvB,CAA4B,UAA5B,EAAwCH,QAAxC,CAAN;AACAL,QAAAA,KAAK,GAAG,KAAR;AACAP,QAAAA,SAAS;AACV,OAPD,MAOO;AACLC,QAAAA,OAAO,CAAE,uBAAsBK,aAAa,CAACE,IAAD,CAAb,CAAoBQ,IAAK,qCAAoCP,OAAO,CAACC,GAAR,CAAYC,uBAAZ,CAAoCM,QAApC,EAA+C,sBAApI,CAAP;AACAV,QAAAA,KAAK,GAAG,IAAR;AACD;AACF;;AAEDH,IAAAA,KAAK,CAAC,KAAD,CAAL;AACD,GAlByB,EAkBvB,EAlBuB,CAA1B;AAmBA,QAAM;AAAEc,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAkC9B,WAAW,CAAC;AAAEgB,IAAAA;AAAF,GAAD,CAAnD;AAEA,SACE,4BACE,MAAC,GAAD,QACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAA2B,IAAA,KAAK,EAAE;AAAEe,MAAAA,KAAK,EAAE;AAAT;AAAlC,0BADF,CADF,EAME,MAAC,GAAD,QACE,MAAC,aAAD;AAAe,IAAA,MAAM,EAAEtB,MAAvB;AAA+B,IAAA,WAAW,EAAEC,WAA5C;AAAyD,IAAA,SAAS,EAAEI;AAApE,IADF,CANF,EAUE,MAAC,GAAD,QACGA,SAAS,GACR,MAAC,OAAD;AAAS,IAAA,GAAG,EAAER;AAAd,IADQ,GAGR,MAAC,UAAD,EAAgBuB,YAAY,EAA5B,EACE,eAAWC,aAAa,EAAxB,CADF,EAEE,qFAFF,CAJJ,CAVF,CADF;AAyBD;AAED,MAAME,OAAO,GAAGnC,MAAM,CAACoC,GAAV;AAAA;AAAA;AAAA,yDAAb;AAOA,MAAMC,GAAG,GAAGrC,MAAM,CAACsC,GAAV;AAAA;AAAA;AAAA,mFAAT;AAQA,MAAMC,UAAU,GAAGvC,MAAM,CAACsC,GAAV;AAAA;AAAA;AAAA,6LAAhB","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FileInput from \"rc-upload\";\r\nimport Dropzone, { useDropzone } from \"react-dropzone\";\r\n\r\nimport GalleryImages from \"./GalleryImages\";\r\nimport setApi from \"../../../api\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faArrowUp, faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport loadingGif from \"../../../static/images/loading.gif\";\r\nimport { validateImage } from '../../../utils/images'\r\n\r\nexport default function EditGalleryImages({\r\n  images,\r\n  removeImage,\r\n  onSuccess,\r\n  onError,\r\n  headers\r\n}) {\r\n  const [uploading, setUp] = useState(false);\r\n\r\n  const onDrop = useCallback(async acceptedFiles => {\r\n    setUp(true);\r\n    let error = false\r\n    for (let file in acceptedFiles) {\r\n      if (validateImage(process.env.imageExtensionPermitted, 10000, acceptedFiles[file])) {\r\n        const formData = new FormData();\r\n        formData.append(\"img\", acceptedFiles[file]);\r\n\r\n        await setApi({ ...headers }).post(\"/gallery\", formData);\r\n        error = false\r\n        onSuccess();\r\n      } else {\r\n        onError(`Extensão do arquivo ${acceptedFiles[file].name} é inválido. Extensões permitidas ${process.env.imageExtensionPermitted.toString()}, com no máximo 10MB`)\r\n        error = true\r\n      }\r\n    }\r\n      \r\n    setUp(false);\r\n  }, []);\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <h3 className=\"main-title\" style={{ color: \"rgb(129, 22, 27)\" }}>\r\n          Galeria de Imagens\r\n        </h3>\r\n      </Row>\r\n      <Row>\r\n        <GalleryImages images={images} removeImage={removeImage} uploading={uploading} />\r\n      </Row>\r\n\r\n      <Row>\r\n        {uploading ? (\r\n          <Loading src={loadingGif} />\r\n        ) : (\r\n          <LabelInput {...getRootProps()}>\r\n            <input {...getInputProps()} />\r\n            <p>\r\n              Arraste e solte os arquivos ou clique aqui para enviar as imagens\r\n            </p>\r\n          </LabelInput>\r\n        )}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Loading = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n  display: block;\r\n  margin: auto;\r\n`;\r\n\r\nconst Row = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  padding: 15px;\r\n`;\r\n\r\nconst LabelInput = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  color: grey;\r\n  align-items: center;\r\n  width: 100%;\r\n  border: 3px dotted grey;\r\n  cursor: pointer;\r\n  padding: 50px;\r\n  text-align: center;\r\n  :hover {\r\n    border: 3px dotted lightblue;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}