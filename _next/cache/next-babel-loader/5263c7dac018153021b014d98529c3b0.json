{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button } from \"../../../static/styled-components/base\";\nimport { Creators as ResellerCreators } from \"../../../ducks/resellers\";\nimport { Creators as UtilsCreators } from \"../../../ducks/utils\";\nimport setApi from '../../../api';\nimport { Column } from \"../../../static/styled-components/base\";\nimport { getResellers, editReseller, deleteReseller } from \"../../../utils/reseller\";\nimport Message from \"../../utils/Message\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nexport default function ListResellers() {\n  const {\n    message,\n    messageType,\n    messageColor\n  } = useSelector(state => state.Utils);\n  const {\n    resellers\n  } = useSelector(state => state.Reseller);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: diag,\n    1: setDiag\n  } = useState(false);\n  const {\n    0: resellerToEdit,\n    1: setResellerToEdit\n  } = useState({\n    address: {}\n  });\n  const dispatch = useDispatch();\n  const {\n    0: address,\n    1: setAddress\n  } = useState('');\n  const {\n    0: listAddress,\n    1: setListAddress\n  } = useState([]);\n  const {\n    0: listAddressVis,\n    1: setListAddressVis\n  } = useState(false);\n  useEffect(() => {\n    async function asyncFunc() {\n      const response = await setApi().get(`http://dev.virtualearth.net/REST/v1/Autosuggest?query=${resellerToEdit.address}&maxResults=5&key=ArBcF40dX4IT5Co3SIxT7TfvEqq3VNdafH09G2lYGLmm1PvaaFwU-xHaQLjtmpDe`);\n      const fAddress = response.data.resourceSets[0].resources[0].value;\n      const sugestion = [];\n\n      for (let formattedAddress in response.data.resourceSets[0].resources[0].value) {\n        sugestion.push(fAddress[formattedAddress].address.formattedAddress);\n      }\n\n      setListAddress(sugestion);\n    }\n\n    asyncFunc();\n  }, [resellerToEdit.address]);\n\n  async function geoCoding(where) {\n    const response = await setApi().get(`http://dev.virtualearth.net/REST/v1/Locations?addressLine=${where}&maxResults=1&key=${process.env.mapsKey}`);\n    if (response.data.resourceSets[0].estimatedTotal != 0) return response.data.resourceSets[0].resources[0].geocodePoints;else {\n      setSnackBar({\n        open: true,\n        message: \"Não possível encontrar este endereço no mapa\",\n        result: 'error'\n      });\n      return false;\n    }\n  }\n\n  useEffect(() => {\n    function asyncFunc() {\n      getResellers(function (err, resellers) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage());\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n    }\n\n    asyncFunc();\n  }, []);\n\n  function handleClose() {\n    setDiag(false);\n    setResellerToEdit({\n      address: {}\n    });\n  }\n\n  function handleOpen(reseller) {\n    setResellerToEdit(reseller);\n    setDiag(true);\n  }\n\n  const focusOutEvent = event => {\n    timeout = setTimeout(() => {\n      setListAddressVis(false);\n    }, 100);\n  };\n\n  useEffect(() => {\n    const input = document.getElementById('searchBox');\n    let timeout = null;\n    input.addEventListener('focusout', focusOutEvent);\n    return () => {\n      clearTimeout(timeout);\n      input.removeEventListener('focusout', focusOutEvent);\n    };\n  }, []);\n\n  function editRes(res) {\n    editReseller(res.id, _objectSpread({}, res), function (err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        handleClose();\n        return;\n      }\n\n      getResellers(function (err, resellers) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage(err));\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Editado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      handleClose();\n      setVisible(true);\n    });\n  }\n\n  function delMan(id) {\n    deleteReseller(id, function (err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        return;\n      }\n\n      getResellers(function (err, resellers) {\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Deletado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      setVisible(true);\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Lista de fabricantes\"), __jsx(\"div\", null, __jsx(Dialog, {\n    open: diag,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, \"Editar Revendedor\"), __jsx(DialogContent, null, __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Nome\",\n    type: \"text\",\n    value: resellerToEdit.name,\n    onChange: e => setResellerToEdit(_objectSpread({}, resellerToEdit, {\n      name: e.target.value\n    })),\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"phone\",\n    label: \"Telefone\",\n    type: \"text\",\n    value: resellerToEdit.phone,\n    onChange: e => setResellerToEdit(_objectSpread({}, resellerToEdit, {\n      phone: e.target.value\n    })),\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"email\",\n    label: \"E-mail\",\n    type: \"text\",\n    value: resellerToEdit.email,\n    onChange: e => setResellerToEdit(_objectSpread({}, resellerToEdit, {\n      email: e.target.value\n    })),\n    fullWidth: true\n  }), __jsx(Column, {\n    style: {\n      position: \"relative\",\n      minHeight: \"300px\"\n    }\n  }, __jsx(\"div\", {\n    id: \"printoutPanel\"\n  }), __jsx(\"div\", {\n    id: \"searchBoxContainer\"\n  }, __jsx(TextField, {\n    autoFocus: true,\n    onFocus: () => setListAddressVis(true),\n    className: \"form-control\",\n    type: \"text\",\n    autoComplete: \"new-password\",\n    placeholder: \"Digite o endere\\xE7o\",\n    id: \"searchBox\",\n    value: resellerToEdit.address,\n    onChange: e => setResellerToEdit(_objectSpread({}, resellerToEdit, {\n      address: e.target.value\n    }))\n  })), listAddressVis ? __jsx(Column, {\n    onMouseEnter: () => setListAddressVis(true),\n    style: {\n      background: 'white',\n      boxShadow: '1px 1px 3px grey',\n      borderRadius: '5px',\n      padding: '10px',\n      position: \"absolute\",\n      top: \"50px\",\n      width: \"80%\",\n      zIndex: \"9\"\n    }\n  }, listAddress.length > 0 ? listAddress.map((ad, i) => __jsx(Item, {\n    key: i,\n    onClick: () => {\n      setResellerToEdit(_objectSpread({}, resellerToEdit, {\n        address: ad\n      }));\n      console.log(ad);\n    },\n    style: {\n      borderBottom: \"1px solid grey\"\n    }\n  }, ad)) : __jsx(Item, null, \"Nenhuma sugest\\xE3o encontrada\")) : '')), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Cancelar\"), __jsx(Button, {\n    onClick: () => editRes(resellerToEdit),\n    color: \"primary\"\n  }, \"Salvar\")))), __jsx(DivListCategories, null, resellers.map((reseller, id) => __jsx(ResellerContainer, {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    style: {\n      borderBottom: \"1px solid lightgrey\"\n    },\n    key: id\n  }, __jsx(ResellerContainer, {\n    flexDirection: \"column\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"column\"\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontWeight: \"200\"\n    }\n  }, \"Nome: \", reseller.name), __jsx(\"p\", {\n    style: {\n      fontWeight: \"200\"\n    }\n  }, \"Endere\\xE7o: \", reseller.address)), __jsx(ResellerContainer, {\n    flexDirection: \"column\",\n    style: {\n      marginRight: \"10px\",\n      marginLeft: \"10px\"\n    }\n  }, __jsx(Button, {\n    onClick: () => handleOpen(reseller)\n  }, \"Editar Revendedor\"), __jsx(Button, {\n    onClick: () => delMan(reseller.id)\n  }, \"Apagar Revendedor\"))))), visible ? __jsx(Message, {\n    result: messageType,\n    color: messageColor,\n    message: message\n  }) : \"\");\n}\nexport const Hr = styled.hr.withConfig({\n  displayName: \"ListResellers__Hr\",\n  componentId: \"xqh3vc-0\"\n})([\"width:50%;\"]);\nexport const Subcontainer = styled.div.withConfig({\n  displayName: \"ListResellers__Subcontainer\",\n  componentId: \"xqh3vc-1\"\n})([\"padding:0 15px;\"]);\nexport const ImageContainer = styled.div.withConfig({\n  displayName: \"ListResellers__ImageContainer\",\n  componentId: \"xqh3vc-2\"\n})([\"img{max-width:220px;display:block;margin:10px auto;}\"]);\nexport const DivListCategories = styled.div.withConfig({\n  displayName: \"ListResellers__DivListCategories\",\n  componentId: \"xqh3vc-3\"\n})([\"max-height:350px;overflow:auto;::-webkit-scrollbar{width:10px;}::-webkit-scrollbar-track{background:#f1f1f1;}::-webkit-scrollbar-thumb{background:rgb(129,22,27);}::-webkit-scrollbar-thumb:hover{background:#555;}\"]);\nexport const ResellerContainer = styled.div.withConfig({\n  displayName: \"ListResellers__ResellerContainer\",\n  componentId: \"xqh3vc-4\"\n})([\"display:flex;flex-direction:\", \";justify-content:\", \";\"], props => props.flexDirection, props => props.justifyContent);\nconst Item = styled.p.withConfig({\n  displayName: \"ListResellers__Item\",\n  componentId: \"xqh3vc-5\"\n})([\"font-size:1rem;cursor:pointer;transition:.4s;:hover{opacity:.9;color:#81161B;}z-index:9;margin:0;padding:12px 0;:last-child{border-bottom:none !important;}\"]);","map":{"version":3,"sources":["C:/Users/Gluz/Projects/web/multcostura/multcostura-web/src/components/admin/resellers/ListResellers.jsx"],"names":["React","useState","useEffect","useContext","styled","useSelector","useDispatch","Button","Creators","ResellerCreators","UtilsCreators","setApi","Column","getResellers","editReseller","deleteReseller","Message","TextField","Dialog","DialogActions","DialogContent","DialogTitle","ListResellers","message","messageType","messageColor","state","Utils","resellers","Reseller","visible","setVisible","diag","setDiag","resellerToEdit","setResellerToEdit","address","dispatch","setAddress","listAddress","setListAddress","listAddressVis","setListAddressVis","asyncFunc","response","get","fAddress","data","resourceSets","resources","value","sugestion","formattedAddress","push","geoCoding","where","process","env","mapsKey","estimatedTotal","geocodePoints","setSnackBar","open","result","err","changeMessage","changeMessageType","changeMessageColor","loadResellers","handleClose","handleOpen","reseller","focusOutEvent","event","timeout","setTimeout","input","document","getElementById","addEventListener","clearTimeout","removeEventListener","editRes","res","id","delMan","color","name","e","target","phone","email","position","minHeight","background","boxShadow","borderRadius","padding","top","width","zIndex","length","map","ad","i","console","log","borderBottom","display","justifyContent","fontWeight","marginRight","marginLeft","Hr","hr","Subcontainer","div","ImageContainer","DivListCategories","ResellerContainer","props","flexDirection","Item","p"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { Button } from \"../../../static/styled-components/base\";\nimport { Creators as ResellerCreators } from \"../../../ducks/resellers\";\nimport { Creators as UtilsCreators } from \"../../../ducks/utils\";\n\nimport setApi from '../../../api'\nimport { Column } from \"../../../static/styled-components/base\";\n\nimport {\n  getResellers,\n  editReseller,\n  deleteReseller\n} from \"../../../utils/reseller\";\n\nimport Message from \"../../utils/Message\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function ListResellers() {\n  const { message, messageType, messageColor } = useSelector(\n    state => state.Utils\n  );\n  const { resellers } = useSelector(state => state.Reseller);\n  const [visible, setVisible] = useState(false);\n  const [diag, setDiag] = useState(false);\n  const [resellerToEdit, setResellerToEdit] = useState({ address: {} });\n  const dispatch = useDispatch();\n  const [address, setAddress] = useState('')\n  const [listAddress, setListAddress] = useState([])\n  const [listAddressVis, setListAddressVis] = useState(false)\n\n\n  useEffect(() => {\n    async function asyncFunc() {\n      const response = await setApi().get(`http://dev.virtualearth.net/REST/v1/Autosuggest?query=${resellerToEdit.address}&maxResults=5&key=ArBcF40dX4IT5Co3SIxT7TfvEqq3VNdafH09G2lYGLmm1PvaaFwU-xHaQLjtmpDe`)\n      const fAddress = response.data.resourceSets[0].resources[0].value\n      const sugestion = []\n      for (let formattedAddress in response.data.resourceSets[0].resources[0].value) {\n        sugestion.push(fAddress[formattedAddress].address.formattedAddress)\n      }\n      setListAddress(sugestion)\n    }\n\n    asyncFunc();\n  }, [resellerToEdit.address])\n\n   async function geoCoding(where) {\n    const response = await setApi().get(`http://dev.virtualearth.net/REST/v1/Locations?addressLine=${where}&maxResults=1&key=${process.env.mapsKey}`)\n    if (response.data.resourceSets[0].estimatedTotal != 0)\n      return response.data.resourceSets[0].resources[0].geocodePoints\n    else {\n      setSnackBar({\n        open: true,\n        message: \"Não possível encontrar este endereço no mapa\",\n        result: 'error'\n      })\n      return false;\n    }\n  }\n\n\n  useEffect(() => {\n    function asyncFunc() {\n      getResellers(function(err, resellers) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage());\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n    }\n    asyncFunc();\n  }, []);\n\n  function handleClose() {\n    setDiag(false);\n    setResellerToEdit({ address: {} });\n  }\n\n  function handleOpen(reseller) {\n    setResellerToEdit(reseller);\n    setDiag(true);\n  }\n\n  const focusOutEvent = (event) => {\n      timeout = setTimeout(() => {\n        setListAddressVis(false)\n      }, 100)\n    }\n\n  useEffect(() => {\n    const input = document.getElementById('searchBox')\n    let timeout = null\n    input.addEventListener('focusout', focusOutEvent);\n\n\n    return () => {\n      clearTimeout(timeout)\n      input.removeEventListener('focusout', focusOutEvent)\n    }\n  }, [])\n\n  function editRes(res) {\n    editReseller(res.id, { ...res }, function(err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        handleClose();\n        return;\n      }\n      getResellers(function(err, resellers) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage(err));\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Editado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      handleClose();\n      setVisible(true);\n    });\n  }\n\n  function delMan(id) {\n    deleteReseller(id, function(err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        return;\n      }\n      getResellers(function(err, resellers) {\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Deletado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      setVisible(true);\n    });\n  }\n\n  return (\n    <>\n      <h3 className=\"main-title\" style={{ color: \"rgb(129, 22, 27)\" }}>\n        Lista de fabricantes\n      </h3>\n\n      <div>\n        <Dialog\n          open={diag}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Editar Revendedor</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Nome\"\n              type=\"text\"\n              value={resellerToEdit.name}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  name: e.target.value\n                })\n              }\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"phone\"\n              label=\"Telefone\"\n              type=\"text\"\n              value={resellerToEdit.phone}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  phone: e.target.value\n                })\n              }\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"email\"\n              label=\"E-mail\"\n              type=\"text\"\n              value={resellerToEdit.email}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  email: e.target.value\n                })\n              }\n              fullWidth\n            />\n            <Column style={{ position: \"relative\", minHeight: \"300px\"}}>\n            <div id='printoutPanel'></div>\n            <div id='searchBoxContainer'>\n              <TextField\n                autoFocus\n                onFocus={() => setListAddressVis(true)}\n                className=\"form-control\" \n                type='text'\n                autoComplete=\"new-password\"\n                placeholder=\"Digite o endereço\" \n                id='searchBox' \n                value={resellerToEdit.address} \n                onChange={(e) => setResellerToEdit({ ...resellerToEdit, address: e.target.value})}\n              />\n            </div>\n            {\n              listAddressVis ? \n              <Column onMouseEnter={() => setListAddressVis(true)} style={{ background: 'white', boxShadow: '1px 1px 3px grey', borderRadius: '5px', padding: '10px', position: \"absolute\", top: \"50px\", width: \"80%\", zIndex: \"9\" }}>\n                {listAddress.length > 0 ? listAddress.map((ad, i) => <Item key={i} onClick={() => {setResellerToEdit({...resellerToEdit, address: ad });console.log(ad)}} style={{ borderBottom: \"1px solid grey\"}}>{ad}</Item> ) : <Item>Nenhuma sugestão encontrada</Item>}\n              </Column> : ''\n            }   \n            </Column> \n\n           {/* <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"logradouro\"\n              label=\"logradouro\"\n              type=\"text\"\n              value={resellerToEdit.address.publicPlace}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  address: {\n                    ...resellerToEdit.address,\n                    publicPlace: e.target.value\n                  }\n                })\n              }\n              fullWidth\n            />\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"número\"\n              label=\"número\"\n              type=\"text\"\n              value={resellerToEdit.address.number}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  address: {\n                    ...resellerToEdit,\n                    number: e.target.value\n                  }\n                })\n              }\n              fullWidth\n            />\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"Bairro\"\n              label=\"Bairro\"\n              type=\"text\"\n              value={resellerToEdit.address.district}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  address: {\n                    ...resellerToEdit.address,\n                    district: e.target.value\n                  }\n                })\n              }\n              fullWidth\n            />\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"Cidade\"\n              label=\"Cidade\"\n              type=\"text\"\n              value={resellerToEdit.address.city}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  address: {\n                    ...resellerToEdit.address,\n                    city: e.target.value\n                  }\n                })\n              }\n              fullWidth\n            />\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"Estado\"\n              label=\"Estado\"\n              type=\"text\"\n              value={resellerToEdit.address.state}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  address: {\n                    ...resellerToEdit.state,\n                    state: e.target.value\n                  }\n                })\n              }\n              fullWidth\n            />\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"País\"\n              label=\"País\"\n              type=\"text\"\n              value={resellerToEdit.address.country}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  address: {\n                    ...resellerToEdit,\n                    country: e.target.value\n                  }\n                })\n              }\n              fullWidth\n            />*/}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancelar\n            </Button>\n            <Button onClick={() => editRes(resellerToEdit)} color=\"primary\">\n              Salvar\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n\n      <DivListCategories>\n        {resellers.map((reseller, id) => (\n          <ResellerContainer\n            flexDirection=\"row\"\n            justifyContent=\"space-between\"\n            style={{ borderBottom: \"1px solid lightgrey\" }}\n            key={id}\n          >\n            <ResellerContainer\n              flexDirection=\"column\"\n              style={{ display: \"flex\", justifyContent: \"column\" }}\n            >\n              <p style={{ fontWeight: \"200\" }}>Nome: {reseller.name}</p>\n              <p style={{ fontWeight: \"200\" }}>\n                Endereço: {reseller.address}\n              </p>\n            </ResellerContainer>\n            <ResellerContainer\n              flexDirection=\"column\"\n              style={{ marginRight: \"10px\", marginLeft: \"10px\" }}\n            >\n              <Button onClick={() => handleOpen(reseller)}>Editar Revendedor</Button>\n              <Button onClick={() => delMan(reseller.id)}>Apagar Revendedor</Button>\n            </ResellerContainer>\n          </ResellerContainer>\n        ))}\n      </DivListCategories>\n\n      {visible ? (\n        <Message result={messageType} color={messageColor} message={message} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n\nexport const Hr = styled.hr`\n  width: 50%;\n`;\n\nexport const Subcontainer = styled.div`\n  padding: 0 15px;\n`;\n\nexport const ImageContainer = styled.div`\n  img {\n    max-width: 220px;\n    display: block;\n    margin: 10px auto;\n  }\n`;\n\nexport const DivListCategories = styled.div`\n  max-height: 350px;\n  overflow: auto;\n  /* width */\n  ::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: rgb(129, 22, 27);\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nexport const ResellerContainer = styled.div`\n  display: flex;\n  flex-direction: ${props => props.flexDirection};\n  justify-content: ${props => props.justifyContent};\n`;\n\n\nconst Item = styled.p`\n  font-size: 1rem;\n  cursor: pointer;\n  transition: .4s;\n  :hover {\n    opacity: .9;\n    color: #81161B;\n  }\n  z-index: 9;\n  margin: 0;\n  padding: 12px 0;\n    :last-child {\n      border-bottom: none !important;\n  }`"]},"metadata":{},"sourceType":"module"}