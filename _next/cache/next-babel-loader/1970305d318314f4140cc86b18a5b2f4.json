{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { Input, TextArea, Button, Select, UploadImageContainer } from \"../../../static/styled-components/base\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport { getOptions, addMachine } from \"../../../utils/machines\";\nimport { changeFileName, validateImage } from \"../../../utils/images\";\nimport FileInput from \"../../utils/FileInput\";\nexport default function AddMachine() {\n  const imageMessageError = `Extensão do arquivo enviado é inválido. Extensões permitidas ${process.env.imageExtensionPermitted.toString()}, com no máximo 10MB`;\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: manufacturer,\n    1: setManufacturer\n  } = useState(\"\");\n  const {\n    0: description,\n    1: setDescription\n  } = useState(\"\");\n  const {\n    0: mainFeatures,\n    1: setMainFeatures\n  } = useState(\"\");\n  const {\n    0: category,\n    1: setCategory\n  } = useState(\"\");\n  const {\n    0: specifications,\n    1: setSpecifications\n  } = useState({});\n  const {\n    0: video,\n    1: setVideo\n  } = useState('');\n  const {\n    0: snackBar,\n    1: setSnackBar\n  } = useState({\n    result: \"success\",\n    open: false,\n    message: \"\"\n  });\n\n  function handleClose() {\n    setSnackBar(_objectSpread({}, snackBar, {\n      open: false\n    }));\n  }\n\n  const {\n    0: categoriesManufacturers,\n    1: setCategoriesManufacturers\n  } = useState({\n    categories: [],\n    manufacturers: []\n  });\n  useEffect(() => {\n    function asyncFunc() {\n      getOptions(function (err, response) {\n        if (err) {\n          setSnackBar(_objectSpread({}, snackBar, {\n            open: false\n          }));\n          return;\n        }\n\n        setCategoriesManufacturers({\n          manufacturers: response.manufacturers.data,\n          categories: response.categories.data\n        });\n      });\n    }\n\n    asyncFunc();\n  }, []);\n  const {\n    0: machineFiles,\n    1: setMachineFiles\n  } = useState({\n    machineFile1: null,\n    machineFile2: null,\n    machineFile3: null,\n    machineFile4: null,\n    machineFile5: null\n  });\n  const {\n    0: refProdFiles,\n    1: setRefProdFiles\n  } = useState({\n    refProdFile1: null,\n    refProdFile2: null,\n    refProdFile3: null,\n    refProdFile4: null,\n    refProdFile5: null\n  });\n  const {\n    0: folheto,\n    1: setFolheto\n  } = useState(null);\n  const {\n    0: manual,\n    1: setManual\n  } = useState(null);\n\n  function folhetoChange(e) {\n    if (e) {\n      const type = e.target.files[0].name.split(\".\");\n\n      if (type[1] != \"pdf\") {\n        setSnackBar({\n          open: true,\n          result: 'error',\n          message: 'O folheto deve ser apenas formato PDF'\n        });\n      } else {\n        setFolheto(e.target.files[0]);\n      }\n    }\n  }\n\n  function manualChange(e) {\n    if (e) {\n      const type = e.target.files[0].name.split(\".\");\n\n      if (type[1] != \"pdf\") {\n        setSnackBar({\n          open: true,\n          result: 'error',\n          message: 'O manual deve ser apenas formato PDF'\n        });\n      } else {\n        setManual(e.target.files[0]);\n      }\n    }\n  }\n\n  const {\n    0: sewingTypeFile,\n    1: setSewingTypeFile\n  } = useState(null);\n\n  function machineHandleChange(e) {\n    if (validateImage(process.env.imageExtensionPermitted, 10000, e.target.files[0])) {\n      const newName = parseInt(e.target.name[e.target.name.length - 1]) - 1;\n      setMachineFiles(_objectSpread({}, machineFiles, {\n        [e.target.name]: changeFileName(e.target.files[0], newName)\n      }));\n    } else {\n      setSnackBar({\n        open: true,\n        result: 'error',\n        message: imageMessageError\n      });\n    }\n  }\n\n  function machineCleanFileInput(name) {\n    setMachineFiles(_objectSpread({}, machineFiles, {\n      [name]: null\n    }));\n  }\n\n  function refProdHandleChange(e) {\n    if (validateImage(process.env.imageExtensionPermitted, 10000, e.target.files[0])) {\n      const newName = parseInt(e.target.name[e.target.name.length - 1]) - 1;\n      setRefProdFiles(_objectSpread({}, refProdFiles, {\n        [e.target.name]: changeFileName(e.target.files[0], newName)\n      }));\n    } else {\n      setSnackBar({\n        open: true,\n        result: 'error',\n        message: imageMessageError\n      });\n    }\n  }\n\n  function refProdCleanFileInput(name) {\n    setRefProdFiles(_objectSpread({}, refProdFiles, {\n      [name]: null\n    }));\n  }\n\n  function sewingTypeHandleChange(e) {\n    if (validateImage(process.env.imageExtensionPermitted, 10000, e.target.files[0])) {\n      const newName = parseInt(e.target.name[e.target.name.length - 1]) - 1;\n      setSewingTypeFile(changeFileName(e.target.files[0], newName));\n    } else {\n      setSnackBar({\n        open: true,\n        result: 'error',\n        message: imageMessageError\n      });\n    }\n  }\n\n  function handleChangeVideo(e) {\n    const YTBaseURL = \"https://www.youtube.com/embed/\";\n\n    if (getParam(e.target.value) == 0) {\n      setSnackBar({\n        open: true,\n        result: 'error',\n        message: 'O endereço não é uma URL válida do YouTube'\n      });\n    } else {\n      setVideo(YTBaseURL + getParam(e.target.value));\n    }\n  }\n\n  function getParam(url) {\n    var results = new RegExp('[\\?&]' + 'v' + '=([^&#]*)').exec(url);\n\n    if (results == null) {\n      return 0;\n    }\n\n    return results[1] || 0;\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Adicionar nova m\\xE1quina\"), __jsx(\"div\", null, __jsx(Snackbar, {\n    open: snackBar.open,\n    autoHideDuration: 3500,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    severity: snackBar.result\n  }, snackBar.message)), __jsx(Input, {\n    placeholder: \"Nome\",\n    onChange: e => setName(e.target.value),\n    value: name\n  }), __jsx(Input, {\n    placeholder: \"Subt\\xEDtulo\",\n    onChange: e => setDescription(e.target.value),\n    value: description\n  }), __jsx(TextArea, {\n    placeholder: \"Caracter\\xEDsticas\",\n    onChange: e => setMainFeatures(e.target.value),\n    value: mainFeatures,\n    rows: \"5\"\n  }), __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      textAlign: \"center\",\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Categoria e fabricante\"), __jsx(Row, null, __jsx(Select, {\n    value: category,\n    onChange: e => setCategory(e.target.value)\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Escolha uma categoria\"), categoriesManufacturers.categories.map(category => __jsx(\"option\", {\n    value: category.id\n  }, category.name))), __jsx(Select, {\n    value: manufacturer,\n    onChange: e => setManufacturer(e.target.value)\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Escolha um fabricante\"), categoriesManufacturers.manufacturers.map(manufacturer => __jsx(\"option\", {\n    value: manufacturer.id\n  }, manufacturer.name)))), __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      textAlign: \"center\",\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Especifica\\xE7\\xF5es t\\xE9cnicas\"), __jsx(Row, null, __jsx(Input, {\n    style: {\n      flex: 2\n    },\n    placeholder: \"Modelo\",\n    value: specifications.modelo,\n    onChange: e => setSpecifications(_objectSpread({}, specifications, {\n      modelo: e.target.value\n    }))\n  }), __jsx(Input, {\n    placeholder: \"Altura do cal\\xE7ador (mm)\",\n    style: {\n      flex: 1\n    },\n    value: specifications.alturaCalcador,\n    onChange: e => setSpecifications(_objectSpread({}, specifications, {\n      alturaCalcador: e.target.value\n    }))\n  }), __jsx(Input, {\n    style: {\n      flex: 1\n    },\n    placeholder: \"Comprimento do ponto (mm)\",\n    value: specifications.comprimentoDoPonto,\n    onChange: e => setSpecifications(_objectSpread({}, specifications, {\n      comprimentoDoPonto: e.target.value\n    }))\n  })), __jsx(Row, null, __jsx(Input, {\n    style: {\n      flex: 1\n    },\n    placeholder: \"Corte de linha\",\n    value: specifications.corteDeLinha,\n    onChange: e => setSpecifications(_objectSpread({}, specifications, {\n      corteDeLinha: e.target.value\n    }))\n  }), __jsx(Input, {\n    style: {\n      flex: 1\n    },\n    placeholder: \"Velocidade m\\xE1xima(PPM)\",\n    value: specifications.velocidadeMaxima,\n    onChange: e => setSpecifications(_objectSpread({}, specifications, {\n      velocidadeMaxima: e.target.value\n    }))\n  }), __jsx(Input, {\n    style: {\n      flex: 3\n    },\n    placeholder: \"Motor\",\n    value: specifications.motor,\n    onChange: e => setSpecifications(_objectSpread({}, specifications, {\n      motor: e.target.value\n    }))\n  })), __jsx(Row, null, __jsx(Input, {\n    style: {\n      flex: 1\n    },\n    value: specifications.numeroDeAgulhas,\n    placeholder: \"N\\xFAmero de agulhas\",\n    onChange: e => setSpecifications(_objectSpread({}, specifications, {\n      numeroDeAgulhas: e.target.value\n    }))\n  }), __jsx(Input, {\n    style: {\n      flex: 1\n    },\n    placeholder: \"Painel touch screen\",\n    value: specifications.painelTouchScreen,\n    onChange: e => setSpecifications(_objectSpread({}, specifications, {\n      painelTouchScreen: e.target.value\n    }))\n  }), __jsx(Input, {\n    style: {\n      flex: 1\n    },\n    placeholder: \"Tipo de agulha\",\n    value: specifications.tipoDeAgulha,\n    onChange: e => setSpecifications(_objectSpread({}, specifications, {\n      tipoDeAgulha: e.target.value\n    }))\n  })), __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      textAlign: \"center\",\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Fotos do produto\"), __jsx(Row, {\n    style: {\n      margin: \"30px 0 \",\n      justifyContent: \"center\"\n    }\n  }, __jsx(ImageContainer, {\n    maxWidth: \"300px\"\n  }, __jsx(FileInput, {\n    handleChange: machineHandleChange,\n    labelInputFile: \"Imagem principal\",\n    id: \"machineFile1\",\n    name: \"machineFile1\",\n    labelWidth: \"250px\",\n    labelHeight: \"250px\",\n    maxWidth: \"250px\",\n    file: machineFiles.machineFile1,\n    cleanFileInput: () => machineCleanFileInput(\"machineFile1\")\n  }))), __jsx(Row, {\n    style: {\n      flexWrap: \"wrap\",\n      justifyContent: \"center\"\n    }\n  }, __jsx(ImageContainer, {\n    maxWidth: \"200px\"\n  }, __jsx(FileInput, {\n    handleChange: machineHandleChange,\n    labelInputFile: \"Imagem 2\",\n    id: \"machineFile2\",\n    name: \"machineFile2\",\n    labelWidth: \"150px\",\n    labelHeight: \"150px\",\n    maxWidth: \"150px\",\n    file: machineFiles.machineFile2,\n    cleanFileInput: () => machineCleanFileInput(\"machineFile2\")\n  })), __jsx(ImageContainer, {\n    maxWidth: \"200px\"\n  }, __jsx(FileInput, {\n    handleChange: machineHandleChange,\n    labelInputFile: \"Imagem 3\",\n    id: \"machineFile3\",\n    name: \"machineFile3\",\n    labelWidth: \"150px\",\n    labelHeight: \"150px\",\n    maxWidth: \"150px\",\n    file: machineFiles.machineFile3,\n    cleanFileInput: () => machineCleanFileInput(\"machineFile3\")\n  })), __jsx(ImageContainer, {\n    maxWidth: \"200px\"\n  }, __jsx(FileInput, {\n    handleChange: machineHandleChange,\n    labelInputFile: \"Imagem 4\",\n    id: \"machineFile4\",\n    name: \"machineFile4\",\n    labelWidth: \"150px\",\n    labelHeight: \"150px\",\n    maxWidth: \"150px\",\n    file: machineFiles.machineFile4,\n    cleanFileInput: () => machineCleanFileInput(\"machineFile4\")\n  })), __jsx(ImageContainer, {\n    maxWidth: \"200px\"\n  }, __jsx(FileInput, {\n    handleChange: machineHandleChange,\n    labelInputFile: \"Imagem 5\",\n    id: \"machineFile5\",\n    name: \"machineFile5\",\n    labelWidth: \"150px\",\n    labelHeight: \"150px\",\n    maxWidth: \"150px\",\n    file: machineFiles.machineFile5,\n    cleanFileInput: () => machineCleanFileInput(\"machineFile5\")\n  }))), __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      textAlign: \"center\",\n      color: \"rgb(129, 22, 27)\",\n      marginTop: \"15px\"\n    }\n  }, \"Exemplo do produto produzido pela m\\xE1quina\"), __jsx(Row, {\n    style: {\n      flexWrap: \"wrap\",\n      justifyContent: \"center\"\n    }\n  }, __jsx(ImageContainer, {\n    maxWidth: \"200px\"\n  }, __jsx(FileInput, {\n    handleChange: refProdHandleChange,\n    labelInputFile: \"Imagem 1\",\n    id: \"refProdFiles1\",\n    name: \"refProdFiles1\",\n    labelWidth: \"100px\",\n    labelHeight: \"100px\",\n    maxWidth: \"100px\",\n    file: refProdFiles.refProdFiles1,\n    cleanFileInput: () => refProdCleanFileInput(\"refProdFiles1\")\n  })), __jsx(ImageContainer, {\n    maxWidth: \"200px\"\n  }, __jsx(FileInput, {\n    handleChange: refProdHandleChange,\n    labelInputFile: \"Imagem 2\",\n    id: \"refProdFiles2\",\n    name: \"refProdFiles2\",\n    labelWidth: \"100px\",\n    labelHeight: \"100px\",\n    maxWidth: \"100px\",\n    file: refProdFiles.refProdFiles2,\n    cleanFileInput: () => refProdCleanFileInput(\"refProdFiles2\")\n  })), __jsx(ImageContainer, {\n    maxWidth: \"200px\"\n  }, __jsx(FileInput, {\n    handleChange: refProdHandleChange,\n    labelInputFile: \"Imagem 3\",\n    id: \"refProdFiles3\",\n    name: \"refProdFiles3\",\n    labelWidth: \"100px\",\n    labelHeight: \"100px\",\n    maxWidth: \"100px\",\n    file: refProdFiles.refProdFiles3,\n    cleanFileInput: () => refProdCleanFileInput(\"refProdFiles3\")\n  })), __jsx(ImageContainer, {\n    maxWidth: \"200px\"\n  }, __jsx(FileInput, {\n    handleChange: refProdHandleChange,\n    labelInputFile: \"Imagem 4\",\n    id: \"refProdFiles4\",\n    name: \"refProdFiles4\",\n    labelWidth: \"100px\",\n    labelHeight: \"100px\",\n    maxWidth: \"100px\",\n    file: refProdFiles.refProdFiles4,\n    cleanFileInput: () => refProdCleanFileInput(\"refProdFiles4\")\n  }))), __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      textAlign: \"center\",\n      color: \"rgb(129, 22, 27)\",\n      marginTop: \"15px\"\n    }\n  }, \"Tipo de ponto\"), __jsx(Row, {\n    style: {\n      justifyContent: \"center\"\n    }\n  }, __jsx(FileInput, {\n    handleChange: sewingTypeHandleChange,\n    labelInputFile: \"Imagem \\xFAnica\",\n    id: \"sewingTypeFile\",\n    name: \"sewingTypeFile\",\n    labelWidth: \"200px\",\n    labelHeight: \"200px\",\n    maxWidth: \"200px\",\n    file: sewingTypeFile,\n    cleanFileInput: () => setSewingTypeFile(null)\n  })), __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      textAlign: \"center\",\n      color: \"rgb(129, 22, 27)\",\n      marginTop: \"15px\"\n    }\n  }, \"V\\xEDdeo (YouTube)\"), __jsx(Row, null, __jsx(Input, {\n    style: {\n      flex: 1\n    },\n    placeholder: \"Ex: https://www.youtube.com/watch?v=5qdtbMvC2Rs\",\n    value: video,\n    onChange: handleChangeVideo\n  })), __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      textAlign: \"center\",\n      color: \"rgb(129, 22, 27)\",\n      marginTop: \"15px\"\n    }\n  }, \"Folheto e Manual\"), __jsx(Row, {\n    style: {\n      flexWrap: \"wrap\",\n      justifyContent: \"center\",\n      width: \"50%\",\n      margin: \"auto\"\n    }\n  }, __jsx(\"div\", {\n    style: {\n      border: '2px dotted lightgrey',\n      padding: '5px',\n      minHeight: \"100px\",\n      flex: 1,\n      marginRight: \"5px\",\n      position: \"relative\"\n    }\n  }, folheto ? __jsx(FontAwesomeIcon, {\n    icon: faTrash,\n    style: {\n      width: \"16px\",\n      position: \"absolute\",\n      borderRadius: \"10px\",\n      padding: \"3px\",\n      background: \"rgb(129, 22, 27)\",\n      color: \"white\",\n      right: \"13px\",\n      top: \"10px\",\n      cursor: \"pointer\",\n      zIndex: \"9\"\n    },\n    onClick: () => setFolheto(null)\n  }) : null, __jsx(\"label\", {\n    htmlFor: \"folheto\",\n    style: {\n      cursor: \"pointer\",\n      minHeight: \"100px\",\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      textAlign: \"center\"\n    }\n  }, \"FOLHETO \", __jsx(\"br\", null), __jsx(\"br\", null), folheto ? folheto.name : \"Clique para escolher um arquivo\"), __jsx(\"input\", {\n    style: {\n      width: 0\n    },\n    type: \"file\",\n    name: \"folheto\",\n    id: \"folheto\",\n    onChange: folhetoChange\n  })), __jsx(\"div\", {\n    style: {\n      border: '2px dotted lightgrey',\n      padding: '5px',\n      minHeight: \"100px\",\n      flex: 1,\n      position: \"relative\"\n    }\n  }, manual ? __jsx(FontAwesomeIcon, {\n    icon: faTrash,\n    style: {\n      width: \"16px\",\n      position: \"absolute\",\n      borderRadius: \"10px\",\n      padding: \"3px\",\n      background: \"rgb(129, 22, 27)\",\n      color: \"white\",\n      right: \"13px\",\n      top: \"10px\",\n      cursor: \"pointer\",\n      zIndex: \"9\"\n    },\n    onClick: () => setManual(null)\n  }) : null, __jsx(\"label\", {\n    htmlFor: \"manual\",\n    style: {\n      cursor: \"pointer\",\n      minHeight: \"100px\",\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      textAlign: \"center\"\n    }\n  }, \"MANUAL \", __jsx(\"br\", null), __jsx(\"br\", null), manual ? manual.name : \"Clique para escolher um arquivo\"), __jsx(\"input\", {\n    style: {\n      width: 0\n    },\n    type: \"file\",\n    name: \"manual\",\n    id: \"manual\",\n    onChange: manualChange\n  })))), __jsx(Button, {\n    onClick: () => addMachine({\n      name,\n      manufacturer,\n      description,\n      mainFeatures,\n      category,\n      specifications,\n      video\n    }, machineFiles, sewingTypeFile, refProdFiles, {\n      folheto,\n      manual\n    }, function (err, data) {\n      if (err) {\n        setSnackBar({\n          result: 'error',\n          message: err,\n          open: true\n        });\n        return;\n      }\n\n      setSnackBar({\n        result: 'success',\n        message: 'Máquina criada com sucesso',\n        open: true\n      });\n      cleanForm();\n    })\n  }, \"Adicionar m\\xE1quina\"));\n\n  function cleanForm() {\n    setName(\"\");\n    setDescription(\"\");\n    setManufacturer(\"\");\n    setCategory(\"\");\n    setMainFeatures(\"\");\n    setSpecifications({\n      modelo: \"\",\n      motor: \"\",\n      alturaCalcador: \"\",\n      comprimentoDoPonto: \"\",\n      corteDeLinha: \"\",\n      velocidadeMaxima: \"\",\n      numeroDeAgulhas: \"\",\n      painelTouchScreen: \"\",\n      tipoDeAgulha: \"\"\n    });\n    setMachineFiles({\n      machineFile1: null,\n      machineFile2: null,\n      machineFile3: null,\n      machineFile4: null,\n      machineFile5: null\n    });\n    setRefProdFiles({\n      refProdFile1: null,\n      refProdFile2: null,\n      refProdFile3: null,\n      refProdFile4: null\n    });\n    setFolheto(null);\n    setManual(null);\n    setSewingTypeFile(null);\n  }\n}\nexport const ImageContainer = styled.div.withConfig({\n  displayName: \"AddMachine__ImageContainer\",\n  componentId: \"f5zi3f-0\"\n})([\"img{max-width:\", \";}\"], props => props.maxWidth);\nexport const Row = styled.div.withConfig({\n  displayName: \"AddMachine__Row\",\n  componentId: \"f5zi3f-1\"\n})([\"display:flex;width:100%;flex-direction:row;justify-content:space-between;input{margin-right:5px;}select{margin-right:5px;}\"]);","map":null,"metadata":{},"sourceType":"module"}