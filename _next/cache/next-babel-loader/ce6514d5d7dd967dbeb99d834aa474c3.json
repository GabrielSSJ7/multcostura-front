{"ast":null,"code":"import setApi from \"../api\";\nexport function saveSlide(id, images, files, type, cb) {\n  const formData = new FormData();\n  files.forEach(file => {\n    if (typeof file == \"object\") formData.append(\"img\", file);\n  });\n  formData.append(\"id\", id);\n  formData.append(\"images\", JSON.stringify(images));\n  formData.append(\"type\", type);\n  setApi().post(\"/banner\", formData).then(res => cb(null, res.data)).catch(err => cb(err.response ? err.response.data : err.toString()));\n}\nexport function getSlide(route, id, cb) {\n  setApi().get(`/${route}${id ? \"/\" + id : \"\"}`).then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function getBannerFixed(type, cb) {\n  setApi().get(`/institutional/${type}`).then(response => {\n    console.log(\"r =>   \", response.data);\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function saveBannerFixed(type, file, cb) {\n  const formData = new FormData();\n  formData.append(\"img\", file);\n  formData.append(\"type\", type);\n  setApi().post(`/institutional`, formData).then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function deleteBannerFixed(type, cb) {\n  setApi().delete(\"/institutional/\" + type).then(r => {\n    cb(null, r.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}","map":{"version":3,"sources":["C:/Users/Gluz/Projects/web/multcostura/multcostura-web/src/utils/banner.js"],"names":["setApi","saveSlide","id","images","files","type","cb","formData","FormData","forEach","file","append","JSON","stringify","post","then","res","data","catch","err","response","toString","getSlide","route","get","getBannerFixed","console","log","saveBannerFixed","deleteBannerFixed","delete","r"],"mappings":"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","sourcesContent":["import setApi from \"../api\";\n\nexport function saveSlide(id, images, files, type, cb) {\n  const formData = new FormData();\n  files.forEach(file => {\n    if (typeof file == \"object\") formData.append(\"img\", file);\n  });\n  formData.append(\"id\", id);\n  formData.append(\"images\", JSON.stringify(images));\n  formData.append(\"type\", type);\n  setApi()\n    .post(\"/banner\", formData)\n    .then(res => cb(null, res.data))\n    .catch(err => cb(err.response ? err.response.data : err.toString()));\n}\n\nexport function getSlide(route, id, cb) {\n  setApi()\n    .get(`/${route}${id ? \"/\" + id : \"\"}`)\n    .then(response => {\n      cb(null, response.data);\n    })\n    .catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n}\n\nexport function getBannerFixed(type, cb) {\n  setApi()\n    .get(`/institutional/${type}`)\n    .then(response => {\n      console.log(\"r =>   \", response.data);\n\n      cb(null, response.data);\n    })\n    .catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n}\n\nexport function saveBannerFixed(type, file, cb) {\n  const formData = new FormData();\n  formData.append(\"img\", file);\n  formData.append(\"type\", type);\n  setApi()\n    .post(`/institutional`, formData)\n    .then(response => {\n      cb(null, response.data);\n    })\n    .catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n}\n\nexport function deleteBannerFixed(type, cb) {\n  setApi()\n    .delete(\"/institutional/\" + type)\n    .then(r => {\n      cb(null, r.data);\n    })\n    .catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n}\n"]},"metadata":{},"sourceType":"module"}