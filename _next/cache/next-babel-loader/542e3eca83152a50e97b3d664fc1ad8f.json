{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button } from \"../../../static/styled-components/base\";\nimport { Creators as ResellerCreators } from \"../../../ducks/resellers\";\nimport { Creators as UtilsCreators } from \"../../../ducks/utils\";\nimport setApi from '../../../api';\nimport { Column } from \"../../../static/styled-components/base\";\nimport { getResellers, editReseller, deleteReseller } from \"../../../utils/reseller\";\nimport Message from \"../../utils/Message\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nexport default function ListResellers() {\n  var _useSelector = useSelector(function (state) {\n    return state.Utils;\n  }),\n      message = _useSelector.message,\n      messageType = _useSelector.messageType,\n      messageColor = _useSelector.messageColor;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.Reseller;\n  }),\n      resellers = _useSelector2.resellers;\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState(false),\n      diag = _useState2[0],\n      setDiag = _useState2[1];\n\n  var _useState3 = useState({\n    address: {}\n  }),\n      resellerToEdit = _useState3[0],\n      setResellerToEdit = _useState3[1];\n\n  var dispatch = useDispatch();\n\n  var _useState4 = useState(''),\n      address = _useState4[0],\n      setAddress = _useState4[1];\n\n  var _useState5 = useState([]),\n      listAddress = _useState5[0],\n      setListAddress = _useState5[1];\n\n  var _useState6 = useState(false),\n      listAddressVis = _useState6[0],\n      setListAddressVis = _useState6[1];\n\n  useEffect(function () {\n    function asyncFunc() {\n      var response, fAddress, sugestion, formattedAddress;\n      return _regeneratorRuntime.async(function asyncFunc$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(setApi().get(\"http://dev.virtualearth.net/REST/v1/Autosuggest?query=\".concat(resellerToEdit.address, \"&maxResults=5&key=ArBcF40dX4IT5Co3SIxT7TfvEqq3VNdafH09G2lYGLmm1PvaaFwU-xHaQLjtmpDe\")));\n\n            case 2:\n              response = _context.sent;\n              fAddress = response.data.resourceSets[0].resources[0].value;\n              sugestion = [];\n\n              for (formattedAddress in response.data.resourceSets[0].resources[0].value) {\n                sugestion.push(fAddress[formattedAddress].address.formattedAddress);\n              }\n\n              setListAddress(sugestion);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    asyncFunc();\n  }, [resellerToEdit.address]);\n\n  function geoCoding(where) {\n    var response;\n    return _regeneratorRuntime.async(function geoCoding$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(setApi().get(\"http://dev.virtualearth.net/REST/v1/Locations?addressLine=\".concat(where, \"&maxResults=1&key=\").concat(process.env.mapsKey)));\n\n          case 2:\n            response = _context2.sent;\n\n            if (!(response.data.resourceSets[0].estimatedTotal != 0)) {\n              _context2.next = 7;\n              break;\n            }\n\n            return _context2.abrupt(\"return\", response.data.resourceSets[0].resources[0].geocodePoints);\n\n          case 7:\n            setSnackBar({\n              open: true,\n              message: \"Não possível encontrar este endereço no mapa\",\n              result: 'error'\n            });\n            return _context2.abrupt(\"return\", false);\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    function asyncFunc() {\n      getResellers(function (err, resellers) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage());\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n    }\n\n    asyncFunc();\n  }, []);\n\n  function handleClose() {\n    setDiag(false);\n    setResellerToEdit({\n      address: {}\n    });\n  }\n\n  function handleOpen(reseller) {\n    setResellerToEdit(reseller);\n    setDiag(true);\n  }\n\n  var focusOutEvent = function focusOutEvent(event) {\n    timeout = setTimeout(function () {\n      setListAddressVis(false);\n    }, 100);\n  };\n\n  useEffect(function () {\n    var input = document.getElementById('searchBox');\n    var timeout = null;\n    input.addEventListener('focusout', focusOutEvent);\n    return function () {\n      clearTimeout(timeout);\n      input.removeEventListener('focusout', focusOutEvent);\n    };\n  }, []);\n\n  function editRes(res) {\n    editReseller(res.id, _objectSpread({}, res), function (err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        handleClose();\n        return;\n      }\n\n      getResellers(function (err, resellers) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage(err));\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Editado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      handleClose();\n      setVisible(true);\n    });\n  }\n\n  function delMan(id) {\n    deleteReseller(id, function (err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        return;\n      }\n\n      getResellers(function (err, resellers) {\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Deletado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      setVisible(true);\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Lista de fabricantes\"), __jsx(\"div\", null, __jsx(Dialog, {\n    open: diag,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, \"Editar Revendedor\"), __jsx(DialogContent, null, __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Nome\",\n    type: \"text\",\n    value: resellerToEdit.name,\n    onChange: function onChange(e) {\n      return setResellerToEdit(_objectSpread({}, resellerToEdit, {\n        name: e.target.value\n      }));\n    },\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"phone\",\n    label: \"Telefone\",\n    type: \"text\",\n    value: resellerToEdit.phone,\n    onChange: function onChange(e) {\n      return setResellerToEdit(_objectSpread({}, resellerToEdit, {\n        phone: e.target.value\n      }));\n    },\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"email\",\n    label: \"E-mail\",\n    type: \"text\",\n    value: resellerToEdit.email,\n    onChange: function onChange(e) {\n      return setResellerToEdit(_objectSpread({}, resellerToEdit, {\n        email: e.target.value\n      }));\n    },\n    fullWidth: true\n  }), __jsx(Column, {\n    style: {\n      position: \"relative\",\n      minHeight: \"300px\"\n    }\n  }, __jsx(\"div\", {\n    id: \"printoutPanel\"\n  }), __jsx(\"div\", {\n    id: \"searchBoxContainer\"\n  }, __jsx(TextField, {\n    autoFocus: true,\n    onFocus: function onFocus() {\n      return setListAddressVis(true);\n    },\n    className: \"form-control\",\n    type: \"text\",\n    autoComplete: \"new-password\",\n    placeholder: \"Digite o endere\\xE7o\",\n    id: \"searchBox\",\n    value: resellerToEdit.address,\n    onChange: function onChange(e) {\n      return setResellerToEdit(_objectSpread({}, resellerToEdit, {\n        address: e.target.value\n      }));\n    }\n  })), listAddressVis ? __jsx(Column, {\n    onMouseEnter: function onMouseEnter() {\n      return setListAddressVis(true);\n    },\n    style: {\n      background: 'white',\n      boxShadow: '1px 1px 3px grey',\n      borderRadius: '5px',\n      padding: '10px',\n      position: \"absolute\",\n      top: \"50px\",\n      width: \"80%\",\n      zIndex: \"9\"\n    }\n  }, listAddress.length > 0 ? listAddress.map(function (ad, i) {\n    return __jsx(Item, {\n      key: i,\n      onClick: function onClick() {\n        setResellerToEdit(_objectSpread({}, resellerToEdit, {\n          address: ad\n        }));\n        console.log(ad);\n      },\n      style: {\n        borderBottom: \"1px solid grey\"\n      }\n    }, ad);\n  }) : __jsx(Item, null, \"Nenhuma sugest\\xE3o encontrada\")) : '')), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Cancelar\"), __jsx(Button, {\n    onClick: function onClick() {\n      return editRes(resellerToEdit);\n    },\n    color: \"primary\"\n  }, \"Salvar\")))), __jsx(DivListCategories, null, resellers.map(function (reseller, id) {\n    return __jsx(ResellerContainer, {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      style: {\n        borderBottom: \"1px solid lightgrey\"\n      },\n      key: id\n    }, __jsx(ResellerContainer, {\n      flexDirection: \"column\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"column\"\n      }\n    }, __jsx(\"p\", {\n      style: {\n        fontWeight: \"200\"\n      }\n    }, \"Nome: \", reseller.name), __jsx(\"p\", {\n      style: {\n        fontWeight: \"200\"\n      }\n    }, \"Endere\\xE7o: \", reseller.address)), __jsx(ResellerContainer, {\n      flexDirection: \"column\",\n      style: {\n        marginRight: \"10px\",\n        marginLeft: \"10px\"\n      }\n    }, __jsx(Button, {\n      onClick: function onClick() {\n        return handleOpen(reseller);\n      }\n    }, \"Editar Revendedor\"), __jsx(Button, {\n      onClick: function onClick() {\n        return delMan(reseller.id);\n      }\n    }, \"Apagar Revendedor\")));\n  })), visible ? __jsx(Message, {\n    result: messageType,\n    color: messageColor,\n    message: message\n  }) : \"\");\n}\nexport var Hr = styled.hr.withConfig({\n  displayName: \"ListResellers__Hr\",\n  componentId: \"xqh3vc-0\"\n})([\"width:50%;\"]);\nexport var Subcontainer = styled.div.withConfig({\n  displayName: \"ListResellers__Subcontainer\",\n  componentId: \"xqh3vc-1\"\n})([\"padding:0 15px;\"]);\nexport var ImageContainer = styled.div.withConfig({\n  displayName: \"ListResellers__ImageContainer\",\n  componentId: \"xqh3vc-2\"\n})([\"img{max-width:220px;display:block;margin:10px auto;}\"]);\nexport var DivListCategories = styled.div.withConfig({\n  displayName: \"ListResellers__DivListCategories\",\n  componentId: \"xqh3vc-3\"\n})([\"max-height:350px;overflow:auto;::-webkit-scrollbar{width:10px;}::-webkit-scrollbar-track{background:#f1f1f1;}::-webkit-scrollbar-thumb{background:rgb(129,22,27);}::-webkit-scrollbar-thumb:hover{background:#555;}\"]);\nexport var ResellerContainer = styled.div.withConfig({\n  displayName: \"ListResellers__ResellerContainer\",\n  componentId: \"xqh3vc-4\"\n})([\"display:flex;flex-direction:\", \";justify-content:\", \";\"], function (props) {\n  return props.flexDirection;\n}, function (props) {\n  return props.justifyContent;\n});\nvar Item = styled.p.withConfig({\n  displayName: \"ListResellers__Item\",\n  componentId: \"xqh3vc-5\"\n})([\"font-size:1rem;cursor:pointer;transition:.4s;:hover{opacity:.9;color:#81161B;}z-index:9;margin:0;padding:12px 0;:last-child{border-bottom:none !important;}\"]);","map":{"version":3,"sources":["C:/Users/Gluz/Projects/web/multcostura/multcostura-web/src/components/admin/resellers/ListResellers.jsx"],"names":["React","useState","useEffect","useContext","styled","useSelector","useDispatch","Button","Creators","ResellerCreators","UtilsCreators","setApi","Column","getResellers","editReseller","deleteReseller","Message","TextField","Dialog","DialogActions","DialogContent","DialogTitle","ListResellers","state","Utils","message","messageType","messageColor","Reseller","resellers","visible","setVisible","diag","setDiag","address","resellerToEdit","setResellerToEdit","dispatch","setAddress","listAddress","setListAddress","listAddressVis","setListAddressVis","asyncFunc","get","response","fAddress","data","resourceSets","resources","value","sugestion","formattedAddress","push","geoCoding","where","process","env","mapsKey","estimatedTotal","geocodePoints","setSnackBar","open","result","err","changeMessage","changeMessageType","changeMessageColor","loadResellers","handleClose","handleOpen","reseller","focusOutEvent","event","timeout","setTimeout","input","document","getElementById","addEventListener","clearTimeout","removeEventListener","editRes","res","id","delMan","color","name","e","target","phone","email","position","minHeight","background","boxShadow","borderRadius","padding","top","width","zIndex","length","map","ad","i","console","log","borderBottom","display","justifyContent","fontWeight","marginRight","marginLeft","Hr","hr","Subcontainer","div","ImageContainer","DivListCategories","ResellerContainer","props","flexDirection","Item","p"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { Button } from \"../../../static/styled-components/base\";\nimport { Creators as ResellerCreators } from \"../../../ducks/resellers\";\nimport { Creators as UtilsCreators } from \"../../../ducks/utils\";\n\nimport setApi from '../../../api'\nimport { Column } from \"../../../static/styled-components/base\";\n\nimport {\n  getResellers,\n  editReseller,\n  deleteReseller\n} from \"../../../utils/reseller\";\n\nimport Message from \"../../utils/Message\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function ListResellers() {\n  const { message, messageType, messageColor } = useSelector(\n    state => state.Utils\n  );\n  const { resellers } = useSelector(state => state.Reseller);\n  const [visible, setVisible] = useState(false);\n  const [diag, setDiag] = useState(false);\n  const [resellerToEdit, setResellerToEdit] = useState({ address: {} });\n  const dispatch = useDispatch();\n  const [address, setAddress] = useState('')\n  const [listAddress, setListAddress] = useState([])\n  const [listAddressVis, setListAddressVis] = useState(false)\n\n\n  useEffect(() => {\n    async function asyncFunc() {\n      const response = await setApi().get(`http://dev.virtualearth.net/REST/v1/Autosuggest?query=${resellerToEdit.address}&maxResults=5&key=ArBcF40dX4IT5Co3SIxT7TfvEqq3VNdafH09G2lYGLmm1PvaaFwU-xHaQLjtmpDe`)\n      const fAddress = response.data.resourceSets[0].resources[0].value\n      const sugestion = []\n      for (let formattedAddress in response.data.resourceSets[0].resources[0].value) {\n        sugestion.push(fAddress[formattedAddress].address.formattedAddress)\n      }\n      setListAddress(sugestion)\n    }\n\n    asyncFunc();\n  }, [resellerToEdit.address])\n\n   async function geoCoding(where) {\n    const response = await setApi().get(`http://dev.virtualearth.net/REST/v1/Locations?addressLine=${where}&maxResults=1&key=${process.env.mapsKey}`)\n    if (response.data.resourceSets[0].estimatedTotal != 0)\n      return response.data.resourceSets[0].resources[0].geocodePoints\n    else {\n      setSnackBar({\n        open: true,\n        message: \"Não possível encontrar este endereço no mapa\",\n        result: 'error'\n      })\n      return false;\n    }\n  }\n\n\n  useEffect(() => {\n    function asyncFunc() {\n      getResellers(function(err, resellers) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage());\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n    }\n    asyncFunc();\n  }, []);\n\n  function handleClose() {\n    setDiag(false);\n    setResellerToEdit({ address: {} });\n  }\n\n  function handleOpen(reseller) {\n    setResellerToEdit(reseller);\n    setDiag(true);\n  }\n\n  const focusOutEvent = (event) => {\n      timeout = setTimeout(() => {\n        setListAddressVis(false)\n      }, 100)\n    }\n\n  useEffect(() => {\n    const input = document.getElementById('searchBox')\n    let timeout = null\n    input.addEventListener('focusout', focusOutEvent);\n\n\n    return () => {\n      clearTimeout(timeout)\n      input.removeEventListener('focusout', focusOutEvent)\n    }\n  }, [])\n\n  function editRes(res) {\n    editReseller(res.id, { ...res }, function(err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        handleClose();\n        return;\n      }\n      getResellers(function(err, resellers) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage(err));\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Editado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      handleClose();\n      setVisible(true);\n    });\n  }\n\n  function delMan(id) {\n    deleteReseller(id, function(err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        return;\n      }\n      getResellers(function(err, resellers) {\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Deletado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      setVisible(true);\n    });\n  }\n\n  return (\n    <>\n      <h3 className=\"main-title\" style={{ color: \"rgb(129, 22, 27)\" }}>\n        Lista de fabricantes\n      </h3>\n\n      <div>\n        <Dialog\n          open={diag}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Editar Revendedor</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Nome\"\n              type=\"text\"\n              value={resellerToEdit.name}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  name: e.target.value\n                })\n              }\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"phone\"\n              label=\"Telefone\"\n              type=\"text\"\n              value={resellerToEdit.phone}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  phone: e.target.value\n                })\n              }\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"email\"\n              label=\"E-mail\"\n              type=\"text\"\n              value={resellerToEdit.email}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  email: e.target.value\n                })\n              }\n              fullWidth\n            />\n            <Column style={{ position: \"relative\", minHeight: \"300px\"}}>\n            <div id='printoutPanel'></div>\n            <div id='searchBoxContainer'>\n              <TextField\n                autoFocus\n                onFocus={() => setListAddressVis(true)}\n                className=\"form-control\" \n                type='text'\n                autoComplete=\"new-password\"\n                placeholder=\"Digite o endereço\" \n                id='searchBox' \n                value={resellerToEdit.address} \n                onChange={(e) => setResellerToEdit({ ...resellerToEdit, address: e.target.value})}\n              />\n            </div>\n            {\n              listAddressVis ? \n              <Column onMouseEnter={() => setListAddressVis(true)} style={{ background: 'white', boxShadow: '1px 1px 3px grey', borderRadius: '5px', padding: '10px', position: \"absolute\", top: \"50px\", width: \"80%\", zIndex: \"9\" }}>\n                {listAddress.length > 0 ? listAddress.map((ad, i) => <Item key={i} onClick={() => {setResellerToEdit({...resellerToEdit, address: ad });console.log(ad)}} style={{ borderBottom: \"1px solid grey\"}}>{ad}</Item> ) : <Item>Nenhuma sugestão encontrada</Item>}\n              </Column> : ''\n            }   \n            </Column> \n\n           {/* <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"logradouro\"\n              label=\"logradouro\"\n              type=\"text\"\n              value={resellerToEdit.address.publicPlace}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  address: {\n                    ...resellerToEdit.address,\n                    publicPlace: e.target.value\n                  }\n                })\n              }\n              fullWidth\n            />\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"número\"\n              label=\"número\"\n              type=\"text\"\n              value={resellerToEdit.address.number}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  address: {\n                    ...resellerToEdit,\n                    number: e.target.value\n                  }\n                })\n              }\n              fullWidth\n            />\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"Bairro\"\n              label=\"Bairro\"\n              type=\"text\"\n              value={resellerToEdit.address.district}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  address: {\n                    ...resellerToEdit.address,\n                    district: e.target.value\n                  }\n                })\n              }\n              fullWidth\n            />\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"Cidade\"\n              label=\"Cidade\"\n              type=\"text\"\n              value={resellerToEdit.address.city}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  address: {\n                    ...resellerToEdit.address,\n                    city: e.target.value\n                  }\n                })\n              }\n              fullWidth\n            />\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"Estado\"\n              label=\"Estado\"\n              type=\"text\"\n              value={resellerToEdit.address.state}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  address: {\n                    ...resellerToEdit.state,\n                    state: e.target.value\n                  }\n                })\n              }\n              fullWidth\n            />\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"País\"\n              label=\"País\"\n              type=\"text\"\n              value={resellerToEdit.address.country}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  address: {\n                    ...resellerToEdit,\n                    country: e.target.value\n                  }\n                })\n              }\n              fullWidth\n            />*/}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancelar\n            </Button>\n            <Button onClick={() => editRes(resellerToEdit)} color=\"primary\">\n              Salvar\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n\n      <DivListCategories>\n        {resellers.map((reseller, id) => (\n          <ResellerContainer\n            flexDirection=\"row\"\n            justifyContent=\"space-between\"\n            style={{ borderBottom: \"1px solid lightgrey\" }}\n            key={id}\n          >\n            <ResellerContainer\n              flexDirection=\"column\"\n              style={{ display: \"flex\", justifyContent: \"column\" }}\n            >\n              <p style={{ fontWeight: \"200\" }}>Nome: {reseller.name}</p>\n              <p style={{ fontWeight: \"200\" }}>\n                Endereço: {reseller.address}\n              </p>\n            </ResellerContainer>\n            <ResellerContainer\n              flexDirection=\"column\"\n              style={{ marginRight: \"10px\", marginLeft: \"10px\" }}\n            >\n              <Button onClick={() => handleOpen(reseller)}>Editar Revendedor</Button>\n              <Button onClick={() => delMan(reseller.id)}>Apagar Revendedor</Button>\n            </ResellerContainer>\n          </ResellerContainer>\n        ))}\n      </DivListCategories>\n\n      {visible ? (\n        <Message result={messageType} color={messageColor} message={message} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n\nexport const Hr = styled.hr`\n  width: 50%;\n`;\n\nexport const Subcontainer = styled.div`\n  padding: 0 15px;\n`;\n\nexport const ImageContainer = styled.div`\n  img {\n    max-width: 220px;\n    display: block;\n    margin: 10px auto;\n  }\n`;\n\nexport const DivListCategories = styled.div`\n  max-height: 350px;\n  overflow: auto;\n  /* width */\n  ::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: rgb(129, 22, 27);\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nexport const ResellerContainer = styled.div`\n  display: flex;\n  flex-direction: ${props => props.flexDirection};\n  justify-content: ${props => props.justifyContent};\n`;\n\n\nconst Item = styled.p`\n  font-size: 1rem;\n  cursor: pointer;\n  transition: .4s;\n  :hover {\n    opacity: .9;\n    color: #81161B;\n  }\n  z-index: 9;\n  margin: 0;\n  padding: 12px 0;\n    :last-child {\n      border-bottom: none !important;\n  }`"]},"metadata":{},"sourceType":"module"}