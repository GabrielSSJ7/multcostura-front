{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Router, Link } from \"../../../../routes\";\nimport { Button, Select, Input } from \"../../../static/styled-components/base\";\nimport { getMachines, getOptions } from \"../../../utils/machines\";\nimport { Creators as MachineCreators } from \"../../../ducks/machines\";\nimport { Creators as UtilCreators } from \"../../../ducks/utils\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\nexport default function ListMachines() {\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    category: null,\n    manufacturer: null,\n    search: \"\"\n  });\n  const {\n    0: categories,\n    1: setCategories\n  } = useState([]);\n  const {\n    0: manufacturers,\n    1: setManufacturers\n  } = useState([]);\n  const {\n    machines\n  } = useSelector(state => state.Machine);\n  const dispatch = useDispatch();\n  const {\n    0: snackBar,\n    1: setSnackBar\n  } = useState({\n    result: \"success\",\n    open: false,\n    message: \"\"\n  });\n\n  function handleClose() {\n    setSnackBar(_objectSpread({}, snackBar, {\n      open: false\n    }));\n  }\n\n  useEffect(() => {\n    async function asyncFunc() {\n      getMachines(function (err, machines) {\n        if (err) {\n          setSnackBar({\n            result: \"error\",\n            open: true,\n            message: err\n          });\n          dispatch(MachineCreators.loadMachines([]));\n          return;\n        }\n\n        dispatch(MachineCreators.loadMachines(machines));\n      }, {\n        category: state.category,\n        manufacturer: state.manufacturer,\n        search: state.search\n      });\n    }\n\n    asyncFunc();\n    return () => {};\n  }, [state]);\n  useEffect(() => {\n    function asyncFunc() {\n      getMachines(function (err, machines) {\n        if (err) {\n          setSnackBar({\n            result: \"error\",\n            message: err,\n            open: true\n          });\n          return;\n        }\n\n        dispatch(MachineCreators.loadMachines(machines));\n      });\n      getOptions(function (err, data) {\n        if (err) {\n          setSnackBar({\n            result: \"error\",\n            open: true,\n            message: err\n          });\n          return;\n        }\n\n        setCategories(data.categories.data);\n        setManufacturers(data.manufacturers.data);\n      });\n    }\n\n    asyncFunc();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Snackbar, {\n    open: snackBar.open,\n    autoHideDuration: 3000,\n    onClose: handleClose\n  }, __jsx(Alert, {\n    severity: snackBar.result\n  }, snackBar.message)), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"block\",\n      margin: \"auto\"\n    }\n  }, __jsx(Input, {\n    value: state.search,\n    type: \"text\",\n    name: \"search\",\n    id: \"search\",\n    placeholder: \"Pesquise pelo nome\",\n    onChange: e => setState(_objectSpread({}, state, {\n      search: e.target.value\n    }))\n  }), __jsx(Select, {\n    value: state.category,\n    onChange: e => setState(_objectSpread({}, state, {\n      category: e.target.value\n    }))\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Escolha uma categoria\"), categories.map(category => __jsx(\"option\", {\n    selected: state.category == category.id ? category.id : false,\n    value: category.id\n  }, category.name))), __jsx(Select, {\n    value: state.manufacturer,\n    onChange: e => setState(_objectSpread({}, state, {\n      manufacturer: e.target.value\n    }))\n  }, __jsx(\"option\", {\n    value: \"\"\n  }, \"Escolha um fabricante\"), manufacturers.map(manu => __jsx(\"option\", {\n    selected: state.manufacturer == manu.id ? manu.id : false,\n    value: manu.id\n  }, manu.name)))), __jsx(Container, null, machines.map(machine => __jsx(Link, {\n    href: `/admin/machines/machine?id=${machine.id.toString()}`\n  }, __jsx(CardContainer, null, __jsx(\"img\", {\n    src: machine.images[0]\n  }), __jsx(\"div\", null, __jsx(Title, null, \" \", machine.name, \" \"), __jsx(Subtitle, null, machine.description)))))));\n\n  function navigateToMachine(id) {\n    Router.push(`/admin/machines/machine?id=${id}`);\n  }\n}\nconst Container = styled.div.withConfig({\n  displayName: \"ListMachines__Container\",\n  componentId: \"um70bv-0\"\n})([\"display:flex;flex-direction:row;width:100%;flex-wrap:wrap;justify-content:center;\"]);\nconst CardContainer = styled.div.withConfig({\n  displayName: \"ListMachines__CardContainer\",\n  componentId: \"um70bv-1\"\n})([\"min-width:250px;max-width:250px;max-height:300px;overflow:hidden;cursor:pointer;display:flex;flex-direction:column;flex-wrap:no-wrap;margin-bottom:10px;margin-right:15px;img{width:100%;max-width:230px;display:block;margin:auto}padding:15px;:hover{box-shadow:0 14px 28px rgba(0,0,0,0.25),0 10px 10px rgba(0,0,0,0.22);}box-shadow:0 3px 6px rgba(0,0,0,0.16),0 3px 6px rgba(0,0,0,0.23);}\"]);\nconst Title = styled.p.withConfig({\n  displayName: \"ListMachines__Title\",\n  componentId: \"um70bv-2\"\n})([\"font-size:22px;margin:0 15px;\"]);\nconst Subtitle = styled.p.withConfig({\n  displayName: \"ListMachines__Subtitle\",\n  componentId: \"um70bv-3\"\n})([\"color:lightgrey;margin:0 15px;\"]);\nconst Description = styled.p.withConfig({\n  displayName: \"ListMachines__Description\",\n  componentId: \"um70bv-4\"\n})([\"color:grey;margin:15px 15px;\"]);","map":{"version":3,"sources":["C:/Users/Gluz/Projects/web/multcostura/multcostura-web/src/components/admin/machines/ListMachines.jsx"],"names":["React","useState","useEffect","styled","useSelector","useDispatch","Router","Link","Button","Select","Input","getMachines","getOptions","Creators","MachineCreators","UtilCreators","Snackbar","Alert","ListMachines","state","setState","category","manufacturer","search","categories","setCategories","manufacturers","setManufacturers","machines","Machine","dispatch","snackBar","setSnackBar","result","open","message","handleClose","asyncFunc","err","loadMachines","data","width","display","margin","e","target","value","map","id","name","manu","machine","toString","images","description","navigateToMachine","push","Container","div","CardContainer","Title","p","Subtitle","Description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Router, Link } from \"../../../../routes\";\nimport { Button, Select, Input } from \"../../../static/styled-components/base\";\nimport { getMachines, getOptions } from \"../../../utils/machines\";\nimport { Creators as MachineCreators } from \"../../../ducks/machines\";\nimport { Creators as UtilCreators } from \"../../../ducks/utils\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport default function ListMachines() {\n  const [state, setState] = useState({\n    category: null,\n    manufacturer: null,\n    search: \"\"\n  });\n  const [categories, setCategories] = useState([]);\n  const [manufacturers, setManufacturers] = useState([]);\n  const { machines } = useSelector(state => state.Machine);\n  const dispatch = useDispatch();\n\n  const [snackBar, setSnackBar] = useState({\n    result: \"success\",\n    open: false,\n    message: \"\"\n  });\n  function handleClose() {\n    setSnackBar({\n      ...snackBar,\n      open: false\n    });\n  }\n\n  useEffect(() => {\n    async function asyncFunc() {\n      getMachines(\n        function(err, machines) {\n          if (err) {\n            setSnackBar({\n              result: \"error\",\n              open: true,\n              message: err\n            });\n            dispatch(MachineCreators.loadMachines([]));\n            return;\n          }\n          dispatch(MachineCreators.loadMachines(machines));\n        },\n        {\n          category: state.category,\n          manufacturer: state.manufacturer,\n          search: state.search\n        }\n      );\n    }\n    asyncFunc();\n    return () => {};\n  }, [state]);\n\n  useEffect(() => {\n    function asyncFunc() {\n      getMachines(function(err, machines) {\n        if (err) {\n          setSnackBar({\n            result: \"error\",\n            message: err,\n            open: true\n          });\n          return;\n        }\n        dispatch(MachineCreators.loadMachines(machines));\n      });\n      getOptions(function(err, data) {\n        if (err) {\n          setSnackBar({\n            result: \"error\",\n            open: true,\n            message: err\n          });\n          return;\n        }\n        setCategories(data.categories.data);\n        setManufacturers(data.manufacturers.data);\n      });\n    }\n    asyncFunc();\n  }, []);\n\n  return (\n    <>\n      <Snackbar\n        open={snackBar.open}\n        autoHideDuration={3000}\n        onClose={handleClose}\n      >\n        <Alert severity={snackBar.result}>{snackBar.message}</Alert>\n      </Snackbar>\n\n      <div style={{ width: \"100%\", display: \"block\", margin: \"auto\" }}>\n        <Input\n          value={state.search}\n          type=\"text\"\n          name=\"search\"\n          id=\"search\"\n          placeholder=\"Pesquise pelo nome\"\n          onChange={e => setState({ ...state, search: e.target.value })}\n        />\n        <Select\n          value={state.category}\n          onChange={e => setState({ ...state, category: e.target.value })}\n        >\n          <option value=\"\">Escolha uma categoria</option>\n          {categories.map(category => (\n            <option\n              selected={state.category == category.id ? category.id : false}\n              value={category.id}\n            >\n              {category.name}\n            </option>\n          ))}\n        </Select>\n\n        <Select\n          value={state.manufacturer}\n          onChange={e => setState({ ...state, manufacturer: e.target.value })}\n        >\n          <option value=\"\">Escolha um fabricante</option>\n          {manufacturers.map(manu => (\n            <option\n              selected={state.manufacturer == manu.id ? manu.id : false}\n              value={manu.id}\n            >\n              {manu.name}\n            </option>\n          ))}\n        </Select>\n      </div>\n\n      <Container>\n        {machines.map(machine => (\n          <Link\n            href={`/admin/machines/machine?id=${machine.id.toString()}`}\n          >\n            <CardContainer>\n              <img src={machine.images[0]} />\n              <div>\n                <Title> {machine.name} </Title>\n                <Subtitle>{machine.description}</Subtitle>\n              </div>\n              {/* <Description>{machine.mainFeatures}</Description> */}\n            </CardContainer>\n          </Link>\n        ))}\n      </Container>\n    </>\n  );\n\n  function navigateToMachine(id) {\n    Router.push(`/admin/machines/machine?id=${id}`);\n  }\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst CardContainer = styled.div`\n\tmin-width: 250px;\n\tmax-width: 250px;\n\tmax-height: 300px;\n\toverflow: hidden;\n\tcursor: pointer;\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-wrap: no-wrap;\n\tmargin-bottom: 10px;\n\tmargin-right: 15px;\n\timg {\n\t\twidth: 100%;\n\t\tmax-width: 230px;\n\t\tdisplay: block;\n\t\tmargin: auto\n\t}\n\tpadding: 15px;\n\t:hover {\n\t\tbox-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\n\t}\n\tbox-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n\n}\n`;\nconst Title = styled.p`\n  font-size: 22px;\n  margin: 0 15px;\n`;\nconst Subtitle = styled.p`\n  color: lightgrey;\n  margin: 0 15px;\n`;\nconst Description = styled.p`\n  color: grey;\n  margin: 15px 15px;\n`;\n"]},"metadata":{},"sourceType":"module"}