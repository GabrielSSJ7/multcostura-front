{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _createReducer;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createActions, createReducer } from \"reduxsauce\";\n\nvar _createActions = createActions({\n  loadMachines: [\"machines\"],\n  loadMachinesForFilters: [\"machines\"],\n  loadFilters: [\"filters\"]\n}),\n    Types = _createActions.Types,\n    Creators = _createActions.Creators;\n\nexport { Types, Creators };\nvar INITIAL_STATE = {\n  machines: [],\n  machinesForFilters: [],\n  filters: {}\n};\n\nvar loadMachines = function loadMachines() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return _objectSpread({}, state, {\n    machines: action.machines\n  });\n};\n\nvar loadMachinesForFilters = function loadMachinesForFilters() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return _objectSpread({}, state, {\n    machinesForFilters: action.machines\n  });\n};\n\nvar loadFilters = function loadFilters() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return _objectSpread({}, state, {\n    filters: action.filters\n  });\n};\n\nexport default createReducer(INITIAL_STATE, (_createReducer = {}, _defineProperty(_createReducer, Types.LOAD_MACHINES, loadMachines), _defineProperty(_createReducer, Types.LOAD_MACHINES_FOR_FILTERS, loadMachinesForFilters), _defineProperty(_createReducer, Types.LOAD_FILTERS, loadFilters), _createReducer));","map":{"version":3,"sources":["C:/Users/Gluz/Projects/web/multcostura/multcostura-web/src/ducks/machines.js"],"names":["createActions","createReducer","loadMachines","loadMachinesForFilters","loadFilters","Types","Creators","INITIAL_STATE","machines","machinesForFilters","filters","state","action","LOAD_MACHINES","LOAD_MACHINES_FOR_FILTERS","LOAD_FILTERS"],"mappings":";;;;;;;;AAAA,SAASA,aAAT,EAAwBC,aAAxB,QAA6C,YAA7C;;qBAEmCD,aAAa,CAAC;AAC/CE,EAAAA,YAAY,EAAE,CAAC,UAAD,CADiC;AAE/CC,EAAAA,sBAAsB,EAAE,CAAC,UAAD,CAFuB;AAG/CC,EAAAA,WAAW,EAAE,CAAC,SAAD;AAHkC,CAAD,C;IAAjCC,K,kBAAAA,K;IAAOC,Q,kBAAAA,Q;;;AAKtB,IAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,EADU;AAEpBC,EAAAA,kBAAkB,EAAE,EAFA;AAGpBC,EAAAA,OAAO,EAAE;AAHW,CAAtB;;AAKA,IAAMR,YAAY,GAAG,SAAfA,YAAe;AAAA,MAACS,KAAD,uEAASJ,aAAT;AAAA,MAAwBK,MAAxB;AAAA,2BAChBD,KADgB;AAEnBH,IAAAA,QAAQ,EAAEI,MAAM,CAACJ;AAFE;AAAA,CAArB;;AAKA,IAAML,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,MAACQ,KAAD,uEAASJ,aAAT;AAAA,MAAwBK,MAAxB;AAAA,2BAC1BD,KAD0B;AAE7BF,IAAAA,kBAAkB,EAAEG,MAAM,CAACJ;AAFE;AAAA,CAA/B;;AAMA,IAAMJ,WAAW,GAAG,SAAdA,WAAc;AAAA,MAACO,KAAD,uEAASJ,aAAT;AAAA,MAAwBK,MAAxB;AAAA,2BACfD,KADe;AAElBD,IAAAA,OAAO,EAAEE,MAAM,CAACF;AAFE;AAAA,CAApB;;AAMA,eAAeT,aAAa,CAACM,aAAD,wDACzBF,KAAK,CAACQ,aADmB,EACHX,YADG,mCAEzBG,KAAK,CAACS,yBAFmB,EAESX,sBAFT,mCAGzBE,KAAK,CAACU,YAHmB,EAGJX,WAHI,mBAA5B","sourcesContent":["import { createActions, createReducer } from \"reduxsauce\";\n\nexport const { Types, Creators } = createActions({\n  loadMachines: [\"machines\"],\n  loadMachinesForFilters: [\"machines\"],\n  loadFilters: [\"filters\"]\n});\nconst INITIAL_STATE = {\n  machines: [],\n  machinesForFilters: [],\n  filters: {}\n};\nconst loadMachines = (state = INITIAL_STATE, action) => ({\n  ...state,\n  machines: action.machines\n});\n\nconst loadMachinesForFilters = (state = INITIAL_STATE, action) => ({\n  ...state,\n  machinesForFilters: action.machines\n});\n\n\nconst loadFilters = (state = INITIAL_STATE, action) => ({\n  ...state,\n  filters: action.filters\n});\n\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.LOAD_MACHINES]: loadMachines,\n  [Types.LOAD_MACHINES_FOR_FILTERS]: loadMachinesForFilters,\n  [Types.LOAD_FILTERS]: loadFilters\n});\n"]},"metadata":{},"sourceType":"module"}