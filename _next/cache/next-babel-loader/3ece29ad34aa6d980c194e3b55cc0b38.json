{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useRouter } from 'next/router';\nimport setApi from '../../api';\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Creators } from \"../../ducks/machines\";\nimport { Row, Column } from '../../static/styled-components/base';\nimport loading from '../../static/images/loading.gif';\nexport default function ListProd({\n  id,\n  type,\n  search\n}) {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    machines,\n    machinesForFilters,\n    filters\n  } = useSelector(state => state.Machine);\n  const {\n    0: prods,\n    1: setProds\n  } = useState([]);\n  const {\n    0: indexPag,\n    1: setIndexPag\n  } = useState(0);\n  const {\n    0: listProdsPag,\n    1: setListProdsPag\n  } = useState([]);\n  const {\n    0: visLoading,\n    1: setVisLoading\n  } = useState(false);\n\n  async function f() {\n    if (search) {\n      console.log(\"search\", search);\n      let machines = {\n        data: []\n      };\n      let tools = {\n        data: []\n      };\n\n      try {\n        machines = await setApi().get(`/machine?search=${search}&filters=${JSON.stringify(filters)}`); //setListProdsPag(groupBy(machines.data, 10))\n\n        listP = machines.data;\n      } catch (e) {}\n\n      try {\n        tools = await setApi().get(`/tools?search=${search}`);\n        console.log(\"tools >\", tools);\n        listP = tools.data;\n      } catch (e) {}\n\n      setProds(machines.data.concat(tools.data));\n      dispatch(Creators.loadMachines(machines.data.concat(tools.data)));\n      dispatch(Creators.loadMachinesForFilters(machines.data.concat(tools.data)));\n      setListProdsPag(groupBy(machines.data.concat(tools.data), 10));\n      setVisLoading(false);\n    } else {\n      //console.log(type)\n      if (type != \"tools\") {\n        setApi().get(`machine?${type}=${id}&filters=${JSON.stringify(filters)}`).then(res => {\n          dispatch(Creators.loadMachines(res.data));\n          dispatch(Creators.loadMachinesForFilters(res.data));\n          setProds(res.data);\n          setListProdsPag(groupBy(res.data, 10));\n          setVisLoading(false);\n        }).catch(err => {\n          setVisLoading(false);\n        });\n        return;\n      }\n\n      setApi().get('/tools').then(response => {\n        console.log(response.data);\n        dispatch(Creators.loadMachines(response.data)); //dispatch(Creators.loadMachinesForFilters(response.data))\n\n        setProds(response.data);\n        setListProdsPag(groupBy(response.data, 10)); //setListProdsPag(groupBy(response.data, 10))\n\n        setVisLoading(false);\n      }).catch(err => {\n        setVisLoading(false);\n      });\n    }\n  }\n\n  useEffect(() => {\n    setVisLoading(true);\n    f();\n  }, [id, type]); // useEffect(() => { \n  // \tsetListProdsPag(groupBy(machines, 10))\n  // }, [machines])\n\n  useEffect(() => {\n    if (type != \"tools\" && !search) {\n      setVisLoading(true);\n      setApi().get(`machine?${type}=${id}&filters=${JSON.stringify(filters)}`).then(res => {\n        dispatch(Creators.loadMachines(res.data)); //dispatch(Creators.loadMachinesForFilters(res.data))\n\n        setProds(res.data);\n        setListProdsPag(groupBy(res.data, 10));\n        setVisLoading(false);\n      }).catch(err => {\n        dispatch(Creators.loadMachines([]));\n        setProds([]);\n        setListProdsPag(groupBy([], 10));\n        setVisLoading(false);\n      });\n      return;\n    }\n  }, [filters]);\n\n  function groupBy(arr, n) {\n    var group = [];\n\n    for (var i = 0, end = arr.length / n; i < end; ++i) group.push(arr.slice(i * n, (i + 1) * n));\n\n    return group;\n  }\n\n  return __jsx(Column, {\n    style: {\n      width: \"80%\",\n      margin: \"0 auto\",\n      flexWrap: 'wrap'\n    }\n  }, visLoading ? __jsx(\"img\", {\n    src: loading,\n    style: {\n      width: \"32px\",\n      margin: \"auto\",\n      display: \"block\"\n    }\n  }) : listProdsPag.length > 0 ? __jsx(Column, null, __jsx(\"h1\", null, search ? 'Resultado da sua busca' : ''), __jsx(Row, {\n    style: {\n      flexWrap: 'wrap'\n    }\n  }, listProdsPag[indexPag].map(prod => __jsx(Column, {\n    key: prod.id,\n    style: {\n      width: \"32%\",\n      cursor: \"pointer\",\n      marginRight: \"1.3%\",\n      minWidth: \"280px\"\n    },\n    onClick: () => router.push({\n      pathname: \"/produto\",\n      query: {\n        id: prod.id\n      }\n    }),\n    ait: \"center\"\n  }, __jsx(Img, {\n    src: prod.images.length > 0 ? prod.images[0] : '',\n    width: \"100%\",\n    height: \"280px\"\n  }), __jsx(Name, null, prod.name)))), __jsx(Row, {\n    jc: \"center\",\n    ait: \"center\"\n  }, __jsx(PagItem, {\n    onClick: () => {\n      indexPag < 0 ? '' : setIndexPag(indexPag - 1);\n    }\n  }, '<'), listProdsPag.map((a, i) => __jsx(PagItem, {\n    key: i,\n    current: indexPag == i,\n    onClick: () => setIndexPag(i)\n  }, i)), __jsx(PagItem, {\n    onClick: () => {\n      listProdsPag.length == indexPag + 1 ? '' : setIndexPag(indexPag + 1);\n    }\n  }, '>'))) : __jsx(Name, {\n    style: {\n      margin: \"auto\"\n    }\n  }, \"Nenhuma m\\xE1quina encontrada\"));\n}\nconst Name = styled.p.withConfig({\n  displayName: \"ListProds__Name\",\n  componentId: \"sc-10dqkm5-0\"\n})([\"text-align:center;font-family:Segoe UI;letter-spacing:0;color:#000000;opacity:1;\"]);\nconst PagItem = styled.p.withConfig({\n  displayName: \"ListProds__PagItem\",\n  componentId: \"sc-10dqkm5-1\"\n})([\"cursor:pointer;padding:5px;transition:.2s;color:\", \";:hover{opacity:.8;}\"], props => props.current ? 'red' : '#5B5B5B');\nconst Img = styled.div.withConfig({\n  displayName: \"ListProds__Img\",\n  componentId: \"sc-10dqkm5-2\"\n})([\"background-image:url('\", \"');background-size:80%;background-position:center;background-repeat:no-repeat;width:\", \";height:\", \";transform:translateX(\", \"px);transition:transform 0.2s ease-in-out;position:relative;:hover{transform:scale(1.1);-webkit-transform:scale(1.1);}\"], props => props.src, props => props.width, props => props.height, props => props.translate);","map":null,"metadata":{},"sourceType":"module"}