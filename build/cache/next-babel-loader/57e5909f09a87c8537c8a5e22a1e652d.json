{"ast":null,"code":"var _jsxFileName = \"/home/ti/Projects/WebProjects/multcostura/web-multcostura/src/components/utils/Upload.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { Creators } from \"../../ducks/upload\";\nconst reactCtx = React.createContext({});\nexport default function Upload({\n  onRef,\n  imageURL,\n  labelInputFile\n}) {\n  const ctx = useContext(reactCtx);\n  const dispatch = useDispatch();\n  const {\n    file,\n    key\n  } = useSelector(state => state.Upload);\n  useEffect(() => {\n    if (onRef) onRef(ctx);\n  }, []);\n\n  function handleChange(event) {\n    const file = event.target.files[0];\n\n    if (file) {\n      dispatch(Creators.changeFile(file));\n    } else {\n      dispatch(Creators.changeFile(null));\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"input\", {\n    type: \"file\",\n    style: {\n      width: \"0.1px\",\n      height: \"0.1px\",\n      opacity: 0,\n      overflow: \"hidden\",\n      position: \"absolute\",\n      zIndex: -1\n    },\n    name: \"icon\",\n    id: \"icon\",\n    onChange: handleChange,\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), __jsx(\"label\", {\n    htmlFor: \"icon\",\n    style: {\n      border: \"1px dotted lightgrey\",\n      padding: \"5px 10px\",\n      cursor: \"pointer\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    style: {\n      display: file ? \"none\" : imageURL ? \"none\" : \"flex\",\n      flexDirection: \"column \"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, __jsx(FontAwesomeIcon, {\n    icon: faArrowUp,\n    style: {\n      width: \"32px\",\n      margin: \"auto\",\n      display: \"block\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), \" \", __jsx(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), __jsx(\"hr\", {\n    style: {\n      width: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), labelInputFile), file ? __jsx(\"img\", {\n    src: file ? URL.createObjectURL(file) : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }) : __jsx(\"img\", {\n    src: imageURL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/ti/Projects/WebProjects/multcostura/web-multcostura/src/components/utils/Upload.jsx"],"names":["React","useState","useEffect","useContext","useSelector","useDispatch","FontAwesomeIcon","faArrowUp","Creators","reactCtx","createContext","Upload","onRef","imageURL","labelInputFile","ctx","dispatch","file","key","state","handleChange","event","target","files","changeFile","width","height","opacity","overflow","position","zIndex","border","padding","cursor","display","flexDirection","margin","URL","createObjectURL"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { Creators } from \"../../ducks/upload\";\n\nconst reactCtx = React.createContext({});\n\nexport default function Upload({ onRef, imageURL, labelInputFile }) {\n  const ctx = useContext(reactCtx);\n  const dispatch = useDispatch();\n  const { file, key } = useSelector(state => state.Upload);\n  useEffect(() => {\n    if (onRef) onRef(ctx);\n  }, []);\n\n  function handleChange(event) {\n    const file = event.target.files[0];\n    if (file) {\n      dispatch(Creators.changeFile(file));\n    } else {\n      dispatch(Creators.changeFile(null));\n    }\n  }\n\n  return (\n    <>\n      <input\n        type=\"file\"\n        style={{\n          width: \"0.1px\",\n          height: \"0.1px\",\n          opacity: 0,\n          overflow: \"hidden\",\n          position: \"absolute\",\n          zIndex: -1\n        }}\n        name=\"icon\"\n        id=\"icon\"\n        onChange={handleChange}\n        key={key}\n      />\n      <label\n        htmlFor=\"icon\"\n        style={{\n          border: \"1px dotted lightgrey\",\n          padding: \"5px 10px\",\n          cursor: \"pointer\"\n        }}\n      >\n        <span\n          style={{\n            display: file ? \"none\" : imageURL ? \"none\" : \"flex\",\n            flexDirection: \"column \"\n          }}\n        >\n          <FontAwesomeIcon\n            icon={faArrowUp}\n            style={{ width: \"32px\", margin: \"auto\", display: \"block\" }}\n          />{\" \"}\n          <br />\n          <hr style={{ width: \"100%\" }} />\n          {labelInputFile}\n        </span>\n        {file ? (\n          <img src={file ? URL.createObjectURL(file) : \"\"} />\n        ) : (\n          <img src={imageURL} />\n        )}\n      </label>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}