{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createActions, createReducer } from \"reduxsauce\";\nexport const {\n  Types,\n  Creators\n} = createActions({\n  changeName: [\"name\"],\n  changeDescription: [\"description\"],\n  loadCategories: [\"categories\"]\n});\nconst INITIAL_STATE = {\n  name: \"\",\n  description: \"\",\n  categories: []\n};\n\nconst changeName = (state = INITIAL_STATE, action) => _objectSpread({}, state, {\n  name: action.name\n});\n\nconst changeDescription = (state = INITIAL_STATE, action) => _objectSpread({}, state, {\n  description: action.description\n});\n\nconst loadCategories = (state = INITIAL_STATE, action) => _objectSpread({}, state, {\n  categories: action.categories\n});\n\nexport default createReducer(INITIAL_STATE, {\n  [Types.CHANGE_NAME]: changeName,\n  [Types.CHANGE_DESCRIPTION]: changeDescription,\n  [Types.LOAD_CATEGORIES]: loadCategories\n});","map":{"version":3,"sources":["/home/ti/Projects/WebProjects/multcostura/web-multcostura/src/ducks/categories.js"],"names":["createActions","createReducer","Types","Creators","changeName","changeDescription","loadCategories","INITIAL_STATE","name","description","categories","state","action","CHANGE_NAME","CHANGE_DESCRIPTION","LOAD_CATEGORIES"],"mappings":";;;;;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,aAAxB,QAA6C,YAA7C;AAEA,OAAO,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAsBH,aAAa,CAAC;AAC/CI,EAAAA,UAAU,EAAE,CAAC,MAAD,CADmC;AAE/CC,EAAAA,iBAAiB,EAAE,CAAC,aAAD,CAF4B;AAG/CC,EAAAA,cAAc,EAAE,CAAC,YAAD;AAH+B,CAAD,CAAzC;AAKP,MAAMC,aAAa,GAAG;AACpBC,EAAAA,IAAI,EAAE,EADc;AAEpBC,EAAAA,WAAW,EAAE,EAFO;AAGpBC,EAAAA,UAAU,EAAE;AAHQ,CAAtB;;AAKA,MAAMN,UAAU,GAAG,CAACO,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,uBACdD,KADc;AAEjBH,EAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFI,EAAnB;;AAKA,MAAMH,iBAAiB,GAAG,CAACM,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,uBACrBD,KADqB;AAExBF,EAAAA,WAAW,EAAEG,MAAM,CAACH;AAFI,EAA1B;;AAKA,MAAMH,cAAc,GAAG,CAACK,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,uBAClBD,KADkB;AAErBD,EAAAA,UAAU,EAAEE,MAAM,CAACF;AAFE,EAAvB;;AAIA,eAAeT,aAAa,CAACM,aAAD,EAAgB;AAC1C,GAACL,KAAK,CAACW,WAAP,GAAqBT,UADqB;AAE1C,GAACF,KAAK,CAACY,kBAAP,GAA4BT,iBAFc;AAG1C,GAACH,KAAK,CAACa,eAAP,GAAyBT;AAHiB,CAAhB,CAA5B","sourcesContent":["import { createActions, createReducer } from \"reduxsauce\";\n\nexport const { Types, Creators } = createActions({\n  changeName: [\"name\"],\n  changeDescription: [\"description\"],\n  loadCategories: [\"categories\"]\n});\nconst INITIAL_STATE = {\n  name: \"\",\n  description: \"\",\n  categories: []\n};\nconst changeName = (state = INITIAL_STATE, action) => ({\n  ...state,\n  name: action.name\n});\n\nconst changeDescription = (state = INITIAL_STATE, action) => ({\n  ...state,\n  description: action.description\n});\n\nconst loadCategories = (state = INITIAL_STATE, action) => ({\n  ...state,\n  categories: action.categories\n});\nexport default createReducer(INITIAL_STATE, {\n  [Types.CHANGE_NAME]: changeName,\n  [Types.CHANGE_DESCRIPTION]: changeDescription,\n  [Types.LOAD_CATEGORIES]: loadCategories\n});\n"]},"metadata":{},"sourceType":"module"}