{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Button } from \"../../../static/styled-components/base\";\nimport { Creators as ResellerCreators } from \"../../../ducks/resellers\";\nimport { Creators as UtilsCreators } from \"../../../ducks/utils\";\nimport { getResellers, editReseller, deleteReseller } from \"../../../utils/reseller\";\nimport Message from \"../../utils/Message\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nexport default function ListResellers() {\n  const {\n    message,\n    messageType,\n    messageColor\n  } = useSelector(state => state.Utils);\n  const {\n    resellers\n  } = useSelector(state => state.Reseller);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: diag,\n    1: setDiag\n  } = useState(false);\n  const {\n    0: resellerToEdit,\n    1: setResellerToEdit\n  } = useState({\n    address: {}\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    function asyncFunc() {\n      getResellers(function (err, resellers) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage());\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n    }\n\n    asyncFunc();\n  }, []);\n\n  function handleClose() {\n    setDiag(false);\n    setResellerToEdit({\n      address: {}\n    });\n  }\n\n  function handleOpen(reseller) {\n    setResellerToEdit(reseller);\n    setDiag(true);\n  }\n\n  function editRes(res) {\n    editReseller(res.id, _objectSpread({}, res), function (err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        handleClose();\n        return;\n      }\n\n      getResellers(function (err, resellers) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage(err));\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Editado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      handleClose();\n      setVisible(true);\n    });\n  }\n\n  function delMan(id) {\n    deleteReseller(id, function (err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        return;\n      }\n\n      getResellers(function (err, resellers) {\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Deletado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      setVisible(true);\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Lista de fabricantes\"), __jsx(\"div\", null, __jsx(Dialog, {\n    open: diag,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, \"Editar categoria\"), __jsx(DialogContent, null, __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Nome\",\n    type: \"text\",\n    value: resellerToEdit.name,\n    onChange: e => setResellerToEdit(_objectSpread({}, resellerToEdit, {\n      name: e.target.value\n    })),\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"phone\",\n    label: \"Telefone\",\n    type: \"text\",\n    value: resellerToEdit.phone,\n    onChange: e => setResellerToEdit(_objectSpread({}, resellerToEdit, {\n      phone: e.target.value\n    })),\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"email\",\n    label: \"E-mail\",\n    type: \"text\",\n    value: resellerToEdit.email,\n    onChange: e => setResellerToEdit(_objectSpread({}, resellerToEdit, {\n      email: e.target.value\n    })),\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"logradouro\",\n    label: \"logradouro\",\n    type: \"text\",\n    value: resellerToEdit.address.publicPlace,\n    onChange: e => setResellerToEdit(_objectSpread({}, resellerToEdit, {\n      publicPlace: e.target.value\n    })),\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"n\\xFAmero\",\n    label: \"n\\xFAmero\",\n    type: \"text\",\n    value: resellerToEdit.address.number,\n    onChange: e => setResellerToEdit(_objectSpread({}, resellerToEdit, {\n      number: e.target.value\n    })),\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"Bairro\",\n    label: \"Bairro\",\n    type: \"text\",\n    value: resellerToEdit.address.district,\n    onChange: e => setResellerToEdit(_objectSpread({}, resellerToEdit, {\n      district: e.target.value\n    })),\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"Cidade\",\n    label: \"Cidade\",\n    type: \"text\",\n    value: resellerToEdit.address.city,\n    onChange: e => setResellerToEdit(_objectSpread({}, resellerToEdit, {\n      city: e.target.value\n    })),\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"Estado\",\n    label: \"Estado\",\n    type: \"text\",\n    value: resellerToEdit.address.state,\n    onChange: e => setResellerToEdit(_objectSpread({}, resellerToEdit, {\n      state: e.target.value\n    })),\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"Pa\\xEDs\",\n    label: \"Pa\\xEDs\",\n    type: \"text\",\n    value: resellerToEdit.address.country,\n    onChange: e => setResellerToEdit(_objectSpread({}, resellerToEdit, {\n      country: e.target.value\n    })),\n    fullWidth: true\n  })), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Cancelar\"), __jsx(Button, {\n    onClick: () => editRes(resellerToEdit),\n    color: \"primary\"\n  }, \"Salvar\")))), __jsx(DivListCategories, null, resellers.map((reseller, id) => __jsx(ResellerContainer, {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    style: {\n      borderBottom: \"1px solid lightgrey\"\n    },\n    key: id\n  }, __jsx(ResellerContainer, {\n    flexDirection: \"column\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"column\"\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontWeight: \"200\"\n    }\n  }, \"Nome: \", reseller.name), __jsx(\"p\", {\n    style: {\n      fontWeight: \"200\"\n    }\n  }, \"Descri\\xE7\\xE3o: \", reseller.description), __jsx(\"p\", null, \"Logo:\", __jsx(\"span\", {\n    style: {\n      marginLeft: \"10px\"\n    }\n  }, __jsx(\"img\", {\n    src: reseller.logo,\n    style: {\n      width: \"120px\"\n    }\n  })))), __jsx(ResellerContainer, {\n    flexDirection: \"column\",\n    style: {\n      marginRight: \"10px\",\n      marginLeft: \"10px\"\n    }\n  }, __jsx(Button, {\n    onClick: () => handleOpen(reseller)\n  }, \"Editar\"), __jsx(Button, {\n    onClick: () => delMan(reseller.id)\n  }, \"Apagar\"))))), visible ? __jsx(Message, {\n    result: messageType,\n    color: messageColor,\n    message: message\n  }) : \"\");\n}\nexport const Hr = styled.hr.withConfig({\n  displayName: \"ListResellers__Hr\",\n  componentId: \"xqh3vc-0\"\n})([\"width:50%;\"]);\nexport const Subcontainer = styled.div.withConfig({\n  displayName: \"ListResellers__Subcontainer\",\n  componentId: \"xqh3vc-1\"\n})([\"padding:0 15px;\"]);\nexport const ImageContainer = styled.div.withConfig({\n  displayName: \"ListResellers__ImageContainer\",\n  componentId: \"xqh3vc-2\"\n})([\"img{max-width:220px;display:block;margin:10px auto;}\"]);\nexport const DivListCategories = styled.div.withConfig({\n  displayName: \"ListResellers__DivListCategories\",\n  componentId: \"xqh3vc-3\"\n})([\"max-height:550px;overflow:auto;::-webkit-scrollbar{width:10px;}::-webkit-scrollbar-track{background:#f1f1f1;}::-webkit-scrollbar-thumb{background:rgb(129,22,27);}::-webkit-scrollbar-thumb:hover{background:#555;}\"]);\nexport const ResellerContainer = styled.div.withConfig({\n  displayName: \"ListResellers__ResellerContainer\",\n  componentId: \"xqh3vc-4\"\n})([\"display:flex;flex-direction:\", \";justify-content:\", \";\"], props => props.flexDirection, props => props.justifyContent);","map":{"version":3,"sources":["/home/ti/Projects/WebProjects/multcostura/web-multcostura/src/components/admin/resellers/ListResellers.jsx"],"names":["React","useState","useEffect","useContext","styled","useSelector","useDispatch","Button","Creators","ResellerCreators","UtilsCreators","getResellers","editReseller","deleteReseller","Message","TextField","Dialog","DialogActions","DialogContent","DialogTitle","ListResellers","message","messageType","messageColor","state","Utils","resellers","Reseller","visible","setVisible","diag","setDiag","resellerToEdit","setResellerToEdit","address","dispatch","asyncFunc","err","changeMessage","changeMessageType","changeMessageColor","loadResellers","handleClose","handleOpen","reseller","editRes","res","id","data","delMan","color","name","e","target","value","phone","email","publicPlace","number","district","city","country","map","borderBottom","display","justifyContent","fontWeight","description","marginLeft","logo","width","marginRight","Hr","hr","Subcontainer","div","ImageContainer","DivListCategories","ResellerContainer","props","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { Button } from \"../../../static/styled-components/base\";\nimport { Creators as ResellerCreators } from \"../../../ducks/resellers\";\nimport { Creators as UtilsCreators } from \"../../../ducks/utils\";\n\nimport { getResellers, editReseller, deleteReseller } from \"../../../utils/reseller\";\n\nimport Message from \"../../utils/Message\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function ListResellers() {\n  const { message, messageType, messageColor } = useSelector(\n    state => state.Utils\n  );\n  const { resellers } = useSelector(state => state.Reseller);\n  const [visible, setVisible] = useState(false);\n  const [diag, setDiag] = useState(false);\n  const [resellerToEdit, setResellerToEdit] = useState({address: {}});\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    function asyncFunc() {\n      getResellers(function(err, resellers) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage());\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n    }\n    asyncFunc();\n  }, []);\n\n  function handleClose() {\n    setDiag(false);\n    setResellerToEdit({ address: {}});\n  }\n\n  function handleOpen(reseller) {\n    setResellerToEdit(reseller);\n    setDiag(true);\n  }\n\n  function editRes(res) {\n    editReseller(res.id, { ...res }, function(err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        handleClose();\n        return;\n      }\n      getResellers(function(err, resellers) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage(err));\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Editado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      handleClose();\n      setVisible(true);\n    });\n  }\n\n  function delMan(id) {\n    deleteReseller(id, function(err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        return;\n      }\n      getResellers(function(err, resellers) {\n        dispatch(ResellerCreators.loadResellers(resellers));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Deletado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      setVisible(true);\n    });\n  }\n\n  return (\n    <>\n      <h3 className=\"main-title\" style={{ color: \"rgb(129, 22, 27)\" }}>\n        Lista de fabricantes\n      </h3>\n\n      <div>\n        <Dialog\n          open={diag}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Editar categoria</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Nome\"\n              type=\"text\"\n              value={resellerToEdit.name}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  name: e.target.value\n                })\n              }\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"phone\"\n              label=\"Telefone\"\n              type=\"text\"\n              value={resellerToEdit.phone}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  phone: e.target.value\n                })\n              }\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"email\"\n              label=\"E-mail\"\n              type=\"text\"\n              value={resellerToEdit.email}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  email: e.target.value\n                })\n              }\n              fullWidth\n            />\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"logradouro\"\n              label=\"logradouro\"\n              type=\"text\"\n              value={resellerToEdit.address.publicPlace}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  publicPlace: e.target.value\n                })\n              }\n              fullWidth\n            />\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"número\"\n              label=\"número\"\n              type=\"text\"\n              value={resellerToEdit.address.number}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  number: e.target.value\n                })\n              }\n              fullWidth\n            />\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"Bairro\"\n              label=\"Bairro\"\n              type=\"text\"\n              value={resellerToEdit.address.district}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  district: e.target.value\n                })\n              }\n              fullWidth\n            />\n\n<TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"Cidade\"\n              label=\"Cidade\"\n              type=\"text\"\n              value={resellerToEdit.address.city}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  city: e.target.value\n                })\n              }\n              fullWidth\n            />\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"Estado\"\n              label=\"Estado\"\n              type=\"text\"\n              value={resellerToEdit.address.state}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  state: e.target.value\n                })\n              }\n              fullWidth\n            />\n\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"País\"\n              label=\"País\"\n              type=\"text\"\n              value={resellerToEdit.address.country}\n              onChange={e =>\n                setResellerToEdit({\n                  ...resellerToEdit,\n                  country: e.target.value\n                })\n              }\n              fullWidth\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancelar\n            </Button>\n            <Button onClick={() => editRes(resellerToEdit)} color=\"primary\">\n              Salvar\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n\n      <DivListCategories>\n        {resellers.map((reseller, id) => (\n          <ResellerContainer\n            flexDirection=\"row\"\n            justifyContent=\"space-between\"\n            style={{ borderBottom: \"1px solid lightgrey\" }}\n            key={id}\n          >\n            <ResellerContainer\n              flexDirection=\"column\"\n              style={{ display: \"flex\", justifyContent: \"column\" }}\n            >\n              <p style={{ fontWeight: \"200\" }}>Nome: {reseller.name}</p>\n              <p style={{ fontWeight: \"200\" }}>\n                Descrição: {reseller.description}\n              </p>\n              <p>\n                Logo:\n                <span style={{ marginLeft: \"10px\" }}>\n                  <img src={reseller.logo} style={{ width: \"120px\" }} />\n                </span>\n              </p>\n            </ResellerContainer>\n            <ResellerContainer\n              flexDirection=\"column\"\n              style={{ marginRight: \"10px\", marginLeft: \"10px\" }}\n            >\n              <Button onClick={() => handleOpen(reseller)}>Editar</Button>\n              <Button onClick={() => delMan(reseller.id)}>Apagar</Button>\n            </ResellerContainer>\n          </ResellerContainer>\n        ))}\n      </DivListCategories>\n\n      {visible ? (\n        <Message result={messageType} color={messageColor} message={message} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n\nexport const Hr = styled.hr`\n  width: 50%;\n`;\n\nexport const Subcontainer = styled.div`\n  padding: 0 15px;\n`;\n\nexport const ImageContainer = styled.div`\n  img {\n    max-width: 220px;\n    display: block;\n    margin: 10px auto;\n  }\n`;\n\nexport const DivListCategories = styled.div`\n  max-height: 550px;\n  overflow: auto;\n  /* width */\n  ::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: rgb(129, 22, 27);\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nexport const ResellerContainer = styled.div`\n  display: flex;\n  flex-direction: ${props => props.flexDirection};\n  justify-content: ${props => props.justifyContent};\n`;\n"]},"metadata":{},"sourceType":"module"}