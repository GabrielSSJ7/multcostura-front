{"ast":null,"code":"import setApi from \"../api\";\nexport function getResellers(callback) {\n  setApi().get(\"/reseller\").then(function (response) {\n    callback(null, response.data);\n  })[\"catch\"](function (err) {\n    callback(err);\n  });\n}\nexport function deleteReseller(id, callback) {\n  setApi()[\"delete\"](\"/reseller/\".concat(id)).then(function (response) {\n    callback(null, response.data);\n  })[\"catch\"](function (err) {\n    callback(err.response ? err.response.data : err.toString());\n  });\n}\nexport function editReseller(id, data, callback) {\n  setApi().put(\"/reseller/\".concat(id), data).then(function (response) {\n    callback(null, response.data);\n  })[\"catch\"](function (err) {\n    callback(err.response ? err.response.data : err.toString());\n  });\n}","map":{"version":3,"sources":["/home/ti/Projects/WebProjects/multcostura/web-multcostura/src/utils/reseller.js"],"names":["setApi","getResellers","callback","get","then","response","data","err","deleteReseller","id","toString","editReseller","put"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,SAASC,YAAT,CAAsBC,QAAtB,EAAgC;AACrCF,EAAAA,MAAM,GACHG,GADH,CACO,WADP,EAEGC,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBH,IAAAA,QAAQ,CAAC,IAAD,EAAOG,QAAQ,CAACC,IAAhB,CAAR;AACD,GAJH,WAKS,UAAAC,GAAG,EAAI;AACZL,IAAAA,QAAQ,CAACK,GAAD,CAAR;AACD,GAPH;AAQD;AAED,OAAO,SAASC,cAAT,CAAwBC,EAAxB,EAA4BP,QAA5B,EAAsC;AAC3CF,EAAAA,MAAM,YAAN,qBACuBS,EADvB,GAEGL,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBH,IAAAA,QAAQ,CAAC,IAAD,EAAOG,QAAQ,CAACC,IAAhB,CAAR;AACD,GAJH,WAKS,UAAAC,GAAG,EAAI;AACZL,IAAAA,QAAQ,CAACK,GAAG,CAACF,QAAJ,GAAeE,GAAG,CAACF,QAAJ,CAAaC,IAA5B,GAAmCC,GAAG,CAACG,QAAJ,EAApC,CAAR;AACD,GAPH;AAQD;AAED,OAAO,SAASC,YAAT,CAAsBF,EAAtB,EAA0BH,IAA1B,EAAgCJ,QAAhC,EAA0C;AAC/CF,EAAAA,MAAM,GACHY,GADH,qBACoBH,EADpB,GAC0BH,IAD1B,EAEGF,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBH,IAAAA,QAAQ,CAAC,IAAD,EAAOG,QAAQ,CAACC,IAAhB,CAAR;AACD,GAJH,WAKS,UAAAC,GAAG,EAAI;AACZL,IAAAA,QAAQ,CAACK,GAAG,CAACF,QAAJ,GAAeE,GAAG,CAACF,QAAJ,CAAaC,IAA5B,GAAmCC,GAAG,CAACG,QAAJ,EAApC,CAAR;AACD,GAPH;AAQD","sourcesContent":["import setApi from \"../api\";\n\nexport function getResellers(callback) {\n  setApi()\n    .get(\"/reseller\")\n    .then(response => {\n      callback(null, response.data);\n    })\n    .catch(err => {\n      callback(err);\n    });\n}\n\nexport function deleteReseller(id, callback) {\n  setApi()\n    .delete(`/reseller/${id}`)\n    .then(response => {\n      callback(null, response.data);\n    })\n    .catch(err => {\n      callback(err.response ? err.response.data : err.toString());\n    });\n}\n\nexport function editReseller(id, data, callback) {\n  setApi()\n    .put(`/reseller/${id}`, data)\n    .then(response => {\n      callback(null, response.data);\n    })\n    .catch(err => {\n      callback(err.response ? err.response.data : err.toString());\n    });\n}\n"]},"metadata":{},"sourceType":"module"}