{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport styled from 'styled-components';\nimport Message from \"../../utils/Message\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TextArea from \"@material-ui/core/TextareaAutosize\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nexport default function manufacturers() {\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Listar categorias\"), __jsx(\"div\", null, __jsx(Dialog, {\n    open: diag,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, \"Editar categoria\"), __jsx(DialogContent, null, __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Nome\",\n    type: \"text\",\n    value: categoryToEdit.name,\n    onChange: function onChange(e) {\n      return setcategoryToEdit(_objectSpread({}, categoryToEdit, {\n        name: e.target.value\n      }));\n    },\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"description\",\n    label: \"Descri\\xE7\\xE3o\",\n    type: \"text\",\n    value: categoryToEdit.description,\n    onChange: function onChange(e) {\n      return setcategoryToEdit(_objectSpread({}, categoryToEdit, {\n        description: e.target.value\n      }));\n    },\n    fullWidth: true\n  })), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Cancelar\"), __jsx(Button, {\n    onClick: function onClick() {\n      return editCat(categoryToEdit);\n    },\n    color: \"primary\"\n  }, \"Salvar\")))), __jsx(DivListCategories, null, categories.map(function (category, id) {\n    return __jsx(CategoryContainer, {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      style: {\n        borderBottom: \"1px solid lightgrey\"\n      },\n      key: id\n    }, __jsx(CategoryContainer, {\n      flexDirection: \"column\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"column\"\n      }\n    }, __jsx(\"p\", {\n      style: {\n        fontWeight: \"200\"\n      }\n    }, \"Nome: \", category.name), __jsx(\"p\", {\n      style: {\n        fontWeight: \"200\"\n      }\n    }, \"Descri\\xE7\\xE3o: \", category.description)), __jsx(CategoryContainer, {\n      flexDirection: \"column\",\n      style: {\n        marginRight: \"10px\",\n        marginLeft: \"10px\"\n      }\n    }, __jsx(Button, {\n      onClick: function onClick() {\n        return handleOpen(category);\n      }\n    }, \"Editar\"), __jsx(Button, {\n      onClick: function onClick() {\n        return delCat(category.id);\n      }\n    }, \"Apagar\"), __jsx(Link, {\n      route: \"/admin/banner/category/\".concat(category.id)\n    }, __jsx(Button, null, \"Banner\"))));\n  })), visible ? __jsx(Message, {\n    result: messageType,\n    color: messageColor,\n    message: message\n  }) : \"\");\n}\nexport var Hr = styled.hr.withConfig({\n  displayName: \"ListManufacturers__Hr\",\n  componentId: \"sc-31sht8-0\"\n})([\"width:50%;\"]);\nexport var Subcontainer = styled.div.withConfig({\n  displayName: \"ListManufacturers__Subcontainer\",\n  componentId: \"sc-31sht8-1\"\n})([\"padding:0 15px;\"]);\nexport var ImageContainer = styled.div.withConfig({\n  displayName: \"ListManufacturers__ImageContainer\",\n  componentId: \"sc-31sht8-2\"\n})([\"img{max-width:120px;}\"]);\nexport var DivListCategories = styled.div.withConfig({\n  displayName: \"ListManufacturers__DivListCategories\",\n  componentId: \"sc-31sht8-3\"\n})([\"max-height:550px;overflow:auto;::-webkit-scrollbar{width:10px;}::-webkit-scrollbar-track{background:#f1f1f1;}::-webkit-scrollbar-thumb{background:rgb(129,22,27);}::-webkit-scrollbar-thumb:hover{background:#555;}\"]);\nexport var CategoryContainer = styled.div.withConfig({\n  displayName: \"ListManufacturers__CategoryContainer\",\n  componentId: \"sc-31sht8-4\"\n})([\"display:flex;flex-direction:\", \";justify-content:\", \";\"], function (props) {\n  return props.flexDirection;\n}, function (props) {\n  return props.justifyContent;\n});","map":{"version":3,"sources":["/home/ti/Projects/WebProjects/multcostura/web-multcostura/src/components/admin/manufacturers/ListManufacturers.jsx"],"names":["React","styled","Message","TextField","TextArea","Dialog","DialogActions","DialogContent","DialogTitle","manufacturers","color","diag","handleClose","categoryToEdit","name","e","setcategoryToEdit","target","value","description","editCat","categories","map","category","id","borderBottom","display","justifyContent","fontWeight","marginRight","marginLeft","handleOpen","delCat","visible","messageType","messageColor","message","Hr","hr","Subcontainer","div","ImageContainer","DivListCategories","CategoryContainer","props","flexDirection"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from 'styled-components'\n\nimport Message from \"../../utils/Message\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TextArea from \"@material-ui/core/TextareaAutosize\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function manufacturers() {\n  return (\n    <>\n      <h3 className=\"main-title\" style={{ color: \"rgb(129, 22, 27)\" }}>\n        Listar categorias\n      </h3>\n\n      <div>\n        <Dialog\n          open={diag}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Editar categoria</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Nome\"\n              type=\"text\"\n              value={categoryToEdit.name}\n              onChange={e =>\n                setcategoryToEdit({ ...categoryToEdit, name: e.target.value })\n              }\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"description\"\n              label=\"Descrição\"\n              type=\"text\"\n              value={categoryToEdit.description}\n              onChange={e =>\n                setcategoryToEdit({\n                  ...categoryToEdit,\n                  description: e.target.value\n                })\n              }\n              fullWidth\n            />\n\n            {/* <Upload\n                  labelInputFile=\"Ícone\"\n                  imageURL={category.appIcon}\n                  onRef={ref => (_this.child = ref)}\n                /> */}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancelar\n            </Button>\n            <Button onClick={() => editCat(categoryToEdit)} color=\"primary\">\n              Salvar\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n\n      <DivListCategories>\n        {categories.map((category, id) => (\n          <CategoryContainer\n            flexDirection=\"row\"\n            justifyContent=\"space-between\"\n            style={{ borderBottom: \"1px solid lightgrey\" }}\n            key={id}\n          >\n            <CategoryContainer\n              flexDirection=\"column\"\n              style={{ display: \"flex\", justifyContent: \"column\" }}\n            >\n              <p style={{ fontWeight: \"200\" }}>Nome: {category.name}</p>\n              <p style={{ fontWeight: \"200\" }}>\n                Descrição: {category.description}\n              </p>\n              {/* <p>\n                    Icone:\n                    <span style={{ marginLeft: \"10px\" }}>\n                      <img src={category.appIcon} style={{ width: \"32px\" }} />\n                    </span>\n                  </p> */}\n            </CategoryContainer>\n            <CategoryContainer\n              flexDirection=\"column\"\n              style={{ marginRight: \"10px\", marginLeft: \"10px\" }}\n            >\n              <Button onClick={() => handleOpen(category)}>Editar</Button>\n              <Button onClick={() => delCat(category.id)}>Apagar</Button>\n              <Link route={`/admin/banner/category/${category.id}`}>\n                <Button>Banner</Button>\n              </Link>\n            </CategoryContainer>\n          </CategoryContainer>\n        ))}\n      </DivListCategories>\n\n      {visible ? (\n        <Message result={messageType} color={messageColor} message={message} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n\n\nexport const Hr = styled.hr`\n  width: 50%;\n`;\n\nexport const Subcontainer = styled.div`\n  padding: 0 15px;\n`;\n\nexport const ImageContainer = styled.div`\n  img {\n    max-width: 120px;\n  }\n`;\n\nexport const DivListCategories = styled.div`\n  max-height: 550px;\n  overflow: auto;\n  /* width */\n  ::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: rgb(129, 22, 27);\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nexport const CategoryContainer = styled.div`\n  display: flex;\n  flex-direction: ${props => props.flexDirection};\n  justify-content: ${props => props.justifyContent};\n`;\n"]},"metadata":{},"sourceType":"module"}