{"ast":null,"code":"import setApi from \"../api\";\nimport { validateImage } from '../utils/validate';\nexport function getManufacturers(cb) {\n  setApi().get(\"/manufacturer\").then(function (response) {\n    cb(null, response.data);\n  })[\"catch\"](function (err) {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function deleteManufacturer(id, cb) {\n  setApi()[\"delete\"](\"/manufacturer/\".concat(id)).then(function (response) {\n    cb(null, response.data);\n  })[\"catch\"](function (err) {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function editManufacturer(id, _ref, cb) {\n  var name = _ref.name,\n      description = _ref.description,\n      file = _ref.file,\n      sets = _ref.sets,\n      getItens = _ref.getItens,\n      close = _ref.close;\n\n  if (validateImage([\"png\", \"jpg\", \"svg\", \"JPG\", \"jpeg\", \"webp\", \"gif\", \"tiff\"], 10000, file)) {\n    if (file) {\n      var formData = new FormData();\n      formData.append(\"logo\", file);\n      setApi().put(\"/manufacturer/\".concat(id, \"?name=\").concat(name, \"&description=\").concat(description), formData).then(function (response) {\n        cb(null, response.data);\n      })[\"catch\"](function (err) {\n        cb(err.response ? err.response.data : err.toString());\n      });\n    } else {\n      setApi().put(\"/categories/\".concat(id, \"?name=\").concat(name, \"&description=\").concat(description)).then(function (response) {\n        cb(null, response.data);\n      })[\"catch\"](function (err) {\n        cb(err.response ? err.response.data : err.toString());\n      });\n    }\n  } else {\n    cb(\"Suba imagens PNG, JPG, SVG, JPEG, WEBP, GIF, TIFF com no máximo 10MB\");\n  }\n}","map":{"version":3,"sources":["/home/ti/Projects/WebProjects/multcostura/web-multcostura/src/utils/manufacturers.js"],"names":["setApi","validateImage","getManufacturers","cb","get","then","response","data","err","toString","deleteManufacturer","id","editManufacturer","name","description","file","sets","getItens","close","formData","FormData","append","put"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAEA,OAAO,SAASC,gBAAT,CAA0BC,EAA1B,EAA8B;AACnCH,EAAAA,MAAM,GACHI,GADH,CACO,eADP,EAEGC,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBH,IAAAA,EAAE,CAAC,IAAD,EAAOG,QAAQ,CAACC,IAAhB,CAAF;AACD,GAJH,WAKS,UAAAC,GAAG,EAAI;AACZL,IAAAA,EAAE,CAACK,GAAG,CAACF,QAAJ,GAAeE,GAAG,CAACF,QAAJ,CAAaC,IAA5B,GAAmCC,GAAG,CAACC,QAAJ,EAApC,CAAF;AACD,GAPH;AAQD;AAID,OAAO,SAASC,kBAAT,CAA4BC,EAA5B,EAAgCR,EAAhC,EAAoC;AACvCH,EAAAA,MAAM,YAAN,yBAC2BW,EAD3B,GAEGN,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBH,IAAAA,EAAE,CAAC,IAAD,EAAOG,QAAQ,CAACC,IAAhB,CAAF;AACD,GAJH,WAKS,UAAAC,GAAG,EAAI;AACZL,IAAAA,EAAE,CAACK,GAAG,CAACF,QAAJ,GAAeE,GAAG,CAACF,QAAJ,CAAaC,IAA5B,GAAmCC,GAAG,CAACC,QAAJ,EAApC,CAAF;AACD,GAPH;AAQD;AAED,OAAO,SAASG,gBAAT,CACLD,EADK,QAGLR,EAHK,EAIL;AAAA,MAFEU,IAEF,QAFEA,IAEF;AAAA,MAFQC,WAER,QAFQA,WAER;AAAA,MAFqBC,IAErB,QAFqBA,IAErB;AAAA,MAF2BC,IAE3B,QAF2BA,IAE3B;AAAA,MAFiCC,QAEjC,QAFiCA,QAEjC;AAAA,MAF2CC,KAE3C,QAF2CA,KAE3C;;AACA,MAAIjB,aAAa,CAAC,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,MAA7B,EAAqC,MAArC,EAA6C,KAA7C,EAAoD,MAApD,CAAD,EAA8D,KAA9D,EAAqEc,IAArE,CAAjB,EAA6F;AAC3F,QAAIA,IAAJ,EAAU;AACR,UAAMI,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBN,IAAxB;AACAf,MAAAA,MAAM,GACHsB,GADH,yBAEqBX,EAFrB,mBAEgCE,IAFhC,0BAEoDC,WAFpD,GAGIK,QAHJ,EAKGd,IALH,CAKQ,UAAAC,QAAQ,EAAI;AAChBH,QAAAA,EAAE,CAAC,IAAD,EAAOG,QAAQ,CAACC,IAAhB,CAAF;AACD,OAPH,WAQS,UAAAC,GAAG,EAAI;AACZL,QAAAA,EAAE,CAACK,GAAG,CAACF,QAAJ,GAAeE,GAAG,CAACF,QAAJ,CAAaC,IAA5B,GAAmCC,GAAG,CAACC,QAAJ,EAApC,CAAF;AACD,OAVH;AAWD,KAdD,MAcO;AACLT,MAAAA,MAAM,GACHsB,GADH,uBACsBX,EADtB,mBACiCE,IADjC,0BACqDC,WADrD,GAEGT,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBH,QAAAA,EAAE,CAAC,IAAD,EAAOG,QAAQ,CAACC,IAAhB,CAAF;AACD,OAJH,WAKS,UAAAC,GAAG,EAAI;AACZL,QAAAA,EAAE,CAACK,GAAG,CAACF,QAAJ,GAAeE,GAAG,CAACF,QAAJ,CAAaC,IAA5B,GAAmCC,GAAG,CAACC,QAAJ,EAApC,CAAF;AACD,OAPH;AAQD;AACF,GAzBD,MAyBO;AACLN,IAAAA,EAAE,CAAC,sEAAD,CAAF;AACD;AACF","sourcesContent":["import setApi from \"../api\";\nimport { validateImage } from '../utils/validate'\n\nexport function getManufacturers(cb) {\n  setApi()\n    .get(\"/manufacturer\")\n    .then(response => {\n      cb(null, response.data);\n    })\n    .catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n}\n\n\n\nexport function deleteManufacturer(id, cb) {\n    setApi()\n      .delete(`/manufacturer/${id}`)\n      .then(response => {\n        cb(null, response.data);\n      })\n      .catch(err => {\n        cb(err.response ? err.response.data : err.toString());\n      });\n  }\n  \n  export function editManufacturer(\n    id,\n    { name, description, file, sets, getItens, close },\n    cb\n  ) {\n    if (validateImage([\"png\", \"jpg\", \"svg\", \"JPG\", \"jpeg\", \"webp\", \"gif\", \"tiff\"], 10000, file)) {\n      if (file) {\n        const formData = new FormData();\n        formData.append(\"logo\", file);\n        setApi()\n          .put(\n            `/manufacturer/${id}?name=${name}&description=${description}`,\n            formData\n          )\n          .then(response => {\n            cb(null, response.data);\n          })\n          .catch(err => {\n            cb(err.response ? err.response.data : err.toString());\n          });\n      } else {\n        setApi()\n          .put(`/categories/${id}?name=${name}&description=${description}`)\n          .then(response => {\n            cb(null, response.data);\n          })\n          .catch(err => {\n            cb(err.response ? err.response.data : err.toString());\n          });\n      }\n    } else {\n      cb(\"Suba imagens PNG, JPG, SVG, JPEG, WEBP, GIF, TIFF com no máximo 10MB\");\n    }\n  }\n  "]},"metadata":{},"sourceType":"module"}