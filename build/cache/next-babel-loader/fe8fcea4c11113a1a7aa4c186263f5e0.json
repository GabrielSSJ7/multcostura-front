{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/ti/Projects/WebProjects/multcostura/web-multcostura/src/components/admin/categories/ListCategories.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"../../../../routes\";\nimport { Button } from \"../../../static/styled-components/base\";\nimport { getCategories, deleteCategory, editCategory } from \"../../../utils/categories\";\nimport { Creators as UtilsCreators } from \"../../../ducks/utils\";\nimport { Creators as CategoriesCreators } from \"../../../ducks/categories\";\nimport { Creators as UploadCreators } from \"../../../ducks/upload\";\nimport Message from \"../../utils/Message\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TextArea from \"@material-ui/core/TextareaAutosize\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Upload from \"../../utils/Upload\";\nconst reactCtx = React.createContext({});\nexport default function ListCategories() {\n  const {\n    categories\n  } = useSelector(state => state.Categories);\n  const {\n    message,\n    messageType,\n    messageColor\n  } = useSelector(state => state.Utils);\n  const {\n    0: visible,\n    1: setVisible\n  } = useState(false);\n  const {\n    0: diag,\n    1: setDiag\n  } = useState(false);\n  const {\n    0: categoryToEdit,\n    1: setcategoryToEdit\n  } = useState({});\n  const dispatch = useDispatch();\n  useEffect(() => {\n    function asyncFunc() {\n      getCategories(function (err, categories) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage(err));\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          setVisible(true);\n          return;\n        }\n\n        dispatch(CategoriesCreators.loadCategories(categories));\n      });\n    }\n\n    asyncFunc();\n    return () => {};\n  }, []);\n\n  function editCat(cat) {\n    editCategory(cat.id, _objectSpread({}, cat), function (err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        handleClose();\n        return;\n      }\n\n      getCategories(function (err, categories) {\n        dispatch(CategoriesCreators.loadCategories(categories));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Editado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      handleClose();\n      setVisible(true);\n    });\n  }\n\n  function delCat(id) {\n    deleteCategory(id, function (err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        return;\n      }\n\n      getCategories(function (err, categories) {\n        dispatch(CategoriesCreators.loadCategories(categories));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Deletado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      setVisible(true);\n    });\n  }\n\n  function handleClose() {\n    setDiag(false);\n    setcategoryToEdit({});\n  }\n\n  function handleOpen(category) {\n    setcategoryToEdit(category);\n    setDiag(true);\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      color: \"rgb(129, 22, 27)\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Listar categorias\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, __jsx(Dialog, {\n    open: diag,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Editar categoria\"), __jsx(DialogContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Nome\",\n    type: \"text\",\n    value: categoryToEdit.name,\n    onChange: e => setcategoryToEdit(_objectSpread({}, categoryToEdit, {\n      name: e.target.value\n    })),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"description\",\n    label: \"Descri\\xE7\\xE3o\",\n    type: \"text\",\n    value: categoryToEdit.description,\n    onChange: e => setcategoryToEdit(_objectSpread({}, categoryToEdit, {\n      description: e.target.value\n    })),\n    fullWidth: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  })), __jsx(DialogActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Cancelar\"), __jsx(Button, {\n    onClick: () => editCat(categoryToEdit),\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Salvar\")))), __jsx(DivListCategories, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, categories.map((category, id) => __jsx(CategoryContainer, {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    style: {\n      borderBottom: \"1px solid lightgrey\"\n    },\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, __jsx(CategoryContainer, {\n    flexDirection: \"column\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"column\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    style: {\n      fontWeight: \"200\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176\n    },\n    __self: this\n  }, \"Nome: \", category.name), __jsx(\"p\", {\n    style: {\n      fontWeight: \"200\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Descri\\xE7\\xE3o: \", category.description)), __jsx(CategoryContainer, {\n    flexDirection: \"column\",\n    style: {\n      marginRight: \"10px\",\n      marginLeft: \"10px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187\n    },\n    __self: this\n  }, __jsx(Button, {\n    onClick: () => handleOpen(category),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    },\n    __self: this\n  }, \"Editar\"), __jsx(Button, {\n    onClick: () => delCat(category.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192\n    },\n    __self: this\n  }, \"Apagar\"), __jsx(Link, {\n    route: `/admin/banner/category/${category.id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193\n    },\n    __self: this\n  }, __jsx(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, \"Banner\")))))), visible ? __jsx(Message, {\n    result: messageType,\n    color: messageColor,\n    message: message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202\n    },\n    __self: this\n  }) : \"\");\n}\nexport const Hr = styled.hr.withConfig({\n  displayName: \"ListCategories__Hr\",\n  componentId: \"sc-4wtem1-0\"\n})([\"width:50%;\"]);\nexport const Subcontainer = styled.div.withConfig({\n  displayName: \"ListCategories__Subcontainer\",\n  componentId: \"sc-4wtem1-1\"\n})([\"padding:0 15px;\"]);\nexport const ImageContainer = styled.div.withConfig({\n  displayName: \"ListCategories__ImageContainer\",\n  componentId: \"sc-4wtem1-2\"\n})([\"img{max-width:120px;}\"]);\nexport const DivListCategories = styled.div.withConfig({\n  displayName: \"ListCategories__DivListCategories\",\n  componentId: \"sc-4wtem1-3\"\n})([\"max-height:550px;overflow:auto;::-webkit-scrollbar{width:10px;}::-webkit-scrollbar-track{background:#f1f1f1;}::-webkit-scrollbar-thumb{background:rgb(129,22,27);}::-webkit-scrollbar-thumb:hover{background:#555;}\"]);\nexport const CategoryContainer = styled.div.withConfig({\n  displayName: \"ListCategories__CategoryContainer\",\n  componentId: \"sc-4wtem1-4\"\n})([\"display:flex;flex-direction:\", \";justify-content:\", \";\"], props => props.flexDirection, props => props.justifyContent);","map":{"version":3,"sources":["/home/ti/Projects/WebProjects/multcostura/web-multcostura/src/components/admin/categories/ListCategories.jsx"],"names":["React","useState","useEffect","useContext","styled","useSelector","useDispatch","Link","Button","getCategories","deleteCategory","editCategory","Creators","UtilsCreators","CategoriesCreators","UploadCreators","Message","TextField","TextArea","Dialog","DialogActions","DialogContent","DialogTitle","Upload","reactCtx","createContext","ListCategories","categories","state","Categories","message","messageType","messageColor","Utils","visible","setVisible","diag","setDiag","categoryToEdit","setcategoryToEdit","dispatch","asyncFunc","err","changeMessage","changeMessageType","changeMessageColor","loadCategories","editCat","cat","id","data","handleClose","delCat","handleOpen","category","color","name","e","target","value","description","map","borderBottom","display","justifyContent","fontWeight","marginRight","marginLeft","Hr","hr","Subcontainer","div","ImageContainer","DivListCategories","CategoryContainer","props","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { Link } from \"../../../../routes\";\nimport { Button } from \"../../../static/styled-components/base\";\nimport {\n  getCategories,\n  deleteCategory,\n  editCategory\n} from \"../../../utils/categories\";\nimport { Creators as UtilsCreators } from \"../../../ducks/utils\";\nimport { Creators as CategoriesCreators } from \"../../../ducks/categories\";\nimport { Creators as UploadCreators } from \"../../../ducks/upload\";\n\nimport Message from \"../../utils/Message\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TextArea from \"@material-ui/core/TextareaAutosize\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport Upload from \"../../utils/Upload\";\n\nconst reactCtx = React.createContext({});\n\nexport default function ListCategories() {\n  const { categories } = useSelector(state => state.Categories);\n  const { message, messageType, messageColor } = useSelector(\n    state => state.Utils\n  );\n  const [visible, setVisible] = useState(false);\n  const [diag, setDiag] = useState(false);\n  const [categoryToEdit, setcategoryToEdit] = useState({});\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    function asyncFunc() {\n      getCategories(function(err, categories) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage(err));\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          setVisible(true);\n          return;\n        }\n        dispatch(CategoriesCreators.loadCategories(categories));\n      });\n    }\n    asyncFunc();\n    return () => {};\n  }, []);\n\n  function editCat(cat) {\n    editCategory(cat.id, { ...cat }, function(err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        handleClose();\n        return;\n      }\n      getCategories(function(err, categories) {\n        dispatch(CategoriesCreators.loadCategories(categories));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Editado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      handleClose();\n      setVisible(true);\n    });\n  }\n\n  function delCat(id) {\n    deleteCategory(id, function(err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        return;\n      }\n      getCategories(function(err, categories) {\n        dispatch(CategoriesCreators.loadCategories(categories));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Deletado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      setVisible(true);\n    });\n  }\n\n  function handleClose() {\n    setDiag(false);\n    setcategoryToEdit({});\n  }\n\n  function handleOpen(category) {\n    setcategoryToEdit(category);\n    setDiag(true);\n  }\n\n  return (\n    <>\n      <h3 className=\"main-title\" style={{ color: \"rgb(129, 22, 27)\" }}>\n        Listar categorias\n      </h3>\n\n      <div>\n        <Dialog\n          open={diag}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Editar categoria</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Nome\"\n              type=\"text\"\n              value={categoryToEdit.name}\n              onChange={e =>\n                setcategoryToEdit({ ...categoryToEdit, name: e.target.value })\n              }\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"description\"\n              label=\"Descrição\"\n              type=\"text\"\n              value={categoryToEdit.description}\n              onChange={e =>\n                setcategoryToEdit({\n                  ...categoryToEdit,\n                  description: e.target.value\n                })\n              }\n              fullWidth\n            />\n\n            {/* <Upload\n              labelInputFile=\"Ícone\"\n              imageURL={category.appIcon}\n              onRef={ref => (_this.child = ref)}\n            /> */}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancelar\n            </Button>\n            <Button onClick={() => editCat(categoryToEdit)} color=\"primary\">\n              Salvar\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n\n      <DivListCategories>\n        {categories.map((category, id) => (\n          <CategoryContainer\n            flexDirection=\"row\"\n            justifyContent=\"space-between\"\n            style={{ borderBottom: \"1px solid lightgrey\" }}\n            key={id}\n          >\n            <CategoryContainer\n              flexDirection=\"column\"\n              style={{ display: \"flex\", justifyContent: \"column\" }}\n            >\n              <p style={{ fontWeight: \"200\" }}>Nome: {category.name}</p>\n              <p style={{ fontWeight: \"200\" }}>\n                Descrição: {category.description}\n              </p>\n              {/* <p>\n                Icone:\n                <span style={{ marginLeft: \"10px\" }}>\n                  <img src={category.appIcon} style={{ width: \"32px\" }} />\n                </span>\n              </p> */}\n            </CategoryContainer>\n            <CategoryContainer\n              flexDirection=\"column\"\n              style={{ marginRight: \"10px\", marginLeft: \"10px\" }}\n            >\n              <Button onClick={() => handleOpen(category)}>Editar</Button>\n              <Button onClick={() => delCat(category.id)}>Apagar</Button>\n              <Link route={`/admin/banner/category/${category.id}`}>\n                <Button>Banner</Button>\n              </Link>\n            </CategoryContainer>\n          </CategoryContainer>\n        ))}\n      </DivListCategories>\n\n      {visible ? (\n        <Message result={messageType} color={messageColor} message={message} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n\nexport const Hr = styled.hr`\n  width: 50%;\n`;\n\nexport const Subcontainer = styled.div`\n  padding: 0 15px;\n`;\n\nexport const ImageContainer = styled.div`\n  img {\n    max-width: 120px;\n  }\n`;\n\nexport const DivListCategories = styled.div`\n  max-height: 550px;\n  overflow: auto;\n  /* width */\n  ::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: rgb(129, 22, 27);\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nexport const CategoryContainer = styled.div`\n  display: flex;\n  flex-direction: ${props => props.flexDirection};\n  justify-content: ${props => props.justifyContent};\n`;\n"]},"metadata":{},"sourceType":"module"}