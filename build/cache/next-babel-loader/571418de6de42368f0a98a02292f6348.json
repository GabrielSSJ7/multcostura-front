{"ast":null,"code":"import { validateImage } from \"./validate\";\nimport setApi from \"../api\";\nexport function getCategories(cb) {\n  setApi().get(\"/categories\").then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function deleteCategory(id, cb) {\n  console.log(\"del id => \", id);\n  setApi().delete(`/categories/${id}`).then(response => {\n    cb(null, response.data);\n  }).catch(err => {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function editCategory(id, {\n  name,\n  description,\n  file,\n  sets,\n  getItens,\n  close\n}, cb) {\n  if (validateImage([\"png\"], 100, file)) {\n    if (file) {\n      const formData = new FormData();\n      formData.append(\"icon\", file);\n      setApi().put(`/categories/${id}?name=${name}&description=${description}`, formData).then(response => {\n        cb(null, response.data);\n      }).catch(err => {\n        cb(err.response ? err.response.data : err.toString());\n      });\n    } else {\n      setApi().put(`/categories/${id}?name=${name}&description=${description}`).then(response => {\n        cb(null, response.data);\n      }).catch(err => {\n        cb(err.response ? err.response.data : err.toString());\n      });\n    }\n  } else {\n    cb(\"Suba imagens PNG com no máximo 100KB\");\n  }\n}","map":{"version":3,"sources":["/home/ti/Projects/WebProjects/multcostura/web-multcostura/src/utils/categories.js"],"names":["validateImage","setApi","getCategories","cb","get","then","response","data","catch","err","toString","deleteCategory","id","console","log","delete","editCategory","name","description","file","sets","getItens","close","formData","FormData","append","put"],"mappings":"AAAA,SAASA,aAAT,QAA8B,YAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,SAASC,aAAT,CAAuBC,EAAvB,EAA2B;AAChCF,EAAAA,MAAM,GACHG,GADH,CACO,aADP,EAEGC,IAFH,CAEQC,QAAQ,IAAI;AAChBH,IAAAA,EAAE,CAAC,IAAD,EAAOG,QAAQ,CAACC,IAAhB,CAAF;AACD,GAJH,EAKGC,KALH,CAKSC,GAAG,IAAI;AACZN,IAAAA,EAAE,CAACM,GAAG,CAACH,QAAJ,GAAeG,GAAG,CAACH,QAAJ,CAAaC,IAA5B,GAAmCE,GAAG,CAACC,QAAJ,EAApC,CAAF;AACD,GAPH;AAQD;AAED,OAAO,SAASC,cAAT,CAAwBC,EAAxB,EAA4BT,EAA5B,EAAgC;AACrCU,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,EAA1B;AAEAX,EAAAA,MAAM,GACHc,MADH,CACW,eAAcH,EAAG,EAD5B,EAEGP,IAFH,CAEQC,QAAQ,IAAI;AAChBH,IAAAA,EAAE,CAAC,IAAD,EAAOG,QAAQ,CAACC,IAAhB,CAAF;AACD,GAJH,EAKGC,KALH,CAKSC,GAAG,IAAI;AACZN,IAAAA,EAAE,CAACM,GAAG,CAACH,QAAJ,GAAeG,GAAG,CAACH,QAAJ,CAAaC,IAA5B,GAAmCE,GAAG,CAACC,QAAJ,EAApC,CAAF;AACD,GAPH;AAQD;AAED,OAAO,SAASM,YAAT,CACLJ,EADK,EAEL;AAAEK,EAAAA,IAAF;AAAQC,EAAAA,WAAR;AAAqBC,EAAAA,IAArB;AAA2BC,EAAAA,IAA3B;AAAiCC,EAAAA,QAAjC;AAA2CC,EAAAA;AAA3C,CAFK,EAGLnB,EAHK,EAIL;AACA,MAAIH,aAAa,CAAC,CAAC,KAAD,CAAD,EAAU,GAAV,EAAemB,IAAf,CAAjB,EAAuC;AACrC,QAAIA,IAAJ,EAAU;AACR,YAAMI,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBN,IAAxB;AACAlB,MAAAA,MAAM,GACHyB,GADH,CAEK,eAAcd,EAAG,SAAQK,IAAK,gBAAeC,WAAY,EAF9D,EAGIK,QAHJ,EAKGlB,IALH,CAKQC,QAAQ,IAAI;AAChBH,QAAAA,EAAE,CAAC,IAAD,EAAOG,QAAQ,CAACC,IAAhB,CAAF;AACD,OAPH,EAQGC,KARH,CAQSC,GAAG,IAAI;AACZN,QAAAA,EAAE,CAACM,GAAG,CAACH,QAAJ,GAAeG,GAAG,CAACH,QAAJ,CAAaC,IAA5B,GAAmCE,GAAG,CAACC,QAAJ,EAApC,CAAF;AACD,OAVH;AAWD,KAdD,MAcO;AACLT,MAAAA,MAAM,GACHyB,GADH,CACQ,eAAcd,EAAG,SAAQK,IAAK,gBAAeC,WAAY,EADjE,EAEGb,IAFH,CAEQC,QAAQ,IAAI;AAChBH,QAAAA,EAAE,CAAC,IAAD,EAAOG,QAAQ,CAACC,IAAhB,CAAF;AACD,OAJH,EAKGC,KALH,CAKSC,GAAG,IAAI;AACZN,QAAAA,EAAE,CAACM,GAAG,CAACH,QAAJ,GAAeG,GAAG,CAACH,QAAJ,CAAaC,IAA5B,GAAmCE,GAAG,CAACC,QAAJ,EAApC,CAAF;AACD,OAPH;AAQD;AACF,GAzBD,MAyBO;AACLP,IAAAA,EAAE,CAAC,sCAAD,CAAF;AACD;AACF","sourcesContent":["import { validateImage } from \"./validate\";\nimport setApi from \"../api\";\n\nexport function getCategories(cb) {\n  setApi()\n    .get(\"/categories\")\n    .then(response => {\n      cb(null, response.data);\n    })\n    .catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n}\n\nexport function deleteCategory(id, cb) {\n  console.log(\"del id => \", id);\n\n  setApi()\n    .delete(`/categories/${id}`)\n    .then(response => {\n      cb(null, response.data);\n    })\n    .catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n}\n\nexport function editCategory(\n  id,\n  { name, description, file, sets, getItens, close },\n  cb\n) {\n  if (validateImage([\"png\"], 100, file)) {\n    if (file) {\n      const formData = new FormData();\n      formData.append(\"icon\", file);\n      setApi()\n        .put(\n          `/categories/${id}?name=${name}&description=${description}`,\n          formData\n        )\n        .then(response => {\n          cb(null, response.data);\n        })\n        .catch(err => {\n          cb(err.response ? err.response.data : err.toString());\n        });\n    } else {\n      setApi()\n        .put(`/categories/${id}?name=${name}&description=${description}`)\n        .then(response => {\n          cb(null, response.data);\n        })\n        .catch(err => {\n          cb(err.response ? err.response.data : err.toString());\n        });\n    }\n  } else {\n    cb(\"Suba imagens PNG com no máximo 100KB\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}