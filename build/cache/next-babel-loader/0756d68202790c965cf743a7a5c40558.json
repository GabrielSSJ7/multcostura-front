{"ast":null,"code":"var _jsxFileName = \"/home/ti/Projects/WebProjects/multcostura/web-multcostura/src/components/utils/Slider.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"../../../routes\";\nconst Wrapper = styled.div.withConfig({\n  displayName: \"Slider__Wrapper\",\n  componentId: \"sc-1ke79mt-0\"\n})([\"width:100%;height:400px;overflow:hidden;display:-webkit-box;position:relative;\"]);\nconst Slide = styled.div.withConfig({\n  displayName: \"Slider__Slide\",\n  componentId: \"sc-1ke79mt-1\"\n})([\"background-image:url('\", \"');background-size:cover;background-position:center;background-repeat:no-repeat;width:100%;height:400px;transform:translateX(\", \"px);transition:transform 0.4s ease-in-out;position:relative;\"], props => props.src, props => props.translate);\nconst ArrowLeft = styled.span.withConfig({\n  displayName: \"Slider__ArrowLeft\",\n  componentId: \"sc-1ke79mt-2\"\n})([\"position:absolute;z-index:9;left:0;margin-left:40px;cursor:pointer;top:50%;margin-top:-10px;border-top:30px solid transparent;border-bottom:30px solid transparent;border-right:30px solid white;\"]);\nconst ArrowRight = styled.span.withConfig({\n  displayName: \"Slider__ArrowRight\",\n  componentId: \"sc-1ke79mt-3\"\n})([\"position:absolute;z-index:9;right:0;margin-right:40px;cursor:pointer;width:0;height:0;top:50%;margin-top:-10px;border-top:30px solid transparent;border-bottom:30px solid transparent;border-left:30px solid white;\"]);\nexport default (({\n  link,\n  images,\n  autoSlide,\n  slideCtrl,\n  balls,\n  arrows\n}) => {\n  const {\n    0: index,\n    1: setIndex\n  } = useState(1);\n  const {\n    0: translate,\n    1: setTranslate\n  } = useState(0);\n  useEffect(() => {\n    if (autoSlide) {\n      const interval = setInterval(() => {\n        next();\n      }, 3000);\n      return () => clearInterval(interval);\n    }\n  }, [index]);\n  useEffect(() => {\n    setIndex(slideCtrl);\n    if (slideCtrl != index) setTranslate(getSlideWidth() - slideCtrl * getSlideWidth());\n  }, [slideCtrl]);\n  useLayoutEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setTranslate(getSlideWidth() - index * getSlideWidth());\n    });\n  });\n\n  function prev() {\n    if (index == 1) return;\n    setTranslate(getSlideWidth() - (index - 1) * getSlideWidth());\n    setIndex(index - 1);\n  }\n\n  function next() {\n    if (index == images.length) {\n      setTranslate(1);\n      setIndex(1);\n    } else {\n      setTranslate(getSlideWidth() - (index + 1) * getSlideWidth());\n      setIndex(index => index + 1);\n    }\n  }\n\n  function getSlideWidth() {\n    return document.querySelector(\".slide\") ? document.querySelector(\".slide\").clientWidth : 0;\n  }\n\n  function suckBalls(i) {\n    setIndex(i);\n\n    if (i != index) {\n      setTranslate(getSlideWidth() - i * getSlideWidth());\n    }\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Wrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, images ? __jsx(React.Fragment, null, arrows ? __jsx(React.Fragment, null, __jsx(ArrowLeft, {\n    onClick: () => prev(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }), __jsx(ArrowRight, {\n    onClick: () => next(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })) : __jsx(React.Fragment, null), __jsx(React.Fragment, null, images.map((img, i) => __jsx(Slide, {\n    className: \"slide\",\n    key: i,\n    src: img,\n    translate: translate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  })))) : __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, \" no image\")), balls ? __jsx(\"div\", {\n    id: \"bolas\",\n    style: {\n      display: \"flex\",\n      flexDirection: \"row\",\n      width: \"50%\",\n      justifyContent: \"center\",\n      margin: \"10px auto\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, images.map((img, i) => __jsx(\"div\", {\n    key: i,\n    onClick: () => suckBalls(i + 1),\n    style: {\n      width: \"8px\",\n      height: \"8px\",\n      background: index == i + 1 ? \"black\" : \"transparent\",\n      border: \"1px solid black\",\n      borderRadius: \"100%\",\n      marginRight: \"10px\",\n      cursor: \"pointer\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }))) : __jsx(React.Fragment, null));\n});","map":{"version":3,"sources":["/home/ti/Projects/WebProjects/multcostura/web-multcostura/src/components/utils/Slider.jsx"],"names":["React","useState","useEffect","useLayoutEffect","styled","Link","Wrapper","div","Slide","props","src","translate","ArrowLeft","span","ArrowRight","link","images","autoSlide","slideCtrl","balls","arrows","index","setIndex","setTranslate","interval","setInterval","next","clearInterval","getSlideWidth","window","addEventListener","prev","length","document","querySelector","clientWidth","suckBalls","i","map","img","display","flexDirection","width","justifyContent","margin","height","background","border","borderRadius","marginRight","cursor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"../../../routes\";\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 400px;\n  overflow: hidden;\n  display: -webkit-box;\n  position: relative;\n`;\n\nconst Slide = styled.div`\n\tbackground-image: url('${props => props.src}');\n\tbackground-size: cover;\n\tbackground-position: center;\n\tbackground-repeat: no-repeat;\n\twidth: 100%;\n\theight: 400px;\n\ttransform: translateX(${props => props.translate}px);\n\ttransition: transform 0.4s ease-in-out;\n\tposition: relative;\n`;\n\nconst ArrowLeft = styled.span`\n  position: absolute;\n  z-index: 9;\n  left: 0;\n  margin-left: 40px;\n  cursor: pointer;\n  top: 50%;\n  margin-top: -10px;\n  border-top: 30px solid transparent;\n  border-bottom: 30px solid transparent;\n  border-right: 30px solid white;\n`;\nconst ArrowRight = styled.span`\n  position: absolute;\n  z-index: 9;\n  right: 0;\n  margin-right: 40px;\n  cursor: pointer;\n  width: 0;\n  height: 0;\n  top: 50%;\n  margin-top: -10px;\n  border-top: 30px solid transparent;\n  border-bottom: 30px solid transparent;\n  border-left: 30px solid white;\n`;\n\nexport default ({ link, images, autoSlide, slideCtrl, balls, arrows }) => {\n  const [index, setIndex] = useState(1);\n  const [translate, setTranslate] = useState(0);\n  useEffect(() => {\n    if (autoSlide) {\n      const interval = setInterval(() => {\n        next();\n      }, 3000);\n\n      return () => clearInterval(interval);\n    }\n  }, [index]);\n\n  useEffect(() => {\n    setIndex(slideCtrl);\n    if (slideCtrl != index)\n      setTranslate(getSlideWidth() - slideCtrl * getSlideWidth());\n  }, [slideCtrl]);\n\n  useLayoutEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setTranslate(getSlideWidth() - index * getSlideWidth());\n    });\n  });\n  function prev() {\n    if (index == 1) return;\n    setTranslate(getSlideWidth() - (index - 1) * getSlideWidth());\n    setIndex(index - 1);\n  }\n  function next() {\n    if (index == images.length) {\n      setTranslate(1);\n      setIndex(1);\n    } else {\n      setTranslate(getSlideWidth() - (index + 1) * getSlideWidth());\n\n      setIndex(index => index + 1);\n    }\n  }\n  function getSlideWidth() {\n    return document.querySelector(\".slide\")\n      ? document.querySelector(\".slide\").clientWidth\n      : 0;\n  }\n  function suckBalls(i) {\n    setIndex(i);\n    if (i != index) {\n      setTranslate(getSlideWidth() - i * getSlideWidth());\n    }\n  }\n\n  return (\n    <>\n      <Wrapper>\n        {images ? (\n          <>\n            {arrows ? (\n              <>\n                <ArrowLeft onClick={() => prev()}></ArrowLeft>\n                <ArrowRight onClick={() => next()}></ArrowRight>\n              </>\n            ) : (\n              <></>\n            )}\n\n            <>\n              {images.map((img, i) => (\n                <Slide\n                  className=\"slide\"\n                  key={i}\n                  src={img}\n                  translate={translate}\n                />\n              ))}\n            </>\n          </>\n        ) : (\n          <p> no image</p>\n        )}\n      </Wrapper>\n      {balls ? (\n        <div\n          id=\"bolas\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            width: \"50%\",\n            justifyContent: \"center\",\n            margin: \"10px auto\"\n          }}\n        >\n          {images.map((img, i) => (\n            <div\n              key={i}\n              onClick={() => suckBalls(i + 1)}\n              style={{\n                width: \"8px\",\n                height: \"8px\",\n                background: index == i + 1 ? \"black\" : \"transparent\",\n                border: \"1px solid black\",\n                borderRadius: \"100%\",\n                marginRight: \"10px\",\n                cursor: \"pointer\"\n              }}\n            />\n          ))}\n        </div>\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}