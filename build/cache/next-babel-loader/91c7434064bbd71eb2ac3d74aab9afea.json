{"ast":null,"code":"import { validateImage } from \"./validate\";\nimport setApi from \"../api\";\nexport function getCategories(cb) {\n  setApi().get(\"/categories\").then(function (response) {\n    cb(null, response.data);\n  })[\"catch\"](function (err) {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function deleteCategory(id, cb) {\n  console.log(\"del id => \", id);\n  setApi()[\"delete\"](\"/categories/\".concat(id)).then(function (response) {\n    cb(null, response.data);\n  })[\"catch\"](function (err) {\n    cb(err.response ? err.response.data : err.toString());\n  });\n}\nexport function editCategory(id, _ref, cb) {\n  var name = _ref.name,\n      description = _ref.description,\n      file = _ref.file,\n      sets = _ref.sets,\n      getItens = _ref.getItens,\n      close = _ref.close;\n\n  if (validateImage([\"png\"], 100, file)) {\n    if (file) {\n      var formData = new FormData();\n      formData.append(\"icon\", file);\n      setApi().put(\"/categories/\".concat(id, \"?name=\").concat(name, \"&description=\").concat(description), formData).then(function (response) {\n        cb(null, response.data);\n      })[\"catch\"](function (err) {\n        cb(err.response ? err.response.data : err.toString());\n      });\n    } else {\n      setApi().put(\"/categories/\".concat(id, \"?name=\").concat(name, \"&description=\").concat(description)).then(function (response) {\n        cb(null, response.data);\n      })[\"catch\"](function (err) {\n        cb(err.response ? err.response.data : err.toString());\n      });\n    }\n  } else {\n    cb(\"Suba imagens PNG com no máximo 100KB\");\n  }\n}","map":{"version":3,"sources":["/home/ti/Projects/WebProjects/multcostura/web-multcostura/src/utils/categories.js"],"names":["validateImage","setApi","getCategories","cb","get","then","response","data","err","toString","deleteCategory","id","console","log","editCategory","name","description","file","sets","getItens","close","formData","FormData","append","put"],"mappings":"AAAA,SAASA,aAAT,QAA8B,YAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,SAASC,aAAT,CAAuBC,EAAvB,EAA2B;AAChCF,EAAAA,MAAM,GACHG,GADH,CACO,aADP,EAEGC,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBH,IAAAA,EAAE,CAAC,IAAD,EAAOG,QAAQ,CAACC,IAAhB,CAAF;AACD,GAJH,WAKS,UAAAC,GAAG,EAAI;AACZL,IAAAA,EAAE,CAACK,GAAG,CAACF,QAAJ,GAAeE,GAAG,CAACF,QAAJ,CAAaC,IAA5B,GAAmCC,GAAG,CAACC,QAAJ,EAApC,CAAF;AACD,GAPH;AAQD;AAED,OAAO,SAASC,cAAT,CAAwBC,EAAxB,EAA4BR,EAA5B,EAAgC;AACrCS,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,EAA1B;AAEAV,EAAAA,MAAM,YAAN,uBACyBU,EADzB,GAEGN,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBH,IAAAA,EAAE,CAAC,IAAD,EAAOG,QAAQ,CAACC,IAAhB,CAAF;AACD,GAJH,WAKS,UAAAC,GAAG,EAAI;AACZL,IAAAA,EAAE,CAACK,GAAG,CAACF,QAAJ,GAAeE,GAAG,CAACF,QAAJ,CAAaC,IAA5B,GAAmCC,GAAG,CAACC,QAAJ,EAApC,CAAF;AACD,GAPH;AAQD;AAED,OAAO,SAASK,YAAT,CACLH,EADK,QAGLR,EAHK,EAIL;AAAA,MAFEY,IAEF,QAFEA,IAEF;AAAA,MAFQC,WAER,QAFQA,WAER;AAAA,MAFqBC,IAErB,QAFqBA,IAErB;AAAA,MAF2BC,IAE3B,QAF2BA,IAE3B;AAAA,MAFiCC,QAEjC,QAFiCA,QAEjC;AAAA,MAF2CC,KAE3C,QAF2CA,KAE3C;;AACA,MAAIpB,aAAa,CAAC,CAAC,KAAD,CAAD,EAAU,GAAV,EAAeiB,IAAf,CAAjB,EAAuC;AACrC,QAAIA,IAAJ,EAAU;AACR,UAAMI,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBN,IAAxB;AACAhB,MAAAA,MAAM,GACHuB,GADH,uBAEmBb,EAFnB,mBAE8BI,IAF9B,0BAEkDC,WAFlD,GAGIK,QAHJ,EAKGhB,IALH,CAKQ,UAAAC,QAAQ,EAAI;AAChBH,QAAAA,EAAE,CAAC,IAAD,EAAOG,QAAQ,CAACC,IAAhB,CAAF;AACD,OAPH,WAQS,UAAAC,GAAG,EAAI;AACZL,QAAAA,EAAE,CAACK,GAAG,CAACF,QAAJ,GAAeE,GAAG,CAACF,QAAJ,CAAaC,IAA5B,GAAmCC,GAAG,CAACC,QAAJ,EAApC,CAAF;AACD,OAVH;AAWD,KAdD,MAcO;AACLR,MAAAA,MAAM,GACHuB,GADH,uBACsBb,EADtB,mBACiCI,IADjC,0BACqDC,WADrD,GAEGX,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBH,QAAAA,EAAE,CAAC,IAAD,EAAOG,QAAQ,CAACC,IAAhB,CAAF;AACD,OAJH,WAKS,UAAAC,GAAG,EAAI;AACZL,QAAAA,EAAE,CAACK,GAAG,CAACF,QAAJ,GAAeE,GAAG,CAACF,QAAJ,CAAaC,IAA5B,GAAmCC,GAAG,CAACC,QAAJ,EAApC,CAAF;AACD,OAPH;AAQD;AACF,GAzBD,MAyBO;AACLN,IAAAA,EAAE,CAAC,sCAAD,CAAF;AACD;AACF","sourcesContent":["import { validateImage } from \"./validate\";\nimport setApi from \"../api\";\n\nexport function getCategories(cb) {\n  setApi()\n    .get(\"/categories\")\n    .then(response => {\n      cb(null, response.data);\n    })\n    .catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n}\n\nexport function deleteCategory(id, cb) {\n  console.log(\"del id => \", id);\n\n  setApi()\n    .delete(`/categories/${id}`)\n    .then(response => {\n      cb(null, response.data);\n    })\n    .catch(err => {\n      cb(err.response ? err.response.data : err.toString());\n    });\n}\n\nexport function editCategory(\n  id,\n  { name, description, file, sets, getItens, close },\n  cb\n) {\n  if (validateImage([\"png\"], 100, file)) {\n    if (file) {\n      const formData = new FormData();\n      formData.append(\"icon\", file);\n      setApi()\n        .put(\n          `/categories/${id}?name=${name}&description=${description}`,\n          formData\n        )\n        .then(response => {\n          cb(null, response.data);\n        })\n        .catch(err => {\n          cb(err.response ? err.response.data : err.toString());\n        });\n    } else {\n      setApi()\n        .put(`/categories/${id}?name=${name}&description=${description}`)\n        .then(response => {\n          cb(null, response.data);\n        })\n        .catch(err => {\n          cb(err.response ? err.response.data : err.toString());\n        });\n    }\n  } else {\n    cb(\"Suba imagens PNG com no máximo 100KB\");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}