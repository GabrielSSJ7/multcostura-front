{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport setApi from \"../../../api\";\nimport { Link } from \"../../../../routes\";\nimport { Button } from \"../../../static/styled-components/base\";\nimport { Creators as ManufacturerCreators } from \"../../../ducks/manufacturer\";\nimport { Creators as UtilsCreators } from \"../../../ducks/utils\";\nimport { getManufacturers, deleteManufacturer, editManufacturer } from \"../../../utils/manufacturers\";\nimport Message from \"../../utils/Message\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TextArea from \"@material-ui/core/TextareaAutosize\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nexport default function manufacturers() {\n  var _useSelector = useSelector(function (state) {\n    return state.Utils;\n  }),\n      message = _useSelector.message,\n      messageType = _useSelector.messageType,\n      messageColor = _useSelector.messageColor;\n\n  var _useSelector2 = useSelector(function (state) {\n    console.log(state.Manufacturer);\n    return state.Manufacturer;\n  }),\n      manufacturers = _useSelector2.manufacturers;\n\n  var _useState = useState(false),\n      visible = _useState[0],\n      setVisible = _useState[1];\n\n  var _useState2 = useState(false),\n      diag = _useState2[0],\n      setDiag = _useState2[1];\n\n  var _useState3 = useState({}),\n      manufacturerToEdit = _useState3[0],\n      setManufacturerToEdit = _useState3[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    function _getManufacturers() {\n      getManufacturers(function (err, mans) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage());\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n\n        dispatch(ManufacturerCreators.loadManufacturers(mans));\n      });\n    }\n\n    _getManufacturers();\n  }, []);\n\n  function handleClose() {\n    setDiag(false);\n    setManufacturerToEdit({});\n  }\n\n  function handleOpen(manufacturer) {\n    setManufacturerToEdit(manufacturer);\n    setDiag(true);\n  }\n\n  function editMan(man) {\n    editMan(man.id, _objectSpread({}, man), function (err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        handleClose();\n        return;\n      }\n\n      getManufacturers(function (err, mans) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage(err));\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n\n        dispatch(CategoriesCreators.loadManufacturers(mans));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Editado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      handleClose();\n      setVisible(true);\n    });\n  }\n\n  function delMan(id) {\n    deleteManufacturer(id, function (err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        return;\n      }\n\n      getManufacturers(function (err, mans) {\n        dispatch(ManufacturerCreators.loadManufacturers(mans));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Deletado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      setVisible(true);\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(\"h3\", {\n    className: \"main-title\",\n    style: {\n      color: \"rgb(129, 22, 27)\"\n    }\n  }, \"Lista de fabricantes\"), __jsx(\"div\", null, __jsx(Dialog, {\n    open: diag,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\"\n  }, __jsx(DialogTitle, {\n    id: \"form-dialog-title\"\n  }, \"Editar categoria\"), __jsx(DialogContent, null, __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"name\",\n    label: \"Nome\",\n    type: \"text\",\n    value: manufacturerToEdit.name,\n    onChange: function onChange(e) {\n      return setManufacturerToEdit(_objectSpread({}, manufacturerToEdit, {\n        name: e.target.value\n      }));\n    },\n    fullWidth: true\n  }), __jsx(TextField, {\n    autoFocus: true,\n    margin: \"dense\",\n    id: \"description\",\n    label: \"Descri\\xE7\\xE3o\",\n    type: \"text\",\n    value: manufacturerToEdit.description,\n    onChange: function onChange(e) {\n      return setManufacturerToEdit(_objectSpread({}, manufacturerToEdit, {\n        description: e.target.value\n      }));\n    },\n    fullWidth: true\n  })), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Cancelar\"), __jsx(Button, {\n    onClick: function onClick() {\n      return editMan(manufacturerToEdit);\n    },\n    color: \"primary\"\n  }, \"Salvar\")))), __jsx(DivListCategories, null, manufacturers.map(function (manufacturer, id) {\n    return __jsx(ManufacturerContainer, {\n      flexDirection: \"row\",\n      justifyContent: \"space-between\",\n      style: {\n        borderBottom: \"1px solid lightgrey\"\n      },\n      key: id\n    }, __jsx(ManufacturerContainer, {\n      flexDirection: \"column\",\n      style: {\n        display: \"flex\",\n        justifyContent: \"column\"\n      }\n    }, __jsx(\"p\", {\n      style: {\n        fontWeight: \"200\"\n      }\n    }, \"Nome: \", manufacturer.name), __jsx(\"p\", {\n      style: {\n        fontWeight: \"200\"\n      }\n    }, \"Descri\\xE7\\xE3o: \", manufacturer.description), __jsx(\"p\", null, \"Logo:\", __jsx(\"span\", {\n      style: {\n        marginLeft: \"10px\"\n      }\n    }, __jsx(\"img\", {\n      src: manufacturer.appIcon,\n      style: {\n        width: \"120px\"\n      }\n    })))), __jsx(ManufacturerContainer, {\n      flexDirection: \"column\",\n      style: {\n        marginRight: \"10px\",\n        marginLeft: \"10px\"\n      }\n    }, __jsx(Button, {\n      onClick: function onClick() {\n        return handleOpen(manufacturer);\n      }\n    }, \"Editar\"), __jsx(Button, {\n      onClick: function onClick() {\n        return delMan(manufacturer.id);\n      }\n    }, \"Apagar\")));\n  })), visible ? __jsx(Message, {\n    result: messageType,\n    color: messageColor,\n    message: message\n  }) : \"\");\n}\nexport var Hr = styled.hr.withConfig({\n  displayName: \"ListManufacturers__Hr\",\n  componentId: \"sc-31sht8-0\"\n})([\"width:50%;\"]);\nexport var Subcontainer = styled.div.withConfig({\n  displayName: \"ListManufacturers__Subcontainer\",\n  componentId: \"sc-31sht8-1\"\n})([\"padding:0 15px;\"]);\nexport var ImageContainer = styled.div.withConfig({\n  displayName: \"ListManufacturers__ImageContainer\",\n  componentId: \"sc-31sht8-2\"\n})([\"img{max-width:120px;}\"]);\nexport var DivListCategories = styled.div.withConfig({\n  displayName: \"ListManufacturers__DivListCategories\",\n  componentId: \"sc-31sht8-3\"\n})([\"max-height:550px;overflow:auto;::-webkit-scrollbar{width:10px;}::-webkit-scrollbar-track{background:#f1f1f1;}::-webkit-scrollbar-thumb{background:rgb(129,22,27);}::-webkit-scrollbar-thumb:hover{background:#555;}\"]);\nexport var ManufacturerContainer = styled.div.withConfig({\n  displayName: \"ListManufacturers__ManufacturerContainer\",\n  componentId: \"sc-31sht8-4\"\n})([\"display:flex;flex-direction:\", \";justify-content:\", \";\"], function (props) {\n  return props.flexDirection;\n}, function (props) {\n  return props.justifyContent;\n});","map":{"version":3,"sources":["/home/ti/Projects/WebProjects/multcostura/web-multcostura/src/components/admin/manufacturers/ListManufacturers.jsx"],"names":["React","useState","useEffect","styled","useSelector","useDispatch","setApi","Link","Button","Creators","ManufacturerCreators","UtilsCreators","getManufacturers","deleteManufacturer","editManufacturer","Message","TextField","TextArea","Dialog","DialogActions","DialogContent","DialogTitle","manufacturers","state","Utils","message","messageType","messageColor","console","log","Manufacturer","visible","setVisible","diag","setDiag","manufacturerToEdit","setManufacturerToEdit","dispatch","_getManufacturers","err","mans","changeMessage","changeMessageType","changeMessageColor","loadManufacturers","handleClose","handleOpen","manufacturer","editMan","man","id","data","CategoriesCreators","delMan","color","name","e","target","value","description","map","borderBottom","display","justifyContent","fontWeight","marginLeft","appIcon","width","marginRight","Hr","hr","Subcontainer","div","ImageContainer","DivListCategories","ManufacturerContainer","props","flexDirection"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport setApi from \"../../../api\";\nimport { Link } from \"../../../../routes\";\n\nimport { Button } from \"../../../static/styled-components/base\";\nimport { Creators as ManufacturerCreators } from \"../../../ducks/manufacturer\";\nimport { Creators as UtilsCreators } from \"../../../ducks/utils\";\n\nimport { getManufacturers, deleteManufacturer, editManufacturer } from \"../../../utils/manufacturers\";\n\nimport Message from \"../../utils/Message\";\nimport TextField from \"@material-ui/core/TextField\";\nimport TextArea from \"@material-ui/core/TextareaAutosize\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function manufacturers() {\n  const { message, messageType, messageColor } = useSelector(\n    state => state.Utils\n  );\n  const { manufacturers } = useSelector(state => {\n    console.log(state.Manufacturer);\n    return state.Manufacturer;\n  });\n  const [visible, setVisible] = useState(false);\n  const [diag, setDiag] = useState(false);\n  const [manufacturerToEdit, setManufacturerToEdit] = useState({});\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    function _getManufacturers() {\n      getManufacturers(function(err, mans) {\n        if (err) {\n          dispatch(UtilsCreators.changeMessage());\n          dispatch(UtilsCreators.changeMessageType(false));\n          dispatch(UtilsCreators.changeMessageColor(\"red\"));\n          return;\n        }\n        dispatch(ManufacturerCreators.loadManufacturers(mans));\n      });\n    }\n    _getManufacturers();\n  }, []);\n\n  function handleClose() {\n    setDiag(false);\n    setManufacturerToEdit({});\n  }\n\n  function handleOpen(manufacturer) {\n    setManufacturerToEdit(manufacturer);\n    setDiag(true);\n  }\n\n  function editMan(man) {\n    editMan(man.id, { ...man }, function(err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        handleClose();\n        return;\n      }\n      getManufacturers(function(err, mans) {\n          if (err) { \n            dispatch(UtilsCreators.changeMessage(err));\n            dispatch(UtilsCreators.changeMessageType(false));\n            dispatch(UtilsCreators.changeMessageColor(\"red\"));\n            return\n          }\n        dispatch(CategoriesCreators.loadManufacturers(mans));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Editado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      handleClose();\n      setVisible(true);\n    });\n  }\n\n  function delMan(id) {\n    deleteManufacturer(id, function(err, data) {\n      if (err) {\n        dispatch(UtilsCreators.changeMessage(err));\n        dispatch(UtilsCreators.changeMessageType(false));\n        dispatch(UtilsCreators.changeMessageColor(\"red\"));\n        setVisible(true);\n        return;\n      }\n      getManufacturers(function(err, mans) {\n        dispatch(ManufacturerCreators.loadManufacturers(mans));\n      });\n      dispatch(UtilsCreators.changeMessage(\"Deletado com sucesso\"));\n      dispatch(UtilsCreators.changeMessageType(true));\n      dispatch(UtilsCreators.changeMessageColor(\"green\"));\n      setVisible(true);\n    });\n  }\n\n  return (\n    <>\n      <h3 className=\"main-title\" style={{ color: \"rgb(129, 22, 27)\" }}>\n        Lista de fabricantes\n      </h3>\n\n      <div>\n        <Dialog\n          open={diag}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Editar categoria</DialogTitle>\n          <DialogContent>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Nome\"\n              type=\"text\"\n              value={manufacturerToEdit.name}\n              onChange={e =>\n                setManufacturerToEdit({\n                  ...manufacturerToEdit,\n                  name: e.target.value\n                })\n              }\n              fullWidth\n            />\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"description\"\n              label=\"Descrição\"\n              type=\"text\"\n              value={manufacturerToEdit.description}\n              onChange={e =>\n                setManufacturerToEdit({\n                  ...manufacturerToEdit,\n                  description: e.target.value\n                })\n              }\n              fullWidth\n            />\n\n            {/* <Upload\n                  labelInputFile=\"Ícone\"\n                  imageURL={manufacturer.appIcon}\n                  onRef={ref => (_this.child = ref)}\n                /> */}\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancelar\n            </Button>\n            <Button onClick={() => editMan(manufacturerToEdit)} color=\"primary\">\n              Salvar\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n\n      <DivListCategories>\n        {manufacturers.map((manufacturer, id) => (\n          <ManufacturerContainer\n            flexDirection=\"row\"\n            justifyContent=\"space-between\"\n            style={{ borderBottom: \"1px solid lightgrey\" }}\n            key={id}\n          >\n            <ManufacturerContainer\n              flexDirection=\"column\"\n              style={{ display: \"flex\", justifyContent: \"column\" }}\n            >\n              <p style={{ fontWeight: \"200\" }}>Nome: {manufacturer.name}</p>\n              <p style={{ fontWeight: \"200\" }}>\n                Descrição: {manufacturer.description}\n              </p>\n              <p>\n                Logo:\n                <span style={{ marginLeft: \"10px\" }}>\n                  <img src={manufacturer.appIcon} style={{ width: \"120px\" }} />\n                </span>\n              </p>\n            </ManufacturerContainer>\n            <ManufacturerContainer\n              flexDirection=\"column\"\n              style={{ marginRight: \"10px\", marginLeft: \"10px\" }}\n            >\n              <Button onClick={() => handleOpen(manufacturer)}>Editar</Button>\n              <Button onClick={() => delMan(manufacturer.id)}>Apagar</Button>\n            \n            </ManufacturerContainer>\n          </ManufacturerContainer>\n        ))}\n      </DivListCategories>\n\n      {visible ? (\n        <Message result={messageType} color={messageColor} message={message} />\n      ) : (\n        \"\"\n      )}\n    </>\n  );\n}\n\nexport const Hr = styled.hr`\n  width: 50%;\n`;\n\nexport const Subcontainer = styled.div`\n  padding: 0 15px;\n`;\n\nexport const ImageContainer = styled.div`\n  img {\n    max-width: 120px;\n  }\n`;\n\nexport const DivListCategories = styled.div`\n  max-height: 550px;\n  overflow: auto;\n  /* width */\n  ::-webkit-scrollbar {\n    width: 10px;\n  }\n\n  /* Track */\n  ::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n\n  /* Handle */\n  ::-webkit-scrollbar-thumb {\n    background: rgb(129, 22, 27);\n  }\n\n  /* Handle on hover */\n  ::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nexport const ManufacturerContainer = styled.div`\n  display: flex;\n  flex-direction: ${props => props.flexDirection};\n  justify-content: ${props => props.justifyContent};\n`;\n"]},"metadata":{},"sourceType":"module"}