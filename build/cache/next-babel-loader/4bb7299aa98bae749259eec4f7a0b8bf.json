{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nvar _createReducer;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createActions, createReducer } from \"reduxsauce\";\n\nvar _createActions = createActions({\n  changeMessage: [\"message\"],\n  changeMessageType: [\"messageType\"],\n  changeMessageColor: [\"messageColor\"]\n}),\n    Types = _createActions.Types,\n    Creators = _createActions.Creators;\n\nexport { Types, Creators };\nvar INITIAL_STATE = {\n  message: \"\",\n  messageType: false,\n  messageColor: \"\"\n};\n\nvar changeMessage = function changeMessage() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return _objectSpread({}, state, {\n    message: action.message\n  });\n};\n\nvar changeMessageType = function changeMessageType() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return _objectSpread({}, state, {\n    messageType: action.messageType\n  });\n};\n\nvar changeMessageColor = function changeMessageColor() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return _objectSpread({}, state, {\n    messageColor: action.messageColor\n  });\n};\n\nexport default createReducer(INITIAL_STATE, (_createReducer = {}, _defineProperty(_createReducer, Types.CHANGE_MESSAGE, changeMessage), _defineProperty(_createReducer, Types.CHANGE_MESSAGE_TYPE, changeMessageType), _defineProperty(_createReducer, Types.CHANGE_MESSAGE_COLOR, changeMessageColor), _createReducer));","map":{"version":3,"sources":["/home/ti/Projects/WebProjects/multcostura/web-multcostura/src/ducks/utils.js"],"names":["createActions","createReducer","changeMessage","changeMessageType","changeMessageColor","Types","Creators","INITIAL_STATE","message","messageType","messageColor","state","action","CHANGE_MESSAGE","CHANGE_MESSAGE_TYPE","CHANGE_MESSAGE_COLOR"],"mappings":";;;;;;;;;;;;;;AAAA,SAASA,aAAT,EAAwBC,aAAxB,QAA6C,YAA7C;;qBAEmCD,aAAa,CAAC;AAC/CE,EAAAA,aAAa,EAAE,CAAC,SAAD,CADgC;AAE/CC,EAAAA,iBAAiB,EAAE,CAAC,aAAD,CAF4B;AAG/CC,EAAAA,kBAAkB,EAAE,CAAC,cAAD;AAH2B,CAAD,C;IAAjCC,K,kBAAAA,K;IAAOC,Q,kBAAAA,Q;;;AAKtB,IAAMC,aAAa,GAAG;AACpBC,EAAAA,OAAO,EAAE,EADW;AAEpBC,EAAAA,WAAW,EAAE,KAFO;AAGpBC,EAAAA,YAAY,EAAE;AAHM,CAAtB;;AAKA,IAAMR,aAAa,GAAG,SAAhBA,aAAgB;AAAA,MAACS,KAAD,uEAASJ,aAAT;AAAA,MAAwBK,MAAxB;AAAA,2BACjBD,KADiB;AAEpBH,IAAAA,OAAO,EAAEI,MAAM,CAACJ;AAFI;AAAA,CAAtB;;AAKA,IAAML,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAACQ,KAAD,uEAASJ,aAAT;AAAA,MAAwBK,MAAxB;AAAA,2BACrBD,KADqB;AAExBF,IAAAA,WAAW,EAAEG,MAAM,CAACH;AAFI;AAAA,CAA1B;;AAKA,IAAML,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,MAACO,KAAD,uEAASJ,aAAT;AAAA,MAAwBK,MAAxB;AAAA,2BACtBD,KADsB;AAEzBD,IAAAA,YAAY,EAAEE,MAAM,CAACF;AAFI;AAAA,CAA3B;;AAIA,eAAeT,aAAa,CAACM,aAAD,wDACzBF,KAAK,CAACQ,cADmB,EACFX,aADE,mCAEzBG,KAAK,CAACS,mBAFmB,EAEGX,iBAFH,mCAGzBE,KAAK,CAACU,oBAHmB,EAGIX,kBAHJ,mBAA5B","sourcesContent":["import { createActions, createReducer } from \"reduxsauce\";\n\nexport const { Types, Creators } = createActions({\n  changeMessage: [\"message\"],\n  changeMessageType: [\"messageType\"],\n  changeMessageColor: [\"messageColor\"]\n});\nconst INITIAL_STATE = {\n  message: \"\",\n  messageType: false,\n  messageColor: \"\"\n};\nconst changeMessage = (state = INITIAL_STATE, action) => ({\n  ...state,\n  message: action.message\n});\n\nconst changeMessageType = (state = INITIAL_STATE, action) => ({\n  ...state,\n  messageType: action.messageType\n});\n\nconst changeMessageColor = (state = INITIAL_STATE, action) => ({\n  ...state,\n  messageColor: action.messageColor\n});\nexport default createReducer(INITIAL_STATE, {\n  [Types.CHANGE_MESSAGE]: changeMessage,\n  [Types.CHANGE_MESSAGE_TYPE]: changeMessageType,\n  [Types.CHANGE_MESSAGE_COLOR]: changeMessageColor\n});\n"]},"metadata":{},"sourceType":"module"}