{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\nimport Template from \"../../../components/Template\";\nimport Nav from \"../../../components/Admin/Nav\";\nimport { Container, Hr, Button } from \"../../../components/Admin/baseStyle\";\nimport EditMachine from \"../../../components/Admin/Machines/EditMachine/index\";\nimport Message from \"../../../components/Message\";\nexport default function Machine(_ref) {\n  var id = _ref.id;\n\n  var _useState = useState({}),\n      machine = _useState[0],\n      setMachine = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      message = _useState2[0],\n      setMessage = _useState2[1];\n\n  var _useState3 = useState(false),\n      result = _useState3[0],\n      setResult = _useState3[1];\n\n  var _useState4 = useState(false),\n      visible = _useState4[0],\n      setVisible = _useState4[1];\n\n  var _useState5 = useState(\"red\"),\n      color = _useState5[0],\n      setColor = _useState5[1];\n\n  useEffect(function () {\n    function _getMachine() {\n      getMachine();\n    }\n\n    _getMachine();\n  }, []);\n  return __jsx(Template, null, __jsx(Nav, null), __jsx(Container, null, __jsx(\"div\", {\n    style: {\n      width: \"100%\"\n    }\n  }, __jsx(EditMachine, {\n    machine: machine\n  }))));\n\n  function getMachine() {\n    axios.get(\"/machine/\".concat(id)).then(function (response) {\n      console.log(response.data);\n      setMachine(response.data);\n    })[\"catch\"](function (err) {\n      console.log(\"ERR => \", err);\n\n      _setMessage(false, err.response ? err.response.data : \"\", true);\n    });\n  }\n\n  function _setMessage(result, message, visible, color) {\n    setResult(result);\n    setMessage(message);\n    setVisible(visible);\n    setColor(color);\n  }\n}\n\nMachine.getInitialProps = function _callee(_ref2) {\n  var query;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref2.query;\n          console.log(\"query => \", query);\n          return _context.abrupt(\"return\", {\n            id: query.id\n          });\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/home/ti/Projects/WebProjects/multcostura/web-multcostura/pages/admin/machines/machine.js"],"names":["React","useState","useEffect","useRouter","axios","Template","Nav","Container","Hr","Button","EditMachine","Message","Machine","id","machine","setMachine","message","setMessage","result","setResult","visible","setVisible","color","setColor","_getMachine","getMachine","width","get","then","response","console","log","data","err","_setMessage","getInitialProps","query"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,GAAP,MAAgB,+BAAhB;AACA,SAASC,SAAT,EAAoBC,EAApB,EAAwBC,MAAxB,QAAsC,qCAAtC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AAEA,eAAe,SAASC,OAAT,OAAyB;AAAA,MAANC,EAAM,QAANA,EAAM;;AAAA,kBACRZ,QAAQ,CAAC,EAAD,CADA;AAAA,MAC/Ba,OAD+B;AAAA,MACtBC,UADsB;;AAAA,mBAERd,QAAQ,CAAC,EAAD,CAFA;AAAA,MAE/Be,OAF+B;AAAA,MAEtBC,UAFsB;;AAAA,mBAGVhB,QAAQ,CAAC,KAAD,CAHE;AAAA,MAG/BiB,MAH+B;AAAA,MAGvBC,SAHuB;;AAAA,mBAIRlB,QAAQ,CAAC,KAAD,CAJA;AAAA,MAI/BmB,OAJ+B;AAAA,MAItBC,UAJsB;;AAAA,mBAKZpB,QAAQ,CAAC,KAAD,CALI;AAAA,MAK/BqB,KAL+B;AAAA,MAKxBC,QALwB;;AAOtCrB,EAAAA,SAAS,CAAC,YAAM;AACd,aAASsB,WAAT,GAAuB;AACrBC,MAAAA,UAAU;AACX;;AACDD,IAAAA,WAAW;AACZ,GALQ,EAKN,EALM,CAAT;AAMA,SACE,MAAC,QAAD,QACE,MAAC,GAAD,OADF,EAEE,MAAC,SAAD,QACE;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT;AAAZ,KACE,MAAC,WAAD;AAAa,IAAA,OAAO,EAAEZ;AAAtB,IADF,CADF,CAFF,CADF;;AAWA,WAASW,UAAT,GAAsB;AACpBrB,IAAAA,KAAK,CACFuB,GADH,oBACmBd,EADnB,GAEGe,IAFH,CAEQ,UAAAC,QAAQ,EAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACAjB,MAAAA,UAAU,CAACc,QAAQ,CAACG,IAAV,CAAV;AACD,KALH,WAMS,UAAAC,GAAG,EAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,GAAvB;;AACAC,MAAAA,WAAW,CAAC,KAAD,EAAQD,GAAG,CAACJ,QAAJ,GAAeI,GAAG,CAACJ,QAAJ,CAAaG,IAA5B,GAAmC,EAA3C,EAA+C,IAA/C,CAAX;AACD,KATH;AAUD;;AACD,WAASE,WAAT,CAAqBhB,MAArB,EAA6BF,OAA7B,EAAsCI,OAAtC,EAA+CE,KAA/C,EAAsD;AACpDH,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAD,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAK,IAAAA,UAAU,CAACD,OAAD,CAAV;AACAG,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;AACF;;AAEDV,OAAO,CAACuB,eAAR,GAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT;AACxBN,UAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBK,KAAzB;AADwB,2CAEjB;AAAEvB,YAAAA,EAAE,EAAEuB,KAAK,CAACvB;AAAZ,WAFiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/router\";\nimport axios from \"axios\";\n\nimport Template from \"../../../components/Template\";\nimport Nav from \"../../../components/Admin/Nav\";\nimport { Container, Hr, Button } from \"../../../components/Admin/baseStyle\";\nimport EditMachine from \"../../../components/Admin/Machines/EditMachine/index\";\nimport Message from \"../../../components/Message\";\n\nexport default function Machine({ id }) {\n  const [machine, setMachine] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [result, setResult] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [color, setColor] = useState(\"red\");\n\n  useEffect(() => {\n    function _getMachine() {\n      getMachine();\n    }\n    _getMachine();\n  }, []);\n  return (\n    <Template>\n      <Nav />\n      <Container>\n        <div style={{ width: \"100%\" }}>\n          <EditMachine machine={machine} />\n        </div>\n      </Container>\n    </Template>\n  );\n\n  function getMachine() {\n    axios\n      .get(`/machine/${id}`)\n      .then(response => {\n        console.log(response.data);\n        setMachine(response.data);\n      })\n      .catch(err => {\n        console.log(\"ERR => \", err);\n        _setMessage(false, err.response ? err.response.data : \"\", true);\n      });\n  }\n  function _setMessage(result, message, visible, color) {\n    setResult(result);\n    setMessage(message);\n    setVisible(visible);\n    setColor(color);\n  }\n}\n\nMachine.getInitialProps = async ({ query }) => {\n  console.log(\"query => \", query);\n  return { id: query.id };\n};\n"]},"metadata":{},"sourceType":"module"}