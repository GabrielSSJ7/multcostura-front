{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Router, Link } from \"../../../../routes\";\nimport { Button } from \"../../../static/styled-components/base\";\nimport { getMachines } from \"../../../utils/machines\";\nimport { Creators as MachineCreators } from \"../../../ducks/machines\";\nimport { Creators as UtilCreators } from \"../../../ducks/utils\";\nexport default function ListMachines() {\n  var _useState = useState(true),\n      hideBtns = _useState[0],\n      setHideBtns = _useState[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.Utils;\n  }),\n      message = _useSelector.message,\n      messageType = _useSelector.messageType,\n      messageColor = _useSelector.messageColor;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.Machine;\n  }),\n      machines = _useSelector2.machines;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    function _getMachines() {\n      getMachines(function (err, machines) {\n        if (err) {\n          dispatch(UtilCreators.changeMessage(err));\n          dispatch(UtilCreators.changeType(false));\n          dispatch(UtilCreators.changeColor(\"red\"));\n          return;\n        }\n\n        dispatch(MachineCreators.loadMachines(machines));\n      });\n    }\n\n    _getMachines();\n  }, []);\n  return __jsx(React.Fragment, null, hideBtns ? __jsx(React.Fragment, null, __jsx(Button, {\n    onClick: function onClick() {}\n  }, \"Filtrar por categorias\"), __jsx(Button, null, \"Filtrar por fabricantes\")) : null, __jsx(Container, null, machines.map(function (machine) {\n    return __jsx(Link, {\n      as: \"/admin/machine/\".concat(machine.id.toString()),\n      href: \"/admin/machines/machine?id=\".concat(machine.id.toString())\n    }, __jsx(CardContainer, null, __jsx(\"img\", {\n      src: machine.images[0]\n    }), __jsx(\"div\", null, __jsx(Title, null, \" \", machine.name, \" \"), __jsx(Subtitle, null, machine.description)), __jsx(Description, null, machine.mainFeatures)));\n  })));\n\n  function navigateToMachine(id) {\n    Router.push(\"/admin/machine/machine\", \"/machine/machine/[id]\");\n  }\n}\nvar Container = styled.div.withConfig({\n  displayName: \"ListMachines__Container\",\n  componentId: \"um70bv-0\"\n})([\"display:flex;flex-direction:row;width:100%;flex-wrap:wrap;justify-content:center;\"]);\nvar CardContainer = styled.div.withConfig({\n  displayName: \"ListMachines__CardContainer\",\n  componentId: \"um70bv-1\"\n})([\"min-width:250px;max-width:250px;max-height:300px;overflow:hidden;cursor:pointer;display:flex;flex-direction:column;flex-wrap:no-wrap;margin-bottom:10px;margin-right:15px;img{width:100%;max-width:230px;display:block;margin:auto}padding:15px;:hover{box-shadow:0 14px 28px rgba(0,0,0,0.25),0 10px 10px rgba(0,0,0,0.22);}box-shadow:0 3px 6px rgba(0,0,0,0.16),0 3px 6px rgba(0,0,0,0.23);}\"]);\nvar Title = styled.p.withConfig({\n  displayName: \"ListMachines__Title\",\n  componentId: \"um70bv-2\"\n})([\"font-size:22px;margin:0 15px;\"]);\nvar Subtitle = styled.p.withConfig({\n  displayName: \"ListMachines__Subtitle\",\n  componentId: \"um70bv-3\"\n})([\"color:lightgrey;margin:0 15px;\"]);\nvar Description = styled.p.withConfig({\n  displayName: \"ListMachines__Description\",\n  componentId: \"um70bv-4\"\n})([\"color:grey;margin:15px 15px;\"]);","map":{"version":3,"sources":["/home/ti/Projects/WebProjects/multcostura/web-multcostura/src/components/admin/machines/ListMachines.jsx"],"names":["React","useState","useEffect","styled","useSelector","useDispatch","Router","Link","Button","getMachines","Creators","MachineCreators","UtilCreators","ListMachines","hideBtns","setHideBtns","state","Utils","message","messageType","messageColor","Machine","machines","dispatch","_getMachines","err","changeMessage","changeType","changeColor","loadMachines","map","machine","id","toString","images","name","description","mainFeatures","navigateToMachine","push","Container","div","CardContainer","Title","p","Subtitle","Description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Router, Link } from \"../../../../routes\";\nimport { Button } from \"../../../static/styled-components/base\";\nimport { getMachines } from \"../../../utils/machines\";\nimport { Creators as MachineCreators } from \"../../../ducks/machines\";\nimport { Creators as UtilCreators } from \"../../../ducks/utils\";\n\nexport default function ListMachines() {\n  const [hideBtns, setHideBtns] = useState(true);\n  \n\n  const { message, messageType, messageColor } = useSelector(\n    state => state.Utils\n  );\n  const { machines } = useSelector(state => state.Machine);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    function _getMachines() {\n      getMachines(function(err, machines) {\n        if (err) {\n          dispatch(UtilCreators.changeMessage(err));\n          dispatch(UtilCreators.changeType(false));\n          dispatch(UtilCreators.changeColor(\"red\"));\n          return;\n        }\n        dispatch(MachineCreators.loadMachines(machines));\n      });\n    }\n    _getMachines();\n  }, []);\n\n  return (\n    <>\n      {hideBtns ? (\n        <>\n          <Button onClick={() => {}}>Filtrar por categorias</Button>\n\n          <Button>Filtrar por fabricantes</Button>\n        </>\n      ) : null}\n      <Container>\n        {machines.map(machine => (\n          <Link\n            as={`/admin/machine/${machine.id.toString()}`}\n            href={`/admin/machines/machine?id=${machine.id.toString()}`}\n          >\n            <CardContainer>\n              <img src={machine.images[0]} />\n              <div>\n                <Title> {machine.name} </Title>\n                <Subtitle>{machine.description}</Subtitle>\n              </div>\n              <Description>{machine.mainFeatures}</Description>\n            </CardContainer>\n          </Link>\n        ))}\n      </Container>\n    </>\n  );\n\n  function navigateToMachine(id) {\n    Router.push(\"/admin/machine/machine\", \"/machine/machine/[id]\");\n  }\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst CardContainer = styled.div`\n\tmin-width: 250px;\n\tmax-width: 250px;\n\tmax-height: 300px;\n\toverflow: hidden;\n\tcursor: pointer;\n\tdisplay: flex;\n\tflex-direction: column;\n\tflex-wrap: no-wrap;\n\tmargin-bottom: 10px;\n\tmargin-right: 15px;\n\timg {\n\t\twidth: 100%;\n\t\tmax-width: 230px;\n\t\tdisplay: block;\n\t\tmargin: auto\n\t}\n\tpadding: 15px;\n\t:hover {\n\t\tbox-shadow: 0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);\n\t}\n\tbox-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\n\n}\n`;\nconst Title = styled.p`\n  font-size: 22px;\n  margin: 0 15px;\n`;\nconst Subtitle = styled.p`\n  color: lightgrey;\n  margin: 0 15px;\n`;\nconst Description = styled.p`\n  color: grey;\n  margin: 15px 15px;\n`;\n"]},"metadata":{},"sourceType":"module"}